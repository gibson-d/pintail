# Editted 3-17-2023
# Load data
setwd('//r2d2.cnre.vt.edu/R2D2/Dan_G/Pintail/Data')
load('NOPI_2_25_2023_deficits_2chain.rdata')

mcmcList1 <- file_list[[1]]
mcmcList2 <- file_list[[2]]

library(MCMCvis)
library(ggplot2)
library(ggdist)
library(see)
library(dplyr)
library(abind)
library(ggpubr)

mod <- 2
n.chains <- 2
ch1 <- dim(mcmcList1$chain2)[1]
ch2 <- dim(mcmcList2$chain2)[1]
keep1   <- seq(from = 2001,  to = ch1, by = 1) 
keep2   <- seq(from = 7501,  to = ch2, by = 10)
samples <- sample <- length(keep1)*n.chains

keep1 <- c(keep1, keep1+ ch1) #, keep1 + ch1*2)
keep2 <- c(keep2, keep2+ ch2) #, keep2 + ch2*2)

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# Step 1: Extract the full posterior distribution for each demographic rate
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
#Total Winter Survival (female)
s_tw_hy_central_f <- (MCMCpstr(mcmcList1, params = 'sw_hy_central_f',type = 'chains')$sw_hy_central_f[,keep1])
s_tw_hy_pacific_f <- (MCMCpstr(mcmcList1, params = 'sw_hy_pacific_f',type = 'chains')$sw_hy_pacific_f[,keep1])
s_tw_ad_central_f <- (MCMCpstr(mcmcList1, params = 'sw_ad_central_f',type = 'chains')$sw_ad_central_f[,keep1])
s_tw_ad_pacific_f <- (MCMCpstr(mcmcList1, params = 'sw_ad_pacific_f',type = 'chains')$sw_ad_pacific_f[,keep1])
#Total Winter Survival (male)
s_tw_hy_central_m <- (MCMCpstr(mcmcList1, params = 'sw_hy_central_m',type = 'chains')$sw_hy_central_m[,keep1])
s_tw_hy_pacific_m <- (MCMCpstr(mcmcList1, params = 'sw_hy_pacific_m',type = 'chains')$sw_hy_pacific_m[,keep1])
s_tw_ad_central_m <- (MCMCpstr(mcmcList1, params = 'sw_ad_central_m',type = 'chains')$sw_ad_central_m[,keep1])
s_tw_ad_pacific_m <- (MCMCpstr(mcmcList1, params = 'sw_ad_pacific_m',type = 'chains')$sw_ad_pacific_m[,keep1])
#Harvest Winter Survival (female)
s_hk_hy_central_f <- (1 - MCMCpstr(mcmcList1, params = 'kappa_central',type = 'chains')$kappa_central[1,1,1:61,keep1])
s_hk_ad_central_f <- (1 - MCMCpstr(mcmcList1, params = 'kappa_central',type = 'chains')$kappa_central[2,1,1:61,keep1])
s_hk_hy_pacific_f <- (1 - MCMCpstr(mcmcList1, params = 'kappa_pacific',type = 'chains')$kappa_pacific[1,1,1:61,keep1])
s_hk_ad_pacific_f <- (1 - MCMCpstr(mcmcList1, params = 'kappa_pacific',type = 'chains')$kappa_pacific[2,1,1:61,keep1])
#Harvest Winter Survival (male)
s_hk_hy_central_m <- (1 - MCMCpstr(mcmcList1, params = 'kappa_central',type = 'chains')$kappa_central[1,2,1:61,keep1])
s_hk_ad_central_m <- (1 - MCMCpstr(mcmcList1, params = 'kappa_central',type = 'chains')$kappa_central[2,2,1:61,keep1])
s_hk_hy_pacific_m <- (1 - MCMCpstr(mcmcList1, params = 'kappa_pacific',type = 'chains')$kappa_pacific[1,2,1:61,keep1])
s_hk_ad_pacific_m <- (1 - MCMCpstr(mcmcList1, params = 'kappa_pacific',type = 'chains')$kappa_pacific[2,2,1:61,keep1])
#Natural Winter Survival (female) 
s_nw_hy_central_f <- s_tw_hy_central_f/s_hk_hy_central_f
s_nw_hy_pacific_f <- s_tw_hy_pacific_f/s_hk_ad_central_f
s_nw_ad_central_f <- s_tw_ad_central_f/s_hk_hy_pacific_f
s_nw_ad_pacific_f <- s_tw_ad_pacific_f/s_hk_ad_pacific_f
#Natural Winter Survival (male)
s_nw_hy_central_m <- s_tw_hy_central_m/s_hk_hy_central_m
s_nw_hy_pacific_m <- s_tw_hy_pacific_m/s_hk_ad_central_m
s_nw_ad_central_m <- s_tw_ad_central_m/s_hk_hy_pacific_m
s_nw_ad_pacific_m <- s_tw_ad_pacific_m/s_hk_ad_pacific_m
# Natural Summer Survival (female)
s.summer_ad_ak_f <- MCMCpstr(mcmcList1, params = 's.summer_ad_ak_f', type = 'chains')$s.summer_ad_ak_f[,keep1]
s.summer_ad_no_f <- MCMCpstr(mcmcList1, params = 's.summer_ad_no_f', type = 'chains')$s.summer_ad_no_f[,keep1]
s.summer_ad_pr_f <- MCMCpstr(mcmcList1, params = 's.summer_ad_pr_f', type = 'chains')$s.summer_ad_pr_f[,keep1]
# Natural Summer Survival (male)
s.summer_ad_ak_m <- MCMCpstr(mcmcList1, params = 's.summer_ad_ak_m', type = 'chains')$s.summer_ad_ak_m[,keep1]
s.summer_ad_no_m <- MCMCpstr(mcmcList1, params = 's.summer_ad_no_m', type = 'chains')$s.summer_ad_no_m[,keep1]
s.summer_ad_pr_m <- MCMCpstr(mcmcList1, params = 's.summer_ad_pr_m', type = 'chains')$s.summer_ad_pr_m[,keep1]
# Pre-migration survival
local_f_ak <- MCMCpstr(mcmcList2,params = 'local', type = 'chains')$local[1,keep2]
local_f_pr <- MCMCpstr(mcmcList2,params = 'local', type = 'chains')$local[2,keep2]
local_f_no <- MCMCpstr(mcmcList2,params = 'local', type = 'chains')$local[3,keep2]
local_m_ak <- MCMCpstr(mcmcList2,params = 'local', type = 'chains')$local[4,keep2]
local_m_pr <- MCMCpstr(mcmcList2,params = 'local', type = 'chains')$local[5,keep2]
local_m_no <- MCMCpstr(mcmcList2,params = 'local', type = 'chains')$local[6,keep2]

bp            <- MCMCpstr(mcmcList2, params = 'bp'   , type= 'chains')$bp[,keep1]

# Regional abundances
naf_ak       <- MCMCpstr(mcmcList1, params = 'N2F', type= 'chains')$N2F[1,,keep1]
njf_ak       <- MCMCpstr(mcmcList1, params = 'N1F', type= 'chains')$N1F[1,,keep1]
nam_ak       <- MCMCpstr(mcmcList1, params = 'N2M', type= 'chains')$N2M[1,,keep1]
njm_ak       <- MCMCpstr(mcmcList1, params = 'N1M', type= 'chains')$N1M[1,,keep1]

naf_no       <- MCMCpstr(mcmcList1, params = 'N2F', type= 'chains')$N2F[2,,keep1]
njf_no       <- MCMCpstr(mcmcList1, params = 'N1F', type= 'chains')$N1F[2,,keep1]
nam_no       <- MCMCpstr(mcmcList1, params = 'N2M', type= 'chains')$N2M[2,,keep1]
njm_no       <- MCMCpstr(mcmcList1, params = 'N1M', type= 'chains')$N1M[2,,keep1]

naf_pr       <- MCMCpstr(mcmcList1, params = 'N2F', type= 'chains')$N2F[3,,keep1]
njf_pr       <- MCMCpstr(mcmcList1, params = 'N1F', type= 'chains')$N1F[3,,keep1]
nam_pr       <- MCMCpstr(mcmcList1, params = 'N2M', type= 'chains')$N2M[3,,keep1]
njm_pr       <- MCMCpstr(mcmcList1, params = 'N1M', type= 'chains')$N1M[3,,keep1]

# Fecundity
fecundity_ak <- MCMCpstr(mcmcList1, params = 'ar' , type= 'chains')$ar[1,,keep1]
fecundity_no <- MCMCpstr(mcmcList1, params = 'ar' , type= 'chains')$ar[2,,keep1]
fecundity_pr <- MCMCpstr(mcmcList1, params = 'ar' , type= 'chains')$ar[3,,keep1]

# Regional movement rates
ak_pac <- MCMCpstr(mcmcList1, params = 'pi_ak', type= 'chains')$pi_ak[2,1:62,keep1]
no_pac <- MCMCpstr(mcmcList1, params = 'pi_no', type= 'chains')$pi_no[2,1:62,keep1]
pr_pac <- MCMCpstr(mcmcList1, params = 'pi_pr', type= 'chains')$pi_pr[2,1:62,keep1]
ak_cen <- MCMCpstr(mcmcList1, params = 'pi_ak', type= 'chains')$pi_ak[1,1:62,keep1]
no_cen <- MCMCpstr(mcmcList1, params = 'pi_no', type= 'chains')$pi_no[1,1:62,keep1]
pr_cen <- MCMCpstr(mcmcList1, params = 'pi_pr', type= 'chains')$pi_pr[1,1:62,keep1]

# Annual movements
pi_all <- MCMCpstr(mcmcList1, params = 'pi', type= 'chains')$pi[,,,keep1]


#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# Step 2: Compute realized population growth rates for Canvasbacks and Redheads given the IPM output 
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
library(matrixStats)
noyears   <- 60
n.region <- 3
lam_tot <- array(0,dim = c(noyears,samples,n.region))

F1         <- array(0,dim = c(noyears,samples,n.region))
F2         <- array(0,dim = c(noyears,samples,n.region))
Sfj_w1     <- array(0,dim = c(noyears,samples))
Sfj_w2     <- array(0,dim = c(noyears,samples))
Sfj_h1     <- array(0,dim = c(noyears,samples))
Sfj_h2     <- array(0,dim = c(noyears,samples))
Sfa_w1     <- array(0,dim = c(noyears,samples))
Sfa_w2     <- array(0,dim = c(noyears,samples))
Sfa_h1     <- array(0,dim = c(noyears,samples))
Sfa_h2     <- array(0,dim = c(noyears,samples))

Smj_w1     <- array(0,dim = c(noyears,samples))
Smj_w2     <- array(0,dim = c(noyears,samples))
Smj_h1     <- array(0,dim = c(noyears,samples))
Smj_h2     <- array(0,dim = c(noyears,samples))
Sma_w1     <- array(0,dim = c(noyears,samples))
Sma_w2     <- array(0,dim = c(noyears,samples))
Sma_h1     <- array(0,dim = c(noyears,samples))
Sma_h2     <- array(0,dim = c(noyears,samples))

Sfj2       <- array(0,dim = c(noyears,samples,n.region))
Sfa2       <- array(0,dim = c(noyears,samples,n.region))
Sfj_s      <- array(0,dim = c(noyears,samples,n.region))
Sfa_s      <- array(0,dim = c(noyears,samples,n.region))
Sfj_w1_r   <- array(0,dim = c(noyears,samples,n.region))
Sfj_w2_r   <- array(0,dim = c(noyears,samples,n.region))
Sfj_h1_r   <- array(0,dim = c(noyears,samples,n.region))
Sfj_h2_r   <- array(0,dim = c(noyears,samples,n.region))
Sfa_w1_r   <- array(0,dim = c(noyears,samples,n.region))
Sfa_w2_r   <- array(0,dim = c(noyears,samples,n.region))
Sfa_h1_r   <- array(0,dim = c(noyears,samples,n.region))
Sfa_h2_r   <- array(0,dim = c(noyears,samples,n.region))

Smj2       <- array(0,dim = c(noyears,samples,n.region))
Sma2       <- array(0,dim = c(noyears,samples,n.region))
Smj_s      <- array(0,dim = c(noyears,samples,n.region))
Sma_s      <- array(0,dim = c(noyears,samples,n.region))
Smj_w1_r   <- array(0,dim = c(noyears,samples,n.region))
Smj_w2_r   <- array(0,dim = c(noyears,samples,n.region))
Smj_h1_r   <- array(0,dim = c(noyears,samples,n.region))
Smj_h2_r   <- array(0,dim = c(noyears,samples,n.region))
Sma_w1_r   <- array(0,dim = c(noyears,samples,n.region))
Sma_w2_r   <- array(0,dim = c(noyears,samples,n.region))
Sma_h1_r   <- array(0,dim = c(noyears,samples,n.region))
Sma_h2_r   <- array(0,dim = c(noyears,samples,n.region))

s.winter   <- abind(abind(s_nw_hy_central_f,s_nw_hy_pacific_f,along = 0),abind(s_nw_ad_central_f,s_nw_ad_pacific_f,along = 0), along = 0)
s.winter_m <- abind(abind(s_nw_hy_central_m,s_nw_hy_pacific_m,along = 0),abind(s_nw_ad_central_m,s_nw_ad_pacific_m,along = 0), along = 0)

s.harvest   <- abind(abind(s_hk_hy_central_f,s_hk_hy_pacific_f,along = 0),abind(s_hk_ad_central_f,s_hk_ad_pacific_f,along = 0), along = 0)
s.harvest_m <- abind(abind(s_hk_hy_central_m,s_hk_hy_pacific_m,along = 0),abind(s_hk_ad_central_m,s_hk_ad_pacific_m,along = 0), along = 0)

s.summer   <- abind(s.summer_ad_ak_f,s.summer_ad_no_f,s.summer_ad_pr_f,along = 0)
s.summer_m <- abind(s.summer_ad_ak_m,s.summer_ad_no_m,s.summer_ad_pr_m,along = 0)

local      <- abind(local_f_ak,local_f_pr,local_f_no,along = 0)
local_m    <- abind(local_m_ak,local_m_pr,local_m_no,along = 0)

ms         <- apply(s.summer, c(1,3), mean)
msm        <- apply(s.summer_m, c(1,3), mean)
library(abind)

njf <- abind(njf_ak, njf_no, njf_pr, along = 0)
naf <- abind(naf_ak, naf_no, naf_pr, along = 0)

njm <- abind(njm_ak, njm_no, njm_pr, along = 0)
nam <- abind(nam_ak, nam_no, nam_pr, along = 0)

fecundity <- abind(fecundity_ak, fecundity_no, fecundity_pr, along = 0)

for (j in 1:samples){
  for(k in 1:n.region){
    for (i in 1){
      Sfj2[i,j,k] <- local[k,j] * s.summer[k,i,j]^(1/2)                  # Mar - May t
      Sfa2[i,j,k] <- ms[k,j]^(1/2) * s.summer[k,i,j]^(1/2)               # mean May - July * Mar - May t   

      Smj2[i,j,k] <- local_m[k,j] * s.summer_m[k,i,j]^(1/2)              # Mar - May t
      Sma2[i,j,k] <- msm[k,j]^(1/2) * s.summer_m[k,i,j]^(1/2)            # mean May - July * Mar - May t   
      
      lam_tot[i,j,k] <- (naf[k,i+1,j] +  njf[k,i+1,j]+ nam[k,i+1,j] +  njm[k,i+1,j])/(naf[k,i,j] +  njf[k,i,j] + nam[k,i,j] +  njm[k,i,j])   # May to May
    }
    for (i in 2:noyears){
      Sfj2[i,j,k] <- local[k,j] * s.summer[k,i,j]^(1/2)                   # Mar - May t
      Sfa2[i,j,k] <- s.summer[k,i-1,j]^(1/2) * s.summer[k,i,j]^(1/2)      # May - July t-1, Mar - May t      
      
      Smj2[i,j,k] <- local_m[k,j] * s.summer_m[k,i,j]^(1/2)               # Mar - May t
      Sma2[i,j,k] <- s.summer_m[k,i-1,j]^(1/2) * s.summer_m[k,i,j]^(1/2)  # May - July t-1, Mar - May t  
      
      lam_tot[i,j,k] <- (naf[k,i+1,j] +  njf[k,i+1,j]+ nam[k,i+1,j] +  njm[k,i+1,j])/(naf[k,i,j] +  njf[k,i,j] + nam[k,i,j] +  njm[k,i,j])   # May to May
    }
  }
}


tempvar_real <- apply(lam_tot,c(1,3),  mean)
mu_lam       <- apply(tempvar_real,2, function(x) exp(mean(log(x))))

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# Step 3: Calculate stage-specific proportions of survivals and abundances for each region
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
mu_psi <- abind(ak_cen,no_cen,pr_cen,along = 3)
noyears <- 60
nf1 <- array(0,dim = c(noyears,samples,3))
nf2 <- array(0,dim = c(noyears,samples,3))
nm1 <- array(0,dim = c(noyears,samples,3))
nm2 <- array(0,dim = c(noyears,samples,3))
sr  <- array(0,dim = c(noyears,samples,3))
for (i in 1:noyears){
  for (j in 1:samples){
    Sfj_w1[i,j]  <- s.winter[1,1,i,j]
    Sfj_w2[i,j]  <- s.winter[1,2,i,j]
    Sfj_h1[i,j]  <- s.harvest[1,1,i,j]
    Sfj_h2[i,j]  <- s.harvest[1,2,i,j]
    Sfa_w1[i,j]  <- s.winter[2,1,i,j]
    Sfa_w2[i,j]  <- s.winter[2,2,i,j]
    Sfa_h1[i,j]  <- s.harvest[2,1,i,j]
    Sfa_h2[i,j]  <- s.harvest[2,2,i,j]
    
    Smj_w1[i,j]  <-  s.winter_m[1,1,i,j]
    Smj_w2[i,j]  <-  s.winter_m[1,2,i,j]
    Smj_h1[i,j]  <- s.harvest_m[1,1,i,j]
    Smj_h2[i,j]  <- s.harvest_m[1,2,i,j]
    Sma_w1[i,j]  <-  s.winter_m[2,1,i,j]
    Sma_w2[i,j]  <-  s.winter_m[2,2,i,j]
    Sma_h1[i,j]  <- s.harvest_m[2,1,i,j]
    Sma_h2[i,j]  <- s.harvest_m[2,2,i,j]
    for(k in 1:n.region){
      # S_sex_age_demographic.rate_region
      Sfj_w1_r[i,j,k] <- Sfj_w1[i,j] * mu_psi[i,j,k]
      Sfj_w2_r[i,j,k] <- Sfj_w2[i,j] * (1 - mu_psi[i,j,k])
      Sfj_h1_r[i,j,k] <- Sfj_h1[i,j] * mu_psi[i,j,k]
      Sfj_h2_r[i,j,k] <- Sfj_h2[i,j] * (1 - mu_psi[i,j,k])
      Sfa_w1_r[i,j,k] <- Sfa_w1[i,j] * mu_psi[i,j,k]
      Sfa_w2_r[i,j,k] <- Sfa_w2[i,j] * (1 - mu_psi[i,j,k])
      Sfa_h1_r[i,j,k] <- Sfa_h1[i,j] * mu_psi[i,j,k]
      Sfa_h2_r[i,j,k] <- Sfa_h2[i,j] *(1 - mu_psi[i,j,k])
      
      Smj_w1_r[i,j,k] <- Smj_w1[i,j] * mu_psi[i,j,k]
      Smj_w2_r[i,j,k] <- Smj_w2[i,j] * (1 - mu_psi[i,j,k])
      Smj_h1_r[i,j,k] <- Smj_h1[i,j] * mu_psi[i,j,k]
      Smj_h2_r[i,j,k] <- Smj_h2[i,j] * (1 - mu_psi[i,j,k])
      Sma_w1_r[i,j,k] <- Sma_w1[i,j] * mu_psi[i,j,k]
      Sma_w2_r[i,j,k] <- Sma_w2[i,j] * (1 - mu_psi[i,j,k])
      Sma_h1_r[i,j,k] <- Sma_h1[i,j] * mu_psi[i,j,k]
      Sma_h2_r[i,j,k] <- Sma_h2[i,j] *(1 - mu_psi[i,j,k])
      
      F1[i,j,k] <- fecundity[k,i,j] * bp[j]                           
      F2[i,j,k] <- fecundity[k,i,j] 
      
      Sfj_s[i,j,k] <- Sfj2[i,j,k]
      Sfa_s[i,j,k] <- Sfa2[i,j,k]
      
      Smj_s[i,j,k] <- Smj2[i,j,k]
      Sma_s[i,j,k] <- Sma2[i,j,k]
      
        nf1[i,j,k] <-  njf[k,i,j]/(naf[k,i,j] +  njf[k,i,j] + nam[k,i,j] +  njm[k,i,j])
        nf2[i,j,k] <-  naf[k,i,j]/(naf[k,i,j] +  njf[k,i,j] + nam[k,i,j] +  njm[k,i,j])
        nm1[i,j,k] <-  njm[k,i,j]/(naf[k,i,j] +  njf[k,i,j] + nam[k,i,j] +  njm[k,i,j])
        nm2[i,j,k] <-  nam[k,i,j]/(naf[k,i,j] +  njf[k,i,j] + nam[k,i,j] +  njm[k,i,j])
      
      sr[i,j,k] <- (naf[k,i,j] +  njf[k,i,j])/(naf[k,i,j] +  njf[k,i,j] + nam[k,i,j] +  njm[k,i,j])
    }
  }
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# Step 4: Calculate the transient sensitivities for each demographic parameter, evaluated at temporal means of each parameter.          
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

# Means
mu_pi1    <- apply(pi_all[,1,,],c(3,1), mean) # Movements to Alaska
mu_pi2    <- apply(pi_all[,2,,],c(3,1), mean) # Movements to Boreal
mu_pi3    <- apply(pi_all[,3,,],c(3,1), mean) # Movements to Prairie

mu_F1     <- apply(F1 ,c(2,3), mean)
mu_F2     <- apply(F2 ,c(2,3), mean)
mu_Sfj_w1 <- apply(Sfj_w1,2, mean)
mu_Sfj_w2 <- apply(Sfj_w2,2, mean)
mu_Sfj_h1 <- apply(Sfj_h1,2, mean)
mu_Sfj_h2 <- apply(Sfj_h2,2, mean)
mu_Sfa_w1 <- apply(Sfa_w1,2, mean)
mu_Sfa_w2 <- apply(Sfa_w2,2, mean)
mu_Sfa_h1 <- apply(Sfa_h1,2, mean)
mu_Sfa_h2 <- apply(Sfa_h2,2, mean)
mu_Sfj_s  <- apply(Sfj_s,c(2,3), mean)
mu_Sfa_s  <- apply(Sfa_s,c(2,3), mean)
mu_nf1    <- apply(nf1,c(2,3), mean)
mu_nf2    <- apply(nf2,c(2,3), mean)

mu_Smj_w1 <- apply(Smj_w1,2, mean)
mu_Smj_w2 <- apply(Smj_w2,2, mean)
mu_Smj_h1 <- apply(Smj_h1,2, mean)
mu_Smj_h2 <- apply(Smj_h2,2, mean)
mu_Sma_w1 <- apply(Sma_w1,2, mean)
mu_Sma_w2 <- apply(Sma_w2,2, mean)
mu_Sma_h1 <- apply(Sma_h1,2, mean)
mu_Sma_h2 <- apply(Sma_h2,2, mean)
mu_Smj_s  <- apply(Smj_s,c(2,3), mean)
mu_Sma_s  <- apply(Sma_s,c(2,3), mean)
mu_nm1    <- apply(nm1,c(2,3), mean)
mu_nm2    <- apply(nm2,c(2,3), mean)

mu_pi_ak    <- apply(pi_all[,1,,],c(3,1), mean)
mu_pi_no    <- apply(pi_all[,2,,],c(3,1), mean)
mu_pi_pr    <- apply(pi_all[,3,,],c(3,1), mean)

mu_lamt   <- apply(lam_tot, c(2,3), mean)

# Standard Deviation
sd_F1     <- apply(F1 ,c(2,3), sd)
sd_F2     <- apply(F2 ,c(2,3), sd)
sd_Sfj_w1 <- apply(Sfj_w1,2, sd)
sd_Sfj_w2 <- apply(Sfj_w2,2, sd)
sd_Sfj_h1 <- apply(Sfj_h1,2, sd)
sd_Sfj_h2 <- apply(Sfj_h2,2, sd)
sd_Sfa_w1 <- apply(Sfa_w1,2, sd)
sd_Sfa_w2 <- apply(Sfa_w2,2, sd)
sd_Sfa_h1 <- apply(Sfa_h1,2, sd)
sd_Sfa_h2 <- apply(Sfa_h2,2, sd)
sd_Sfj_s  <- apply(Sfj_s,c(2,3), sd)
sd_Sfa_s  <- apply(Sfa_s,c(2,3), sd)
sd_nf1    <- apply(nf1,c(2,3), sd)
sd_nf2    <- apply(nf2,c(2,3), sd)
sd_lamt   <- apply(lam_tot,c(2,3), sd)

sd_Smj_w1 <- apply(Smj_w1,2, sd)
sd_Smj_w2 <- apply(Smj_w2,2, sd)
sd_Smj_h1 <- apply(Smj_h1,2, sd)
sd_Smj_h2 <- apply(Smj_h2,2, sd)
sd_Sma_w1 <- apply(Sma_w1,2, sd)
sd_Sma_w2 <- apply(Sma_w2,2, sd)
sd_Sma_h1 <- apply(Sma_h1,2, sd)
sd_Sma_h2 <- apply(Sma_h2,2, sd)
sd_Smj_s  <- apply(Smj_s,c(2,3), sd)
sd_Sma_s  <- apply(Sma_s,c(2,3), sd)
sd_nm1    <- apply(nm1,c(2,3), sd)
sd_nm2    <- apply(nm2,c(2,3), sd)

#Coefficient of variation
cv_F1    <- sd_F1    /mu_F1     
cv_F2    <- sd_F2    /mu_F2     
cv_Sfj_w1<- sd_Sfj_w1/mu_Sfj_w1 
cv_Sfj_w2<- sd_Sfj_w2/mu_Sfj_w2 
cv_Sfj_h1<- sd_Sfj_h1/mu_Sfj_h1 
cv_Sfj_h2<- sd_Sfj_h2/mu_Sfj_h2 
cv_Sfa_w1<- sd_Sfa_w1/mu_Sfa_w1 
cv_Sfa_w2<- sd_Sfa_w2/mu_Sfa_w2 
cv_Sfa_h1<- sd_Sfa_h1/mu_Sfa_h1 
cv_Sfa_h2<- sd_Sfa_h2/mu_Sfa_h2 
cv_Sfj_s <- sd_Sfj_s /mu_Sfj_s  
cv_Sfa_s <- sd_Sfa_s /mu_Sfa_s  
cv_nf1   <- sd_nf1   /mu_nf1    
cv_nf2   <- sd_nf2   /mu_nf2    

cv_Smj_w1<- sd_Smj_w1/mu_Smj_w1 
cv_Smj_w2<- sd_Smj_w2/mu_Smj_w2 
cv_Smj_h1<- sd_Smj_h1/mu_Smj_h1 
cv_Smj_h2<- sd_Smj_h2/mu_Smj_h2 
cv_Sma_w1<- sd_Sma_w1/mu_Sma_w1 
cv_Sma_w2<- sd_Sma_w2/mu_Sma_w2 
cv_Sma_h1<- sd_Sma_h1/mu_Sma_h1 
cv_Sma_h2<- sd_Sma_h2/mu_Sma_h2 
cv_Smj_s <- sd_Smj_s /mu_Smj_s  
cv_Sma_s <- sd_Sma_s /mu_Sma_s  
cv_nm1   <- sd_nm1   /mu_nm1    
cv_nm2   <- sd_nm2   /mu_nm2 

cv_lamt  <- sd_lamt  /mu_lamt   
 
# Calculate statistics and wrap in a more portable fashion
cv_F1_mn     <- t(rbind.data.frame(mean = (apply(  cv_F1 ,2,mean)), low_95 =  (apply(  cv_F1 ,2  ,quantile, probs = 0.025)), upp_95 =  (apply(  cv_F1 ,2  ,quantile, probs = 0.975))))
cv_F2_mn     <- t(rbind.data.frame(mean = (apply(   cv_F2 ,2,mean)), low_95 =  (apply(   cv_F2 ,2,quantile, probs = 0.025)), upp_95 =  (apply(   cv_F2 ,2,quantile, probs = 0.975))))
cv_Sfj_w1_mn <- t(rbind.data.frame(mean = mean(cv_Sfj_w1), low_95 = quantile(cv_Sfj_w1,probs = 0.025), upp_95 = quantile(cv_Sfj_w1 ,1,probs = 0.975)))
cv_Sfj_w2_mn <- t(rbind.data.frame(mean = mean(cv_Sfj_w2), low_95 = quantile(cv_Sfj_w2,probs = 0.025), upp_95 = quantile(cv_Sfj_w2 ,1,probs = 0.975)))
cv_Sfj_h1_mn <- t(rbind.data.frame(mean = mean(cv_Sfj_h1), low_95 = quantile(cv_Sfj_h1,probs = 0.025), upp_95 = quantile(cv_Sfj_h1 ,1,probs = 0.975)))
cv_Sfj_h2_mn <- t(rbind.data.frame(mean = mean(cv_Sfj_h2), low_95 = quantile(cv_Sfj_h2,probs = 0.025), upp_95 = quantile(cv_Sfj_h2 ,1,probs = 0.975)))
cv_Sfa_w1_mn <- t(rbind.data.frame(mean = mean(cv_Sfa_w1), low_95 = quantile(cv_Sfa_w1,probs = 0.025), upp_95 = quantile(cv_Sfa_w1 ,1,probs = 0.975)))
cv_Sfa_w2_mn <- t(rbind.data.frame(mean = mean(cv_Sfa_w2), low_95 = quantile(cv_Sfa_w2,probs = 0.025), upp_95 = quantile(cv_Sfa_w2 ,1,probs = 0.975)))
cv_Sfa_h1_mn <- t(rbind.data.frame(mean = mean(cv_Sfa_h1), low_95 = quantile(cv_Sfa_h1,probs = 0.025), upp_95 = quantile(cv_Sfa_h1 ,1,probs = 0.975)))
cv_Sfa_h2_mn <- t(rbind.data.frame(mean = mean(cv_Sfa_h2), low_95 = quantile(cv_Sfa_h2,probs = 0.025), upp_95 = quantile(cv_Sfa_h2 ,1,probs = 0.975)))
cv_Sfj_s_mn  <- t(rbind.data.frame(mean = (apply( cv_Sfj_s ,2,mean)), low_95 =  (apply( cv_Sfj_s ,2,quantile, probs = 0.025)),upp_95 = (apply( cv_Sfj_s ,2,quantile, probs = 0.975))))
cv_Sfa_s_mn  <- t(rbind.data.frame(mean = (apply( cv_Sfa_s ,2,mean)), low_95 =  (apply( cv_Sfa_s ,2,quantile, probs = 0.025)),upp_95 = (apply( cv_Sfa_s ,2,quantile, probs = 0.975))))
cv_nf1_mn    <- t(rbind.data.frame(mean = (apply(   cv_nf1 ,2,mean)), low_95 =  (apply(   cv_nf1 ,2,quantile, probs = 0.025)),upp_95 = (apply(   cv_nf1 ,2,quantile, probs = 0.975))))
cv_nf2_mn    <- t(rbind.data.frame(mean = (apply(   cv_nf2 ,2,mean)), low_95 =  (apply(   cv_nf2 ,2,quantile, probs = 0.025)),upp_95 = (apply(   cv_nf2 ,2,quantile, probs = 0.975))))
cv_lamt_mn   <- t(rbind.data.frame(mean = (apply(  cv_lamt ,2,mean)), low_95 =  (apply(  cv_lamt ,2,quantile, probs = 0.025)),upp_95 = (apply(  cv_lamt ,2,quantile, probs = 0.975))))

cv_Smj_w1_mn <- t(rbind.data.frame(mean = mean(cv_Smj_w1), low_95 = quantile(cv_Smj_w1,probs = 0.025), upp_95 = quantile(cv_Smj_w1 ,1,probs = 0.975)))
cv_Smj_w2_mn <- t(rbind.data.frame(mean = mean(cv_Smj_w2), low_95 = quantile(cv_Smj_w2,probs = 0.025), upp_95 = quantile(cv_Smj_w2 ,1,probs = 0.975)))
cv_Smj_h1_mn <- t(rbind.data.frame(mean = mean(cv_Smj_h1), low_95 = quantile(cv_Smj_h1,probs = 0.025), upp_95 = quantile(cv_Smj_h1 ,1,probs = 0.975)))
cv_Smj_h2_mn <- t(rbind.data.frame(mean = mean(cv_Smj_h2), low_95 = quantile(cv_Smj_h2,probs = 0.025), upp_95 = quantile(cv_Smj_h2 ,1,probs = 0.975)))
cv_Sma_w1_mn <- t(rbind.data.frame(mean = mean(cv_Sma_w1), low_95 = quantile(cv_Sma_w1,probs = 0.025), upp_95 = quantile(cv_Sma_w1 ,1,probs = 0.975)))
cv_Sma_w2_mn <- t(rbind.data.frame(mean = mean(cv_Sma_w2), low_95 = quantile(cv_Sma_w2,probs = 0.025), upp_95 = quantile(cv_Sma_w2 ,1,probs = 0.975)))
cv_Sma_h1_mn <- t(rbind.data.frame(mean = mean(cv_Sma_h1), low_95 = quantile(cv_Sma_h1,probs = 0.025), upp_95 = quantile(cv_Sma_h1 ,1,probs = 0.975)))
cv_Sma_h2_mn <- t(rbind.data.frame(mean = mean(cv_Sma_h2), low_95 = quantile(cv_Sma_h2,probs = 0.025), upp_95 = quantile(cv_Sma_h2 ,1,probs = 0.975)))
cv_Smj_s_mn  <- t(rbind.data.frame(mean = (apply( cv_Smj_s ,2,mean)), low_95 =  (apply( cv_Smj_s ,2,quantile, probs = 0.025)),upp_95 = (apply( cv_Smj_s ,2,quantile, probs = 0.975))))
cv_Sma_s_mn  <- t(rbind.data.frame(mean = (apply( cv_Sma_s ,2,mean)), low_95 =  (apply( cv_Sma_s ,2,quantile, probs = 0.025)),upp_95 = (apply( cv_Sma_s ,2,quantile, probs = 0.975))))
cv_nm1_mn    <- t(rbind.data.frame(mean = (apply( cv_nm1 ,2,mean)), low_95 =  (apply(   cv_nm1 ,2,quantile, probs = 0.025)),upp_95 = (apply(   cv_nm1 ,2,quantile, probs = 0.975))))
cv_nm2_mn    <- t(rbind.data.frame(mean = (apply( cv_nm2 ,2,mean)), low_95 =  (apply(   cv_nm2 ,2,quantile, probs = 0.025)),upp_95 = (apply(   cv_nm2 ,2,quantile, probs = 0.975))))

rownames(    cv_F1_mn) <- NULL; colnames(    cv_F1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(    cv_F2_mn) <- NULL; colnames(    cv_F2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfj_w1_mn) <- NULL; colnames(cv_Sfj_w1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfj_w2_mn) <- NULL; colnames(cv_Sfj_w2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfj_h1_mn) <- NULL; colnames(cv_Sfj_h1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfj_h2_mn) <- NULL; colnames(cv_Sfj_h2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfa_w1_mn) <- NULL; colnames(cv_Sfa_w1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfa_w2_mn) <- NULL; colnames(cv_Sfa_w2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfa_h1_mn)  <- NULL; colnames(cv_Sfa_h1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sfa_h2_mn ) <- NULL; colnames(cv_Sfa_h2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames( cv_Sfj_s_mn ) <- NULL; colnames( cv_Sfj_s_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames( cv_Sfa_s_mn ) <- NULL; colnames( cv_Sfa_s_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(   cv_nf1_mn ) <- NULL;colnames(   cv_nf1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(   cv_nf2_mn ) <- NULL;colnames(   cv_nf2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(  cv_lamt_mn ) <- NULL;colnames(  cv_lamt_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')

rownames(cv_Smj_w1_mn) <- NULL;  colnames(cv_Smj_w1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Smj_w2_mn) <- NULL;  colnames(cv_Smj_w2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Smj_h1_mn) <- NULL;  colnames(cv_Smj_h1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Smj_h2_mn) <- NULL;  colnames(cv_Smj_h2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sma_w1_mn) <- NULL;  colnames(cv_Sma_w1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sma_w2_mn) <- NULL;  colnames(cv_Sma_w2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sma_h1_mn)  <- NULL; colnames(cv_Sma_h1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames(cv_Sma_h2_mn ) <- NULL; colnames(cv_Sma_h2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames( cv_mfj_s_mn ) <- NULL; colnames(cv_Smj_s_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames( cv_mfa_s_mn ) <- NULL; colnames(cv_Sma_s_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames( cv_mf1_mn )   <- NULL;colnames( cv_nm1_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')
rownames( cv_mf2_mn )   <- NULL;colnames( cv_nm2_mn ) <- c('CV', 'CV_Lower_95', 'CV_Upper_95')


# LTRE_cv <- cbind.data.frame(rbind.data.frame(cv_F1_mn,cv_F2_mn,cv_J1_mn,cv_A1_mn,cv_J2_mn,cv_A2_mn,cv_N1_mn,cv_N2_mn, cv_t_mn, cv_f_mn,cv_Jm1_mn,cv_Am1_mn,cv_Jm2_mn,cv_Am2_mn,cv_sr_mn), 
#                             expand.grid(species = c("Canvasback", 'Redhead'),parameter = c('F[J]','F[A]','S[jw]','S[aw]','S[js]','S[as]','N[J]','N[A]','lamdbda[t]','lambda[f]','SM[jw]','SM[aw]','SM[js]','SM[as]','SR')))

mu_F1_mn     <- t(rbind.data.frame(mean = (apply(  mu_F1 ,2,mean)), low_95 =  (apply(  mu_F1 ,2  ,quantile, probs = 0.025)), upp_95 =  (apply(  mu_F1 ,2  ,quantile, probs = 0.975))))
mu_F2_mn     <- t(rbind.data.frame(mean = (apply(   mu_F2 ,2,mean)), low_95 =  (apply(   mu_F2 ,2,quantile, probs = 0.025)), upp_95 =  (apply(   mu_F2 ,2,quantile, probs = 0.975))))
mu_Sfj_w1_mn <- t(rbind.data.frame(mean = mean(mu_Sfj_w1), low_95 = quantile(mu_Sfj_w1,probs = 0.025), upp_95 = quantile(mu_Sfj_w1 ,1,probs = 0.975)))
mu_Sfj_w2_mn <- t(rbind.data.frame(mean = mean(mu_Sfj_w2), low_95 = quantile(mu_Sfj_w2,probs = 0.025), upp_95 = quantile(mu_Sfj_w2 ,1,probs = 0.975)))
mu_Sfj_h1_mn <- t(rbind.data.frame(mean = mean(mu_Sfj_h1), low_95 = quantile(mu_Sfj_h1,probs = 0.025), upp_95 = quantile(mu_Sfj_h1 ,1,probs = 0.975)))
mu_Sfj_h2_mn <- t(rbind.data.frame(mean = mean(mu_Sfj_h2), low_95 = quantile(mu_Sfj_h2,probs = 0.025), upp_95 = quantile(mu_Sfj_h2 ,1,probs = 0.975)))
mu_Sfa_w1_mn <- t(rbind.data.frame(mean = mean(mu_Sfa_w1), low_95 = quantile(mu_Sfa_w1,probs = 0.025), upp_95 = quantile(mu_Sfa_w1 ,1,probs = 0.975)))
mu_Sfa_w2_mn <- t(rbind.data.frame(mean = mean(mu_Sfa_w2), low_95 = quantile(mu_Sfa_w2,probs = 0.025), upp_95 = quantile(mu_Sfa_w2 ,1,probs = 0.975)))
mu_Sfa_h1_mn <- t(rbind.data.frame(mean = mean(mu_Sfa_h1), low_95 = quantile(mu_Sfa_h1,probs = 0.025), upp_95 = quantile(mu_Sfa_h1 ,1,probs = 0.975)))
mu_Sfa_h2_mn <- t(rbind.data.frame(mean = mean(mu_Sfa_h2), low_95 = quantile(mu_Sfa_h2,probs = 0.025), upp_95 = quantile(mu_Sfa_h2 ,1,probs = 0.975)))
mu_Sfj_s_mn  <- t(rbind.data.frame(mean = (apply( mu_Sfj_s ,2,mean)), low_95 =  (apply( mu_Sfj_s ,2,quantile, probs = 0.025)),upp_95 = (apply( mu_Sfj_s ,2,quantile, probs = 0.975))))
mu_Sfa_s_mn  <- t(rbind.data.frame(mean = (apply( mu_Sfa_s ,2,mean)), low_95 =  (apply( mu_Sfa_s ,2,quantile, probs = 0.025)),upp_95 = (apply( mu_Sfa_s ,2,quantile, probs = 0.975))))
mu_nf1_mn    <- t(rbind.data.frame(mean = (apply(   mu_nf1 ,2,mean)), low_95 =  (apply(   mu_nf1 ,2,quantile, probs = 0.025)),upp_95 = (apply(   mu_nf1 ,2,quantile, probs = 0.975))))
mu_nf2_mn    <- t(rbind.data.frame(mean = (apply(   mu_nf2 ,2,mean)), low_95 =  (apply(   mu_nf2 ,2,quantile, probs = 0.025)),upp_95 = (apply(   mu_nf2 ,2,quantile, probs = 0.975))))
mu_lamt_mn   <- t(rbind.data.frame(mean = (apply(  mu_lamt ,2,mean)), low_95 =  (apply(  mu_lamt ,2,quantile, probs = 0.025)),upp_95 = (apply(  mu_lamt ,2,quantile, probs = 0.975))))

mu_Smj_w1_mn <- t(rbind.data.frame(mean = mean(mu_Smj_w1), low_95 = quantile(mu_Smj_w1,probs = 0.025), upp_95 = quantile(mu_Smj_w1 ,1,probs = 0.975)))
mu_Smj_w2_mn <- t(rbind.data.frame(mean = mean(mu_Smj_w2), low_95 = quantile(mu_Smj_w2,probs = 0.025), upp_95 = quantile(mu_Smj_w2 ,1,probs = 0.975)))
mu_Smj_h1_mn <- t(rbind.data.frame(mean = mean(mu_Smj_h1), low_95 = quantile(mu_Smj_h1,probs = 0.025), upp_95 = quantile(mu_Smj_h1 ,1,probs = 0.975)))
mu_Smj_h2_mn <- t(rbind.data.frame(mean = mean(mu_Smj_h2), low_95 = quantile(mu_Smj_h2,probs = 0.025), upp_95 = quantile(mu_Smj_h2 ,1,probs = 0.975)))
mu_Sma_w1_mn <- t(rbind.data.frame(mean = mean(mu_Sma_w1), low_95 = quantile(mu_Sma_w1,probs = 0.025), upp_95 = quantile(mu_Sma_w1 ,1,probs = 0.975)))
mu_Sma_w2_mn <- t(rbind.data.frame(mean = mean(mu_Sma_w2), low_95 = quantile(mu_Sma_w2,probs = 0.025), upp_95 = quantile(mu_Sma_w2 ,1,probs = 0.975)))
mu_Sma_h1_mn <- t(rbind.data.frame(mean = mean(mu_Sma_h1), low_95 = quantile(mu_Sma_h1,probs = 0.025), upp_95 = quantile(mu_Sma_h1 ,1,probs = 0.975)))
mu_Sma_h2_mn <- t(rbind.data.frame(mean = mean(mu_Sma_h2), low_95 = quantile(mu_Sma_h2,probs = 0.025), upp_95 = quantile(mu_Sma_h2 ,1,probs = 0.975)))
mu_Smj_s_mn  <- t(rbind.data.frame(mean = (apply( mu_Smj_s ,2,mean)), low_95 =  (apply( mu_Smj_s ,2,quantile, probs = 0.025)),upp_95 = (apply( mu_Smj_s ,2,quantile, probs = 0.975))))
mu_Sma_s_mn  <- t(rbind.data.frame(mean = (apply( mu_Sma_s ,2,mean)), low_95 =  (apply( mu_Sma_s ,2,quantile, probs = 0.025)),upp_95 = (apply( mu_Sma_s ,2,quantile, probs = 0.975))))
mu_nm1_mn  <- t(rbind.data.frame(mean = (apply(   mu_nm1 ,2,mean)), low_95 =  (apply(   mu_nm1 ,2,quantile, probs = 0.025)),upp_95 = (apply(   mu_nm1 ,2,quantile, probs = 0.975))))
mu_nm2_mn  <- t(rbind.data.frame(mean = (apply(   mu_nm2 ,2,mean)), low_95 =  (apply(   mu_nm2 ,2,quantile, probs = 0.025)),upp_95 = (apply(   mu_nm2 ,2,quantile, probs = 0.975))))

rownames(    mu_F1_mn) <- NULL; colnames(    mu_F1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(    mu_F2_mn) <- NULL; colnames(    mu_F2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfj_w1_mn) <- NULL; colnames(mu_Sfj_w1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfj_w2_mn) <- NULL; colnames(mu_Sfj_w2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfj_h1_mn) <- NULL; colnames(mu_Sfj_h1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfj_h2_mn) <- NULL; colnames(mu_Sfj_h2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfa_w1_mn) <- NULL; colnames(mu_Sfa_w1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfa_w2_mn) <- NULL; colnames(mu_Sfa_w2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfa_h1_mn)  <- NULL; colnames(mu_Sfa_h1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sfa_h2_mn ) <- NULL; colnames(mu_Sfa_h2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames( mu_Sfj_s_mn ) <- NULL; colnames( mu_Sfj_s_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames( mu_Sfa_s_mn ) <- NULL; colnames( mu_Sfa_s_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(   mu_nf1_mn ) <- NULL;colnames(   mu_nf1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(   mu_nf2_mn ) <- NULL;colnames(   mu_nf2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(  mu_lamt_mn ) <- NULL;colnames(  mu_lamt_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')

rownames(mu_Smj_w1_mn) <- NULL; colnames(mu_Smj_w1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Smj_w2_mn) <- NULL; colnames(mu_Smj_w2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Smj_h1_mn) <- NULL; colnames(mu_Smj_h1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Smj_h2_mn) <- NULL; colnames(mu_Smj_h2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sma_w1_mn) <- NULL; colnames(mu_Sma_w1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sma_w2_mn) <- NULL; colnames(mu_Sma_w2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sma_h1_mn)  <- NULL;colnames(mu_Sma_h1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sma_h2_mn ) <- NULL;colnames(mu_Sma_h2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Smj_s_mn ) <- NULL;colnames( mu_Smj_s_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_Sma_s_mn ) <- NULL;colnames( mu_Sma_s_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_nm1_mn ) <- NULL;colnames(   mu_nm1_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')
rownames(mu_nm2_mn ) <- NULL;colnames(   mu_nm2_mn ) <- c('mu', 'mu_Lower_95', 'mu_Upper_95')

# LTRE_mu <- cbind.data.frame(rbind.data.frame(mu_f1_mn,mu_f2_mn,mu_J1_mn,mu_A1_mn,mu_J2_mn,mu_A2_mn,mu_N1_mn,mu_N2_mn,mu_t_mn,mu_f_mn,mu_JM1_mn,mu_AM1_mn,mu_JM2_mn,mu_AM2_mn,mu_sr_mn), 
#                             expand.grid(species = c("Canvasback", 'Redhead'),parameter = c('F[J]','F[A]','S[jw]','S[aw]','S[js]','S[as]','N[J]','N[A]','lamdbda[t]','lambda[f]','SM[jw]','SM[aw]','SM[js]','SM[as]','SR')))
# 
# 
# LTRE_mu_cv <- left_join(LTRE_mu, LTRE_cv)
# write.csv(LTRE_mu_cv, file = 'mean_cv.csv')

# Shell for overall sensitivities
sens_F1      <- array(0,dim = c(samples,n.region,n.region))
sens_F2      <- array(0,dim = c(samples,n.region,n.region))
sens_Sfj_w1  <- array(0,dim = c(samples,n.region,n.region))
sens_Sfj_w2  <- array(0,dim = c(samples,n.region,n.region))
sens_Sfj_h1  <- array(0,dim = c(samples,n.region,n.region))
sens_Sfj_h2  <- array(0,dim = c(samples,n.region,n.region))
sens_Sfj_s   <- array(0,dim = c(samples,n.region,n.region))
sens_Sfa_w1  <- array(0,dim = c(samples,n.region))
sens_Sfa_w2  <- array(0,dim = c(samples,n.region))
sens_Sfa_h1  <- array(0,dim = c(samples,n.region))
sens_Sfa_h2  <- array(0,dim = c(samples,n.region))
sens_Sfa_s   <- array(0,dim = c(samples,n.region))
sens_nf1     <- array(0,dim = c(samples,n.region,n.region))
sens_nf2     <- array(0,dim = c(samples,n.region,n.region))

sens_Smj_w1  <- array(0,dim = c(samples,n.region,n.region))
sens_Smj_w2  <- array(0,dim = c(samples,n.region,n.region))
sens_Smj_h1  <- array(0,dim = c(samples,n.region,n.region))
sens_Smj_h2  <- array(0,dim = c(samples,n.region,n.region))
sens_Smj_s   <- array(0,dim = c(samples,n.region,n.region))
sens_Sma_w1  <- array(0,dim = c(samples,n.region))
sens_Sma_w2  <- array(0,dim = c(samples,n.region))
sens_Sma_h1  <- array(0,dim = c(samples,n.region))
sens_Sma_h2  <- array(0,dim = c(samples,n.region))
sens_Sma_s   <- array(0,dim = c(samples,n.region))
sens_nm1     <- array(0,dim = c(samples,n.region,n.region))
sens_nm2     <- array(0,dim = c(samples,n.region,n.region))
sens_psi1    <- array(0,dim = c(samples,n.region,n.region))
sens_psi2    <- array(0,dim = c(samples,n.region,n.region))
sens_pi      <- array(0,dim = c(samples,n.region,n.region))

# Shell for transient sensitivities
sens_F1_t      <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_F2_t      <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Sfj_w1_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Sfj_w2_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Sfj_h1_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Sfj_h2_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Sfj_s_t   <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Sfa_w1_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sfa_w2_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sfa_h1_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sfa_h2_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sfa_s_t   <- array(0,dim = c(samples,n.region,noyears-1))
sens_nf1_t     <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_nf2_t     <- array(0,dim = c(samples,n.region,noyears-1,n.region))

sens_Smj_w1_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Smj_w2_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Smj_h1_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Smj_h2_t  <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Smj_s_t   <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_Sma_w1_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sma_w2_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sma_h1_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sma_h2_t  <- array(0,dim = c(samples,n.region,noyears-1))
sens_Sma_s_t   <- array(0,dim = c(samples,n.region,noyears-1))
sens_nm1_t     <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_nm2_t     <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_pi_t     <- array(0,dim = c(samples,n.region,n.region,noyears-1))
sens_psi1_t <- array(0,dim = c(samples,n.region,noyears-1,n.region))
sens_psi2_t <- array(0,dim = c(samples,n.region,noyears-1,n.region))

nrm1 <- nrm2 <- nrf1 <- nrf2 <- array(0, dim = c(noyears,samples,n.region,n.region))
mu_nrm1 <- mu_nrm2  <- mu_nrf1 <- mu_nrf2  <- array(0, dim = c(samples,n.region,n.region))

mean_psi <- apply(mu_psi,2:3,mean)
for (j in 1:samples){
  for(k in 1:n.region){
    for(l in 1:n.region){
      for(t in 1:noyears){
      # Morph region abundances with movements  
      nrf1[t,j,k,l] <- nf1[t,j,k] * pi_all[k,l,t,j]
      nrf2[t,j,k,l] <- nf2[t,j,k] * pi_all[k,l,t,j]
      nrm1[t,j,k,l] <- nm1[t,j,k] * pi_all[k,l,t,j]
      nrm2[t,j,k,l] <- nm2[t,j,k] * pi_all[k,l,t,j]
    }
  
    mu_nrf1[j,k,l] <- mean( nrf1[1:noyears,j,k,l])
    mu_nrf2[j,k,l] <- mean( nrf2[1:noyears,j,k,l])
    mu_nrm1[j,k,l] <- mean( nrm1[1:noyears,j,k,l])
    mu_nrm2[j,k,l] <- mean( nrm2[1:noyears,j,k,l])
    
    # Sensitivity to Fecundity
    ####################################################################################################################################################################################
    sens_F1[j,k,l] <- (0.5 * (mu_Sfj_w1[j]*mu_Sfj_h1[j]*mean_psi[j,k] + mu_Sfj_w2[j]*mu_Sfj_h2[j]*(1 - mean_psi[j,k])) * mu_Sfj_s[j,k] * mu_nrf1[j,k,l]) +
                      (0.5 * (mu_Smj_w1[j]*mu_Smj_h1[j]*mean_psi[j,k] + mu_Smj_w2[j]*mu_Smj_h2[j]*(1 - mean_psi[j,k])) * mu_Smj_s[j,k] * mu_nrf1[j,k,l])
    
    sens_F2[j,k,l] <- (0.5 * (mu_Sfj_w1[j]*mu_Sfj_h1[j]*mean_psi[j,k] + mu_Sfj_w2[j]*mu_Sfj_h2[j]*(1 - mean_psi[j,k])) * mu_Sfj_s[j,k] * mu_nrf2[j,k,l]) +
                      (0.5 * (mu_Smj_w1[j]*mu_Smj_h1[j]*mean_psi[j,k] + mu_Smj_w2[j]*mu_Smj_h2[j]*(1 - mean_psi[j,k])) * mu_Smj_s[j,k] * mu_nrf2[j,k,l])
    ####################################################################################################################################################################################
    # Sensitivity to Cause- and Region specific mortality [female,hy]
    sens_Sfj_w1[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Sfj_h1[j]*mean_psi[j,k] * mu_Sfj_s[j,k] *  mu_nrf1[j,k,l] ) + 
                          (0.5 * mu_F2[j,k]* mu_Sfj_h1[j]*mean_psi[j,k] * mu_Sfj_s[j,k] *  mu_nrf2[j,k,l] ) 
    
    sens_Sfj_w2[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Sfj_h2[j]* (1 - mean_psi[j,k]) * mu_Sfj_s[j,k] * mu_nrf1[j,k,l]) + 
                          (0.5 * mu_F2[j,k]* mu_Sfj_h2[j]* (1 - mean_psi[j,k]) * mu_Sfj_s[j,k] * mu_nrf2[j,k,l]) 
    
    sens_Sfj_h1[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Sfj_w1[j]*mean_psi[j,k] * mu_Sfj_s[j,k] * mu_nrf1[j,k,l]) + 
                          (0.5 * mu_F2[j,k]* mu_Sfj_w1[j]*mean_psi[j,k] * mu_Sfj_s[j,k] * mu_nrf2[j,k,l]) 
    
    sens_Sfj_h2[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Sfj_w2[j]* (1 - mean_psi[j,k]) * mu_Sfj_s[j,k] * mu_nrf1[j,k,l]) + 
                          (0.5 * mu_F2[j,k]* mu_Sfj_w2[j]* (1 - mean_psi[j,k]) * mu_Sfj_s[j,k] * mu_nrf2[j,k,l])          
    
    sens_Sfj_s[j,k,l] <- (0.5 * mu_F1[j,k]* ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k])) ) * mu_nrf1[j,k,l]) + 
                         (0.5 * mu_F2[j,k]* ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k])) ) * mu_nrf2[j,k,l])  
    
    ####################################################################################################################################################################################
    # Sensitivity to Cause- and Region specific mortality [male,hy]
    sens_Smj_w1[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Smj_h1[j]*mean_psi[j,k] * mu_Smj_s[j,k] *  mu_nrf1[j,k,l] ) + 
                          (0.5 * mu_F2[j,k]* mu_Smj_h1[j]*mean_psi[j,k] * mu_Smj_s[j,k] *  mu_nrf2[j,k,l] ) 
    
    sens_Smj_w2[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Smj_h2[j]* (1 - mean_psi[j,k]) * mu_Smj_s[j,k] * mu_nrf1[j,k,l]) + 
                          (0.5 * mu_F2[j,k]* mu_Smj_h2[j]* (1 - mean_psi[j,k]) * mu_Smj_s[j,k] * mu_nrf2[j,k,l]) 
    
    sens_Smj_h1[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Smj_w1[j]*mean_psi[j,k] * mu_Smj_s[j,k] * mu_nrf1[j,k,l]) + 
                          (0.5 * mu_F2[j,k]* mu_Smj_w1[j]*mean_psi[j,k] * mu_Smj_s[j,k] * mu_nrf2[j,k,l]) 
    
    sens_Smj_h2[j,k,l] <- (0.5 * mu_F1[j,k]* mu_Smj_w2[j]* (1 - mean_psi[j,k]) * mu_Smj_s[j,k] * mu_nrf1[j,k,l]) + 
                          (0.5 * mu_F2[j,k]* mu_Smj_w2[j]* (1 - mean_psi[j,k]) * mu_Smj_s[j,k] * mu_nrf2[j,k,l])          
    
    sens_Smj_s[j,k,l] <- (0.5 * mu_F1[j,k]* ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k])) ) * mu_nrf1[j,k,l]) + 
                         (0.5 * mu_F2[j,k]* ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k])) ) * mu_nrf2[j,k,l])  
    
     ####################################################################################################################################################################################
     # Sensitivity to Cause- and Region specific mortality [female, ahy]
     sens_Sfa_w1[j,k] <-  mu_Sfa_h1[j] * mean_psi[j,k] * mu_Sfa_s[j,k]
     sens_Sfa_w2[j,k] <-  mu_Sfa_h2[j] * (1 -mean_psi[j,k]) * mu_Sfa_s[j,k]
     sens_Sfa_h1[j,k] <-  mu_Sfa_w1[j] * mean_psi[j,k] * mu_Sfa_s[j,k]
     sens_Sfa_h2[j,k] <-  mu_Sfa_w2[j] * (1 -mean_psi[j,k]) * mu_Sfa_s[j,k]
     sens_Sfa_s[j,k]  <- ((mu_Sfa_h1[j]*mu_Sfa_w1[j]*mean_psi[j,k]) + (mu_Sfa_h2[j]*mu_Sfa_w2[j]*(1 - mean_psi[j,k])) )
     ####################################################################################################################################################################################
     # Sensitivity to Cause- and Region specific mortality [male, ahy]
     sens_Sma_w1[j,k] <-  mu_Sma_h1[j] * mean_psi[j,k] * mu_Sma_s[j,k]
     sens_Sma_w2[j,k] <-  mu_Sma_h2[j] * (1 -mean_psi[j,k]) * mu_Sma_s[j,k]
     sens_Sma_h1[j,k] <-  mu_Sma_w1[j] * mean_psi[j,k] * mu_Sma_s[j,k]
     sens_Sma_h2[j,k] <-  mu_Sma_w2[j] * (1 -mean_psi[j,k]) * mu_Sma_s[j,k]
     sens_Sma_s[j,k] <- ((mu_Sma_h1[j]*mu_Sma_w1[j]*mean_psi[j,k]) + (mu_Sma_h2[j]*mu_Sma_w2[j]*(1 - mean_psi[j,k])) )
     ####################################################################################################################################################################################################################################################################################################################################################################################################################################################################
     # Sensitivity to movements among populations
      sens_pi[j,1,k] <-  ((0.5 * mu_F1[j,k] * mu_nf1[j,1] *  mu_Sfj_s[j,k]  * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) +  0.5 * mu_F2[j,k] * mu_nf2[j,1] *  mu_Sfj_s[j,k]  * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) + (mu_Sfa_w1[j] *  mu_Sfa_h1[j] * mean_psi[j,k]) * (mu_Sfa_w2[j] *  mu_Sfa_h2[j] * (1 -mean_psi[j,k])) * mu_Sfa_s[j,k]) +
                          (0.5 * mu_F1[j,k] * mu_nf1[j,1] *  mu_Smj_s[j,k]  * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) +  0.5 * mu_F2[j,k] * mu_nf2[j,1] *  mu_Smj_s[j,k]  * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) + (mu_Sma_w1[j] *  mu_Sma_h1[j] * mean_psi[j,k]) * (mu_Sma_w2[j] *  mu_Sma_h2[j] * (1 -mean_psi[j,k])) * mu_Sma_s[j,k])) - 
      
                       ( (0.5 * mu_F1[1,k] * mu_nf1[1,1] *  mu_Sfj_s[1,k]  * ((mu_Sfj_h1[1]*mu_Sfj_w1[1]*mean_psi[1,k]) + (mu_Sfj_h2[1]*mu_Sfj_w2[1]*(1 - mean_psi[1,k]))) + 0.5 * mu_F2[1,k] * mu_nf2[1,1] *  mu_Sfj_s[1,k]  * ((mu_Sfj_h1[1]*mu_Sfj_w1[1]*mean_psi[1,k]) + (mu_Sfj_h2[1]*mu_Sfj_w2[1]*(1 - mean_psi[1,k]))) + (mu_Sfa_w1[1] *  mu_Sfa_h1[1] * mean_psi[1,k]) * (mu_Sfa_w2[1] *  mu_Sfa_h2[1] * (1 -mean_psi[1,k])) * mu_Sfa_s[1,k]) +
                         (0.5 * mu_F1[2,k] * mu_nf1[2,1] *  mu_Sfj_s[2,k]  * ((mu_Sfj_h1[2]*mu_Sfj_w1[2]*mean_psi[2,k]) + (mu_Sfj_h2[2]*mu_Sfj_w2[2]*(1 - mean_psi[2,k]))) + 0.5 * mu_F2[2,k] * mu_nf2[2,1] *  mu_Sfj_s[2,k]  * ((mu_Sfj_h1[2]*mu_Sfj_w1[2]*mean_psi[2,k]) + (mu_Sfj_h2[2]*mu_Sfj_w2[2]*(1 - mean_psi[2,k]))) + (mu_Sfa_w1[2] *  mu_Sfa_h1[2] * mean_psi[2,k]) * (mu_Sfa_w2[2] *  mu_Sfa_h2[2] * (1 -mean_psi[2,k])) * mu_Sfa_s[2,k]) +
                         (0.5 * mu_F1[3,k] * mu_nf1[3,1] *  mu_Sfj_s[3,k]  * ((mu_Sfj_h1[3]*mu_Sfj_w1[3]*mean_psi[3,k]) + (mu_Sfj_h2[3]*mu_Sfj_w2[3]*(1 - mean_psi[3,k]))) + 0.5 * mu_F2[3,k] * mu_nf2[3,1] *  mu_Sfj_s[3,k]  * ((mu_Sfj_h1[3]*mu_Sfj_w1[3]*mean_psi[3,k]) + (mu_Sfj_h2[3]*mu_Sfj_w2[3]*(1 - mean_psi[3,k]))) + (mu_Sfa_w1[3] *  mu_Sfa_h1[3] * mean_psi[3,k]) * (mu_Sfa_w2[3] *  mu_Sfa_h2[3] * (1 -mean_psi[3,k])) * mu_Sfa_s[3,k]) +
                         (0.5 * mu_F1[1,k] * mu_nf1[1,1] *  mu_Smj_s[1,k]  * ((mu_Smj_h1[1]*mu_Smj_w1[1]*mean_psi[1,k]) + (mu_Smj_h2[1]*mu_Smj_w2[1]*(1 - mean_psi[1,k]))) + 0.5 * mu_F2[1,k] * mu_nf2[1,1] *  mu_Smj_s[1,k]  * ((mu_Smj_h1[1]*mu_Smj_w1[1]*mean_psi[1,k]) + (mu_Smj_h2[1]*mu_Smj_w2[1]*(1 - mean_psi[1,k]))) + (mu_Sma_w1[1] *  mu_Sma_h1[1] * mean_psi[1,k]) * (mu_Sma_w2[1] *  mu_Sma_h2[1] * (1 -mean_psi[1,k])) * mu_Sma_s[1,k]) +
                         (0.5 * mu_F1[2,k] * mu_nf1[2,1] *  mu_Smj_s[2,k]  * ((mu_Smj_h1[2]*mu_Smj_w1[2]*mean_psi[2,k]) + (mu_Smj_h2[2]*mu_Smj_w2[2]*(1 - mean_psi[2,k]))) + 0.5 * mu_F2[2,k] * mu_nf2[2,1] *  mu_Smj_s[2,k]  * ((mu_Smj_h1[2]*mu_Smj_w1[2]*mean_psi[2,k]) + (mu_Smj_h2[2]*mu_Smj_w2[2]*(1 - mean_psi[2,k]))) + (mu_Sma_w1[2] *  mu_Sma_h1[2] * mean_psi[2,k]) * (mu_Sma_w2[2] *  mu_Sma_h2[2] * (1 -mean_psi[2,k])) * mu_Sma_s[2,k]) +
                         (0.5 * mu_F1[3,k] * mu_nf1[3,1] *  mu_Smj_s[3,k]  * ((mu_Smj_h1[3]*mu_Smj_w1[3]*mean_psi[3,k]) + (mu_Smj_h2[3]*mu_Smj_w2[3]*(1 - mean_psi[3,k]))) + 0.5 * mu_F2[3,k] * mu_nf2[3,1] *  mu_Smj_s[3,k]  * ((mu_Smj_h1[3]*mu_Smj_w1[3]*mean_psi[3,k]) + (mu_Smj_h2[3]*mu_Smj_w2[3]*(1 - mean_psi[3,k]))) + (mu_Sma_w1[3] *  mu_Sma_h1[3] * mean_psi[3,k]) * (mu_Sma_w2[3] *  mu_Sma_h2[3] * (1 -mean_psi[3,k])) * mu_Sma_s[3,k]))
      
    sens_pi[j,2,k] <-((0.5 * mu_F1[j,k] * mu_nf1[j,2] *  mu_Sfj_s[j,k]  * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) + 0.5 * mu_F2[j,k] * mu_nf2[j,2] *  mu_Sfj_s[j,k]  * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) + (mu_Sfa_w1[j] *  mu_Sfa_h1[j] * mean_psi[j,k]) * (mu_Sfa_w2[j] *  mu_Sfa_h2[j] * (1 -mean_psi[j,k])) * mu_Sfa_s[j,k] )+ 
                      (0.5 * mu_F1[j,k] * mu_nf1[j,2] *  mu_Smj_s[j,k]  * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) + 0.5 * mu_F2[j,k] * mu_nf2[j,2] *  mu_Smj_s[j,k]  * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) + (mu_Sma_w1[j] *  mu_Sma_h1[j] * mean_psi[j,k]) * (mu_Sma_w2[j] *  mu_Sma_h2[j] * (1 -mean_psi[j,k])) * mu_Sma_s[j,k] ))-

                      ( (0.5 * mu_F1[1,k] * mu_nf1[1,1] *  mu_Sfj_s[1,k]  * ((mu_Sfj_h1[1]*mu_Sfj_w1[1]*mean_psi[1,k]) + (mu_Sfj_h2[1]*mu_Sfj_w2[1]*(1 - mean_psi[1,k]))) + 0.5 * mu_F2[1,k] * mu_nf2[1,1] *  mu_Sfj_s[1,k]  * ((mu_Sfj_h1[1]*mu_Sfj_w1[1]*mean_psi[1,k]) + (mu_Sfj_h2[1]*mu_Sfj_w2[1]*(1 - mean_psi[1,k]))) + (mu_Sfa_w1[1] *  mu_Sfa_h1[1] * mean_psi[1,k]) * (mu_Sfa_w2[1] *  mu_Sfa_h2[1] * (1 -mean_psi[1,k])) * mu_Sfa_s[1,k]) +
                        (0.5 * mu_F1[2,k] * mu_nf1[2,1] *  mu_Sfj_s[2,k]  * ((mu_Sfj_h1[2]*mu_Sfj_w1[2]*mean_psi[2,k]) + (mu_Sfj_h2[2]*mu_Sfj_w2[2]*(1 - mean_psi[2,k]))) + 0.5 * mu_F2[2,k] * mu_nf2[2,1] *  mu_Sfj_s[2,k]  * ((mu_Sfj_h1[2]*mu_Sfj_w1[2]*mean_psi[2,k]) + (mu_Sfj_h2[2]*mu_Sfj_w2[2]*(1 - mean_psi[2,k]))) + (mu_Sfa_w1[2] *  mu_Sfa_h1[2] * mean_psi[2,k]) * (mu_Sfa_w2[2] *  mu_Sfa_h2[2] * (1 -mean_psi[2,k])) * mu_Sfa_s[2,k]) +
                        (0.5 * mu_F1[3,k] * mu_nf1[3,1] *  mu_Sfj_s[3,k]  * ((mu_Sfj_h1[3]*mu_Sfj_w1[3]*mean_psi[3,k]) + (mu_Sfj_h2[3]*mu_Sfj_w2[3]*(1 - mean_psi[3,k]))) + 0.5 * mu_F2[3,k] * mu_nf2[3,1] *  mu_Sfj_s[3,k]  * ((mu_Sfj_h1[3]*mu_Sfj_w1[3]*mean_psi[3,k]) + (mu_Sfj_h2[3]*mu_Sfj_w2[3]*(1 - mean_psi[3,k]))) + (mu_Sfa_w1[3] *  mu_Sfa_h1[3] * mean_psi[3,k]) * (mu_Sfa_w2[3] *  mu_Sfa_h2[3] * (1 -mean_psi[3,k])) * mu_Sfa_s[3,k]) +
                        (0.5 * mu_F1[1,k] * mu_nf1[1,1] *  mu_Smj_s[1,k]  * ((mu_Smj_h1[1]*mu_Smj_w1[1]*mean_psi[1,k]) + (mu_Smj_h2[1]*mu_Smj_w2[1]*(1 - mean_psi[1,k]))) + 0.5 * mu_F2[1,k] * mu_nf2[1,1] *  mu_Smj_s[1,k]  * ((mu_Smj_h1[1]*mu_Smj_w1[1]*mean_psi[1,k]) + (mu_Smj_h2[1]*mu_Smj_w2[1]*(1 - mean_psi[1,k]))) + (mu_Sma_w1[1] *  mu_Sma_h1[1] * mean_psi[1,k]) * (mu_Sma_w2[1] *  mu_Sma_h2[1] * (1 -mean_psi[1,k])) * mu_Sma_s[1,k]) +
                        (0.5 * mu_F1[2,k] * mu_nf1[2,1] *  mu_Smj_s[2,k]  * ((mu_Smj_h1[2]*mu_Smj_w1[2]*mean_psi[2,k]) + (mu_Smj_h2[2]*mu_Smj_w2[2]*(1 - mean_psi[2,k]))) + 0.5 * mu_F2[2,k] * mu_nf2[2,1] *  mu_Smj_s[2,k]  * ((mu_Smj_h1[2]*mu_Smj_w1[2]*mean_psi[2,k]) + (mu_Smj_h2[2]*mu_Smj_w2[2]*(1 - mean_psi[2,k]))) + (mu_Sma_w1[2] *  mu_Sma_h1[2] * mean_psi[2,k]) * (mu_Sma_w2[2] *  mu_Sma_h2[2] * (1 -mean_psi[2,k])) * mu_Sma_s[2,k]) +
                        (0.5 * mu_F1[3,k] * mu_nf1[3,1] *  mu_Smj_s[3,k]  * ((mu_Smj_h1[3]*mu_Smj_w1[3]*mean_psi[3,k]) + (mu_Smj_h2[3]*mu_Smj_w2[3]*(1 - mean_psi[3,k]))) + 0.5 * mu_F2[3,k] * mu_nf2[3,1] *  mu_Smj_s[3,k]  * ((mu_Smj_h1[3]*mu_Smj_w1[3]*mean_psi[3,k]) + (mu_Smj_h2[3]*mu_Smj_w2[3]*(1 - mean_psi[3,k]))) + (mu_Sma_w1[3] *  mu_Sma_h1[3] * mean_psi[3,k]) * (mu_Sma_w2[3] *  mu_Sma_h2[3] * (1 -mean_psi[3,k])) * mu_Sma_s[3,k]))
    
    sens_pi[j,3,k] <-  ((0.5 * mu_F1[j,k] * mu_nf1[j,3] *  mu_Sfj_s[j,k]  * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) + 0.5 * mu_F2[j,k] * mu_nf2[j,3] *  mu_Sfj_s[j,k]  * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) + (mu_Sfa_w1[j] *  mu_Sfa_h1[j] * mean_psi[j,k]) * (mu_Sfa_w2[j] *  mu_Sfa_h2[j] * (1 -mean_psi[j,k])) * mu_Sfa_s[j,k]  )+
                        (0.5 * mu_F1[j,k] * mu_nf1[j,3] *  mu_Smj_s[j,k]  * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) + 0.5 * mu_F2[j,k] * mu_nf2[j,3] *  mu_Smj_s[j,k]  * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) + (mu_Sma_w1[j] *  mu_Sma_h1[j] * mean_psi[j,k]) * (mu_Sma_w2[j] *  mu_Sma_h2[j] * (1 -mean_psi[j,k])) * mu_Sma_s[j,k]  )) - 
      
                      ( (0.5 * mu_F1[1,k] * mu_nf1[1,1] *  mu_Sfj_s[1,k]  * ((mu_Sfj_h1[1]*mu_Sfj_w1[1]*mean_psi[1,k]) + (mu_Sfj_h2[1]*mu_Sfj_w2[1]*(1 - mean_psi[1,k]))) + 0.5 * mu_F2[1,k] * mu_nf2[1,1] *  mu_Sfj_s[1,k]  * ((mu_Sfj_h1[1]*mu_Sfj_w1[1]*mean_psi[1,k]) + (mu_Sfj_h2[1]*mu_Sfj_w2[1]*(1 - mean_psi[1,k]))) + (mu_Sfa_w1[1] *  mu_Sfa_h1[1] * mean_psi[1,k]) * (mu_Sfa_w2[1] *  mu_Sfa_h2[1] * (1 -mean_psi[1,k])) * mu_Sfa_s[1,k]) +
                        (0.5 * mu_F1[2,k] * mu_nf1[2,1] *  mu_Sfj_s[2,k]  * ((mu_Sfj_h1[2]*mu_Sfj_w1[2]*mean_psi[2,k]) + (mu_Sfj_h2[2]*mu_Sfj_w2[2]*(1 - mean_psi[2,k]))) + 0.5 * mu_F2[2,k] * mu_nf2[2,1] *  mu_Sfj_s[2,k]  * ((mu_Sfj_h1[2]*mu_Sfj_w1[2]*mean_psi[2,k]) + (mu_Sfj_h2[2]*mu_Sfj_w2[2]*(1 - mean_psi[2,k]))) + (mu_Sfa_w1[2] *  mu_Sfa_h1[2] * mean_psi[2,k]) * (mu_Sfa_w2[2] *  mu_Sfa_h2[2] * (1 -mean_psi[2,k])) * mu_Sfa_s[2,k]) +
                        (0.5 * mu_F1[3,k] * mu_nf1[3,1] *  mu_Sfj_s[3,k]  * ((mu_Sfj_h1[3]*mu_Sfj_w1[3]*mean_psi[3,k]) + (mu_Sfj_h2[3]*mu_Sfj_w2[3]*(1 - mean_psi[3,k]))) + 0.5 * mu_F2[3,k] * mu_nf2[3,1] *  mu_Sfj_s[3,k]  * ((mu_Sfj_h1[3]*mu_Sfj_w1[3]*mean_psi[3,k]) + (mu_Sfj_h2[3]*mu_Sfj_w2[3]*(1 - mean_psi[3,k]))) + (mu_Sfa_w1[3] *  mu_Sfa_h1[3] * mean_psi[3,k]) * (mu_Sfa_w2[3] *  mu_Sfa_h2[3] * (1 -mean_psi[3,k])) * mu_Sfa_s[3,k]) +
                        (0.5 * mu_F1[1,k] * mu_nf1[1,1] *  mu_Smj_s[1,k]  * ((mu_Smj_h1[1]*mu_Smj_w1[1]*mean_psi[1,k]) + (mu_Smj_h2[1]*mu_Smj_w2[1]*(1 - mean_psi[1,k]))) + 0.5 * mu_F2[1,k] * mu_nf2[1,1] *  mu_Smj_s[1,k]  * ((mu_Smj_h1[1]*mu_Smj_w1[1]*mean_psi[1,k]) + (mu_Smj_h2[1]*mu_Smj_w2[1]*(1 - mean_psi[1,k]))) + (mu_Sma_w1[1] *  mu_Sma_h1[1] * mean_psi[1,k]) * (mu_Sma_w2[1] *  mu_Sma_h2[1] * (1 -mean_psi[1,k])) * mu_Sma_s[1,k]) +
                        (0.5 * mu_F1[2,k] * mu_nf1[2,1] *  mu_Smj_s[2,k]  * ((mu_Smj_h1[2]*mu_Smj_w1[2]*mean_psi[2,k]) + (mu_Smj_h2[2]*mu_Smj_w2[2]*(1 - mean_psi[2,k]))) + 0.5 * mu_F2[2,k] * mu_nf2[2,1] *  mu_Smj_s[2,k]  * ((mu_Smj_h1[2]*mu_Smj_w1[2]*mean_psi[2,k]) + (mu_Smj_h2[2]*mu_Smj_w2[2]*(1 - mean_psi[2,k]))) + (mu_Sma_w1[2] *  mu_Sma_h1[2] * mean_psi[2,k]) * (mu_Sma_w2[2] *  mu_Sma_h2[2] * (1 -mean_psi[2,k])) * mu_Sma_s[2,k]) +
                        (0.5 * mu_F1[3,k] * mu_nf1[3,1] *  mu_Smj_s[3,k]  * ((mu_Smj_h1[3]*mu_Smj_w1[3]*mean_psi[3,k]) + (mu_Smj_h2[3]*mu_Smj_w2[3]*(1 - mean_psi[3,k]))) + 0.5 * mu_F2[3,k] * mu_nf2[3,1] *  mu_Smj_s[3,k]  * ((mu_Smj_h1[3]*mu_Smj_w1[3]*mean_psi[3,k]) + (mu_Smj_h2[3]*mu_Smj_w2[3]*(1 - mean_psi[3,k]))) + (mu_Sma_w1[3] *  mu_Sma_h1[3] * mean_psi[3,k]) * (mu_Sma_w2[3] *  mu_Sma_h2[3] * (1 -mean_psi[3,k])) * mu_Sma_s[3,k]))
    
    ##############################################################################################################################################################################################################################################################################
    # Sensitivity to population age & sex structure
    sens_nf1[j,k,l] <-  (0.5 * mu_F1[j,k] * mu_Sfj_s[j,k] * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) + mu_Sfa_s[j,k] * ((mu_Sfa_w1[j]*mu_Sfa_h1[j]*mean_psi[j,k]) + (mu_Sfa_w2[j]*mu_Sfa_h2[j]*(1 - mean_psi[j,k])))) -
                       ((0.5 * mu_Sfj_s[j,k] * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                        (0.5 * mu_Smj_s[j,k] * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                              (mu_Sfa_s[j,k] * (mu_Sfa_w1[j]*mu_Sfa_h1[j]*mean_psi[j,k] + mu_Sfa_w2[j]*mu_Sfa_h2[j]*(1 - mean_psi[j,k]))) +
                              (mu_Sma_s[j,k] * (mu_Sma_w1[j]*mu_Sma_h1[j]*mean_psi[j,k] + mu_Sma_w2[j]*mu_Sma_h2[j]*(1 - mean_psi[j,k]))) )
    
    sens_nf2[j,k,l] <-   (0.5 * mu_F2[j,k] * mu_Sfj_s[j,k] * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) + mu_Sfa_s[j,k] * (mu_Sfa_w1[j]*mu_Sfa_h1[j]*mean_psi[j,k] + mu_Sfa_w2[j]*mu_Sfa_h2[j]*(1 - mean_psi[j,k]))) -
                        ((0.5 * mu_Sfj_s[j,k] * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                         (0.5 * mu_Smj_s[j,k] * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                              (mu_Sfa_s[j,k] * (mu_Sfa_w1[j]*mu_Sfa_h1[j]*mean_psi[j,k] + mu_Sfa_w2[j]*mu_Sfa_h2[j]*(1 - mean_psi[j,k]))) +
                              (mu_Sma_s[j,k] * (mu_Sma_w1[j]*mu_Sma_h1[j]*mean_psi[j,k] + mu_Sma_w2[j]*mu_Sma_h2[j]*(1 - mean_psi[j,k]))) )
    
    sens_nm1[j,k,l] <-  (0.5 * mu_F1[j,k] * mu_Smj_s[j,k] * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) + mu_Sma_s[j,k] * ((mu_Sma_w1[j]*mu_Sma_h1[j]*mean_psi[j,k]) + (mu_Sma_w2[j]*mu_Sma_h2[j]*(1 - mean_psi[j,k])))) -
                       ((0.5 * mu_Sfj_s[j,k] * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                        (0.5 * mu_Smj_s[j,k] * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                          (mu_Sfa_s[j,k] * (mu_Sfa_w1[j]*mu_Sfa_h1[j]*mean_psi[j,k] + mu_Sfa_w2[j]*mu_Sfa_h2[j]*(1 - mean_psi[j,k]))) +
                          (mu_Sma_s[j,k] * (mu_Sma_w1[j]*mu_Sma_h1[j]*mean_psi[j,k] + mu_Sma_w2[j]*mu_Sma_h2[j]*(1 - mean_psi[j,k]))) )
    
    sens_nm2[j,k,l] <-   (0.5 * mu_F2[j,k] * mu_Smj_s[j,k] * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) + mu_Sma_s[j,k] * (mu_Sma_w1[j]*mu_Sma_h1[j]*mean_psi[j,k] + mu_Sma_w2[j]*mu_Sma_h2[j]*(1 - mean_psi[j,k]))) -
                        ((0.5 * mu_Sfj_s[j,k] * ((mu_Sfj_h1[j]*mu_Sfj_w1[j]*mean_psi[j,k]) + (mu_Sfj_h2[j]*mu_Sfj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                         (0.5 * mu_Smj_s[j,k] * ((mu_Smj_h1[j]*mu_Smj_w1[j]*mean_psi[j,k]) + (mu_Smj_h2[j]*mu_Smj_w2[j]*(1 - mean_psi[j,k]))) * (mu_F1[j,k] * mu_nrf1[j,k,l] + mu_F2[j,k] *  mu_nrf2[j,k,l])) +
                               (mu_Sfa_s[j,k] * (mu_Sfa_w1[j]*mu_Sfa_h1[j]*mean_psi[j,k] + mu_Sfa_w2[j]*mu_Sfa_h2[j]*(1 - mean_psi[j,k]))) +
                               (mu_Sma_s[j,k] * (mu_Sma_w1[j]*mu_Sma_h1[j]*mean_psi[j,k] + mu_Sma_w2[j]*mu_Sma_h2[j]*(1 - mean_psi[j,k]))) )
                      
    #######################################################################################################################################################################
    # Transient sensitivities
    #######################################################################################################################################################################
    sens_F1_t[j,k,1:59,l] <- (0.5 * (((Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2 * (Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) + 
                                    ((Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 * (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) )) *
                                      (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 * ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2) +
                             (0.5 * (((Smj_w1[1:59,j]+Smj_w1[2:60,j])/2 * (Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) + 
                                       ((Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 * (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) )) *
                                (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 * ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2)
    
    sens_F2_t[j,k,1:59,l] <- (0.5 * (((Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2 * (Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) + 
                                    ((Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 * (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) * 
                                           (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 * ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                             (0.5 * (((Smj_w1[1:59,j]+Smj_w1[2:60,j])/2 * (Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) + 
                                       ((Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 * (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) * 
                                (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 * ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2)
                               
    ##################################################################################################################################################################################################################
    sens_Sfj_w1_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                 (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
    
    sens_Sfj_w2_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                 (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
    
    sens_Sfj_h1_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                 (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
    
    sens_Sfj_h2_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                 (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
    
    sens_Sfj_s_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2 * (Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
    
    sens_Sfa_w1_t[j,k,1:59] <-  (Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 *(Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2
    sens_Sfa_w2_t[j,k,1:59] <-  (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2  * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) *(Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2
    sens_Sfa_h1_t[j,k,1:59] <-  (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 *(Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2
    sens_Sfa_h2_t[j,k,1:59] <-  (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2  * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) *(Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2
     sens_Sfa_s_t[j,k,1:59] <-  (Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) 
    
     ###################################################################################################################################################################################################################
     sens_Smj_w1_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                  (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
     
     sens_Smj_w2_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                  (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
     
     sens_Smj_h1_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                  (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
     
     sens_Smj_h2_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                  (0.5 * (F2[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2 *   ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
     
     sens_Smj_s_t[j,k,1:59,l] <- (0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 * (Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * ( nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2 ) + 
                                 (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2 * (Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2 *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 * (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) * ( nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2 )
     
     sens_Sma_w1_t[j,k,1:59] <-  (Sma_h1[1:59,j]+Sma_h1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 *(Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2
     sens_Sma_w2_t[j,k,1:59] <-  (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2  * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) *(Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2
     sens_Sma_h1_t[j,k,1:59] <-  (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 *(Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2
     sens_Sma_h2_t[j,k,1:59] <-  (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2  * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) *(Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2
      sens_Sma_s_t[j,k,1:59] <-  (Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2) 
     ##################################################################################################################################################################################################################
    sens_pi_t[j,1,k,1:59] <-  (((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2  * ( nf1[1:59,j,1] +  nf1[2:60,j,1])/2  *   (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))  +
                                (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2  * ( nf2[1:59,j,1] +  nf2[2:60,j,1])/2  *   (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                                 ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2  + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) * (Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2) +
                                 ((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2  * ( nf1[1:59,j,1] +  nf1[2:60,j,1])/2  *   (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))  +
                                    (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2  * ( nf2[1:59,j,1] +  nf2[2:60,j,1])/2  *   (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                                    ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2  + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) * (Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2)) - 
     
       ( ((0.5 * (F1[1:59,3,k]+F1[2:60,3,k])/2  * ( nf1[1:59,3,1] +  nf1[2:60,3,1])/2  *   (Sfj_s[1:59,3,k]+Sfj_s[2:60,3,k])/2  * ((Sfj_h1[1:59,3]+Sfj_h1[2:60,3])/2 * (Sfj_w1[1:59,3]+Sfj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Sfj_h2[1:59,3]+Sfj_h2[2:60,3])/2 * (Sfj_w2[1:59,3]+Sfj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)))  +
           (0.5 * (F2[1:59,3,k]+F2[2:60,3,k])/2  * ( nf2[1:59,3,1] +  nf2[2:60,3,1])/2  *   (Sfj_s[1:59,3,k]+Sfj_s[2:60,3,k])/2  * ((Sfj_h1[1:59,3]+Sfj_h1[2:60,3])/2 * (Sfj_w1[1:59,3]+Sfj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Sfj_h2[1:59,3]+Sfj_h2[2:60,3])/2 * (Sfj_w2[1:59,3]+Sfj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2))) +
           ((Sfa_h1[1:59,3]+Sfa_h1[2:60,3])/2 * (Sfa_w1[1:59,3]+Sfa_w1[2:60,3])/2  * (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2  + (Sfa_h2[1:59,3]+Sfa_h2[2:60,3])/2 * (Sfa_w2[1:59,3]+Sfa_w2[2:60,3])/2 * (1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)) * (Sfa_s[1:59,3,k]+Sfa_s[2:60,3,k])/2) +
      
        ((0.5 * (F1[1:59,2,k]+F1[2:60,2,k])/2  * ( nf1[1:59,2,1] +  nf1[2:60,2,1])/2  *   (Sfj_s[1:59,2,k]+Sfj_s[2:60,2,k])/2  * ((Sfj_h1[1:59,2]+Sfj_h1[2:60,2])/2 * (Sfj_w1[1:59,2]+Sfj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Sfj_h2[1:59,2]+Sfj_h2[2:60,2])/2 * (Sfj_w2[1:59,2]+Sfj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)))  +
           (0.5 * (F2[1:59,2,k]+F2[2:60,2,k])/2  * ( nf2[1:59,2,1] +  nf2[2:60,2,1])/2  *   (Sfj_s[1:59,2,k]+Sfj_s[2:60,2,k])/2  * ((Sfj_h1[1:59,2]+Sfj_h1[2:60,2])/2 * (Sfj_w1[1:59,2]+Sfj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Sfj_h2[1:59,2]+Sfj_h2[2:60,2])/2 * (Sfj_w2[1:59,2]+Sfj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2))) +
           ((Sfa_h1[1:59,2]+Sfa_h1[2:60,2])/2 * (Sfa_w1[1:59,2]+Sfa_w1[2:60,2])/2  * (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2  + (Sfa_h2[1:59,2]+Sfa_h2[2:60,2])/2 * (Sfa_w2[1:59,2]+Sfa_w2[2:60,2])/2 * (1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)) * (Sfa_s[1:59,2,k]+Sfa_s[2:60,2,k])/2) +
      
        ((0.5 * (F1[1:59,1,k]+F1[2:60,1,k])/2  * ( nf1[1:59,1,1] +  nf1[2:60,1,1])/2  *   (Sfj_s[1:59,1,k]+Sfj_s[2:60,1,k])/2  * ((Sfj_h1[1:59,1]+Sfj_h1[2:60,1])/2 * (Sfj_w1[1:59,1]+Sfj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Sfj_h2[1:59,1]+Sfj_h2[2:60,1])/2 * (Sfj_w2[1:59,1]+Sfj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)))  +
           (0.5 * (F2[1:59,1,k]+F2[2:60,1,k])/2  * ( nf2[1:59,1,1] +  nf2[2:60,1,1])/2  *   (Sfj_s[1:59,1,k]+Sfj_s[2:60,1,k])/2  * ((Sfj_h1[1:59,1]+Sfj_h1[2:60,1])/2 * (Sfj_w1[1:59,1]+Sfj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Sfj_h2[1:59,1]+Sfj_h2[2:60,1])/2 * (Sfj_w2[1:59,1]+Sfj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2))) +
           ((Sfa_h1[1:59,1]+Sfa_h1[2:60,1])/2 * (Sfa_w1[1:59,1]+Sfa_w1[2:60,1])/2  * (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2  + (Sfa_h2[1:59,1]+Sfa_h2[2:60,1])/2 * (Sfa_w2[1:59,1]+Sfa_w2[2:60,1])/2 * (1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)) * (Sfa_s[1:59,1,k]+Sfa_s[2:60,1,k])/2) +

          ( ((0.5 * (F1[1:59,3,k]+F1[2:60,3,k])/2  * ( nf1[1:59,3,1] +  nf1[2:60,3,1])/2  *   (Smj_s[1:59,3,k]+Smj_s[2:60,3,k])/2  * ((Smj_h1[1:59,3]+Smj_h1[2:60,3])/2 * (Smj_w1[1:59,3]+Smj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Smj_h2[1:59,3]+Smj_h2[2:60,3])/2 * (Smj_w2[1:59,3]+Smj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)))  +
               (0.5 * (F2[1:59,3,k]+F2[2:60,3,k])/2  * ( nf2[1:59,3,1] +  nf2[2:60,3,1])/2  *   (Smj_s[1:59,3,k]+Smj_s[2:60,3,k])/2  * ((Smj_h1[1:59,3]+Smj_h1[2:60,3])/2 * (Smj_w1[1:59,3]+Smj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Smj_h2[1:59,3]+Smj_h2[2:60,3])/2 * (Smj_w2[1:59,3]+Smj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2))) +
               ((Sma_h1[1:59,3]+Sma_h1[2:60,3])/2 * (Sma_w1[1:59,3]+Sma_w1[2:60,3])/2  * (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2  + (Sma_h2[1:59,3]+Sma_h2[2:60,3])/2 * (Sma_w2[1:59,3]+Sma_w2[2:60,3])/2 * (1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)) * (Sma_s[1:59,3,k]+Sma_s[2:60,3,k])/2) +
              
              ((0.5 * (F1[1:59,2,k]+F1[2:60,2,k])/2  * ( nf1[1:59,2,1] +  nf1[2:60,2,1])/2  *   (Smj_s[1:59,2,k]+Smj_s[2:60,2,k])/2  * ((Smj_h1[1:59,2]+Smj_h1[2:60,2])/2 * (Smj_w1[1:59,2]+Smj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Smj_h2[1:59,2]+Smj_h2[2:60,2])/2 * (Smj_w2[1:59,2]+Smj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)))  +
                 (0.5 * (F2[1:59,2,k]+F2[2:60,2,k])/2  * ( nf2[1:59,2,1] +  nf2[2:60,2,1])/2  *   (Smj_s[1:59,2,k]+Smj_s[2:60,2,k])/2  * ((Smj_h1[1:59,2]+Smj_h1[2:60,2])/2 * (Smj_w1[1:59,2]+Smj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Smj_h2[1:59,2]+Smj_h2[2:60,2])/2 * (Smj_w2[1:59,2]+Smj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2))) +
                 ((Sma_h1[1:59,2]+Sma_h1[2:60,2])/2 * (Sma_w1[1:59,2]+Sma_w1[2:60,2])/2  * (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2  + (Sma_h2[1:59,2]+Sma_h2[2:60,2])/2 * (Sma_w2[1:59,2]+Sma_w2[2:60,2])/2 * (1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)) * (Sma_s[1:59,2,k]+Sma_s[2:60,2,k])/2) +
              
              ((0.5 * (F1[1:59,1,k]+F1[2:60,1,k])/2  * ( nf1[1:59,1,1] +  nf1[2:60,1,1])/2  *   (Smj_s[1:59,1,k]+Smj_s[2:60,1,k])/2  * ((Smj_h1[1:59,1]+Smj_h1[2:60,1])/2 * (Smj_w1[1:59,1]+Smj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Smj_h2[1:59,1]+Smj_h2[2:60,1])/2 * (Smj_w2[1:59,1]+Smj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)))  +
                 (0.5 * (F2[1:59,1,k]+F2[2:60,1,k])/2  * ( nf2[1:59,1,1] +  nf2[2:60,1,1])/2  *   (Smj_s[1:59,1,k]+Smj_s[2:60,1,k])/2  * ((Smj_h1[1:59,1]+Smj_h1[2:60,1])/2 * (Smj_w1[1:59,1]+Smj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Smj_h2[1:59,1]+Smj_h2[2:60,1])/2 * (Smj_w2[1:59,1]+Smj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2))) +
                 ((Sma_h1[1:59,1]+Sma_h1[2:60,1])/2 * (Sma_w1[1:59,1]+Sma_w1[2:60,1])/2  * (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2  + (Sma_h2[1:59,1]+Sma_h2[2:60,1])/2 * (Sma_w2[1:59,1]+Sma_w2[2:60,1])/2 * (1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)) * (Sma_s[1:59,1,k]+Sma_s[2:60,1,k])/2)
          
        ) )
    
     sens_pi_t[j,2,k,1:59] <- (((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2  * ( nf1[1:59,j,2] +  nf1[2:60,j,2])/2  *   (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                              (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2  * ( nf2[1:59,j,2] +  nf2[2:60,j,2])/2  *   (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                              ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2  +  (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) * (Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2 ) +
                                ((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2  * ( nf1[1:59,j,2] +  nf1[2:60,j,2])/2  *   (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                                   (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2  * ( nf2[1:59,j,2] +  nf2[2:60,j,2])/2  *   (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                                   ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2  +  (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) * (Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2 )) - 

       ( ((0.5 * (F1[1:59,3,k]+F1[2:60,3,k])/2  * ( nf1[1:59,3,1] +  nf1[2:60,3,1])/2  *   (Sfj_s[1:59,3,k]+Sfj_s[2:60,3,k])/2  * ((Sfj_h1[1:59,3]+Sfj_h1[2:60,3])/2 * (Sfj_w1[1:59,3]+Sfj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Sfj_h2[1:59,3]+Sfj_h2[2:60,3])/2 * (Sfj_w2[1:59,3]+Sfj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)))  +
            (0.5 * (F2[1:59,3,k]+F2[2:60,3,k])/2  * ( nf2[1:59,3,1] +  nf2[2:60,3,1])/2  *   (Sfj_s[1:59,3,k]+Sfj_s[2:60,3,k])/2  * ((Sfj_h1[1:59,3]+Sfj_h1[2:60,3])/2 * (Sfj_w1[1:59,3]+Sfj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Sfj_h2[1:59,3]+Sfj_h2[2:60,3])/2 * (Sfj_w2[1:59,3]+Sfj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2))) +
            ((Sfa_h1[1:59,3]+Sfa_h1[2:60,3])/2 * (Sfa_w1[1:59,3]+Sfa_w1[2:60,3])/2  * (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2  + (Sfa_h2[1:59,3]+Sfa_h2[2:60,3])/2 * (Sfa_w2[1:59,3]+Sfa_w2[2:60,3])/2 * (1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)) * (Sfa_s[1:59,3,k]+Sfa_s[2:60,3,k])/2) +
           
           ((0.5 * (F1[1:59,2,k]+F1[2:60,2,k])/2  * ( nf1[1:59,2,1] +  nf1[2:60,2,1])/2  *   (Sfj_s[1:59,2,k]+Sfj_s[2:60,2,k])/2  * ((Sfj_h1[1:59,2]+Sfj_h1[2:60,2])/2 * (Sfj_w1[1:59,2]+Sfj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Sfj_h2[1:59,2]+Sfj_h2[2:60,2])/2 * (Sfj_w2[1:59,2]+Sfj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)))  +
              (0.5 * (F2[1:59,2,k]+F2[2:60,2,k])/2  * ( nf2[1:59,2,1] +  nf2[2:60,2,1])/2  *   (Sfj_s[1:59,2,k]+Sfj_s[2:60,2,k])/2  * ((Sfj_h1[1:59,2]+Sfj_h1[2:60,2])/2 * (Sfj_w1[1:59,2]+Sfj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Sfj_h2[1:59,2]+Sfj_h2[2:60,2])/2 * (Sfj_w2[1:59,2]+Sfj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2))) +
              ((Sfa_h1[1:59,2]+Sfa_h1[2:60,2])/2 * (Sfa_w1[1:59,2]+Sfa_w1[2:60,2])/2  * (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2  + (Sfa_h2[1:59,2]+Sfa_h2[2:60,2])/2 * (Sfa_w2[1:59,2]+Sfa_w2[2:60,2])/2 * (1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)) * (Sfa_s[1:59,2,k]+Sfa_s[2:60,2,k])/2) +
           
           ((0.5 * (F1[1:59,1,k]+F1[2:60,1,k])/2  * ( nf1[1:59,1,1] +  nf1[2:60,1,1])/2  *   (Sfj_s[1:59,1,k]+Sfj_s[2:60,1,k])/2  * ((Sfj_h1[1:59,1]+Sfj_h1[2:60,1])/2 * (Sfj_w1[1:59,1]+Sfj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Sfj_h2[1:59,1]+Sfj_h2[2:60,1])/2 * (Sfj_w2[1:59,1]+Sfj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)))  +
              (0.5 * (F2[1:59,1,k]+F2[2:60,1,k])/2  * ( nf2[1:59,1,1] +  nf2[2:60,1,1])/2  *   (Sfj_s[1:59,1,k]+Sfj_s[2:60,1,k])/2  * ((Sfj_h1[1:59,1]+Sfj_h1[2:60,1])/2 * (Sfj_w1[1:59,1]+Sfj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Sfj_h2[1:59,1]+Sfj_h2[2:60,1])/2 * (Sfj_w2[1:59,1]+Sfj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2))) +
              ((Sfa_h1[1:59,1]+Sfa_h1[2:60,1])/2 * (Sfa_w1[1:59,1]+Sfa_w1[2:60,1])/2  * (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2  + (Sfa_h2[1:59,1]+Sfa_h2[2:60,1])/2 * (Sfa_w2[1:59,1]+Sfa_w2[2:60,1])/2 * (1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)) * (Sfa_s[1:59,1,k]+Sfa_s[2:60,1,k])/2) +
           
           ( ((0.5 * (F1[1:59,3,k]+F1[2:60,3,k])/2  * ( nf1[1:59,3,1] +  nf1[2:60,3,1])/2  *   (Smj_s[1:59,3,k]+Smj_s[2:60,3,k])/2  * ((Smj_h1[1:59,3]+Smj_h1[2:60,3])/2 * (Smj_w1[1:59,3]+Smj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Smj_h2[1:59,3]+Smj_h2[2:60,3])/2 * (Smj_w2[1:59,3]+Smj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)))  +
                (0.5 * (F2[1:59,3,k]+F2[2:60,3,k])/2  * ( nf2[1:59,3,1] +  nf2[2:60,3,1])/2  *   (Smj_s[1:59,3,k]+Smj_s[2:60,3,k])/2  * ((Smj_h1[1:59,3]+Smj_h1[2:60,3])/2 * (Smj_w1[1:59,3]+Smj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Smj_h2[1:59,3]+Smj_h2[2:60,3])/2 * (Smj_w2[1:59,3]+Smj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2))) +
                ((Sma_h1[1:59,3]+Sma_h1[2:60,3])/2 * (Sma_w1[1:59,3]+Sma_w1[2:60,3])/2  * (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2  + (Sma_h2[1:59,3]+Sma_h2[2:60,3])/2 * (Sma_w2[1:59,3]+Sma_w2[2:60,3])/2 * (1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)) * (Sma_s[1:59,3,k]+Sma_s[2:60,3,k])/2) +
               
               ((0.5 * (F1[1:59,2,k]+F1[2:60,2,k])/2  * ( nf1[1:59,2,1] +  nf1[2:60,2,1])/2  *   (Smj_s[1:59,2,k]+Smj_s[2:60,2,k])/2  * ((Smj_h1[1:59,2]+Smj_h1[2:60,2])/2 * (Smj_w1[1:59,2]+Smj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Smj_h2[1:59,2]+Smj_h2[2:60,2])/2 * (Smj_w2[1:59,2]+Smj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)))  +
                  (0.5 * (F2[1:59,2,k]+F2[2:60,2,k])/2  * ( nf2[1:59,2,1] +  nf2[2:60,2,1])/2  *   (Smj_s[1:59,2,k]+Smj_s[2:60,2,k])/2  * ((Smj_h1[1:59,2]+Smj_h1[2:60,2])/2 * (Smj_w1[1:59,2]+Smj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Smj_h2[1:59,2]+Smj_h2[2:60,2])/2 * (Smj_w2[1:59,2]+Smj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2))) +
                  ((Sma_h1[1:59,2]+Sma_h1[2:60,2])/2 * (Sma_w1[1:59,2]+Sma_w1[2:60,2])/2  * (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2  + (Sma_h2[1:59,2]+Sma_h2[2:60,2])/2 * (Sma_w2[1:59,2]+Sma_w2[2:60,2])/2 * (1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)) * (Sma_s[1:59,2,k]+Sma_s[2:60,2,k])/2) +
               
               ((0.5 * (F1[1:59,1,k]+F1[2:60,1,k])/2  * ( nf1[1:59,1,1] +  nf1[2:60,1,1])/2  *   (Smj_s[1:59,1,k]+Smj_s[2:60,1,k])/2  * ((Smj_h1[1:59,1]+Smj_h1[2:60,1])/2 * (Smj_w1[1:59,1]+Smj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Smj_h2[1:59,1]+Smj_h2[2:60,1])/2 * (Smj_w2[1:59,1]+Smj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)))  +
                  (0.5 * (F2[1:59,1,k]+F2[2:60,1,k])/2  * ( nf2[1:59,1,1] +  nf2[2:60,1,1])/2  *   (Smj_s[1:59,1,k]+Smj_s[2:60,1,k])/2  * ((Smj_h1[1:59,1]+Smj_h1[2:60,1])/2 * (Smj_w1[1:59,1]+Smj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Smj_h2[1:59,1]+Smj_h2[2:60,1])/2 * (Smj_w2[1:59,1]+Smj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2))) +
                  ((Sma_h1[1:59,1]+Sma_h1[2:60,1])/2 * (Sma_w1[1:59,1]+Sma_w1[2:60,1])/2  * (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2  + (Sma_h2[1:59,1]+Sma_h2[2:60,1])/2 * (Sma_w2[1:59,1]+Sma_w2[2:60,1])/2 * (1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)) * (Sma_s[1:59,1,k]+Sma_s[2:60,1,k])/2)
           ) )
     
    sens_pi_t[j,3,k,1:59] <-  (((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2  * ( nf1[1:59,j,3] +  nf1[2:60,j,3])/2 * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                              (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2  * ( nf2[1:59,j,3] +  nf2[2:60,j,3])/2 * (Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfj_h2[1:59,j]+Sfj_h2[2:60,j])/2 * (Sfj_w2[1:59,j]+Sfj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                                     ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2  + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) * (Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2) +
                                ((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2  * ( nf1[1:59,j,3] +  nf1[2:60,j,3])/2 * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                                   (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2  * ( nf2[1:59,j,3] +  nf2[2:60,j,3])/2 * (Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Smj_h2[1:59,j]+Smj_h2[2:60,j])/2 * (Smj_w2[1:59,j]+Smj_w2[2:60,j])/2 *(1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))) +
                                   ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  * (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2  + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) * (Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2)) - 
      ( ((0.5 * (F1[1:59,3,k]+F1[2:60,3,k])/2  * ( nf1[1:59,3,1] +  nf1[2:60,3,1])/2  *   (Sfj_s[1:59,3,k]+Sfj_s[2:60,3,k])/2  * ((Sfj_h1[1:59,3]+Sfj_h1[2:60,3])/2 * (Sfj_w1[1:59,3]+Sfj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Sfj_h2[1:59,3]+Sfj_h2[2:60,3])/2 * (Sfj_w2[1:59,3]+Sfj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)))  +
           (0.5 * (F2[1:59,3,k]+F2[2:60,3,k])/2  * ( nf2[1:59,3,1] +  nf2[2:60,3,1])/2  *   (Sfj_s[1:59,3,k]+Sfj_s[2:60,3,k])/2  * ((Sfj_h1[1:59,3]+Sfj_h1[2:60,3])/2 * (Sfj_w1[1:59,3]+Sfj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Sfj_h2[1:59,3]+Sfj_h2[2:60,3])/2 * (Sfj_w2[1:59,3]+Sfj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2))) +
           ((Sfa_h1[1:59,3]+Sfa_h1[2:60,3])/2 * (Sfa_w1[1:59,3]+Sfa_w1[2:60,3])/2  * (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2  + (Sfa_h2[1:59,3]+Sfa_h2[2:60,3])/2 * (Sfa_w2[1:59,3]+Sfa_w2[2:60,3])/2 * (1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)) * (Sfa_s[1:59,3,k]+Sfa_s[2:60,3,k])/2) +
          
          ((0.5 * (F1[1:59,2,k]+F1[2:60,2,k])/2  * ( nf1[1:59,2,1] +  nf1[2:60,2,1])/2  *   (Sfj_s[1:59,2,k]+Sfj_s[2:60,2,k])/2  * ((Sfj_h1[1:59,2]+Sfj_h1[2:60,2])/2 * (Sfj_w1[1:59,2]+Sfj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Sfj_h2[1:59,2]+Sfj_h2[2:60,2])/2 * (Sfj_w2[1:59,2]+Sfj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)))  +
             (0.5 * (F2[1:59,2,k]+F2[2:60,2,k])/2  * ( nf2[1:59,2,1] +  nf2[2:60,2,1])/2  *   (Sfj_s[1:59,2,k]+Sfj_s[2:60,2,k])/2  * ((Sfj_h1[1:59,2]+Sfj_h1[2:60,2])/2 * (Sfj_w1[1:59,2]+Sfj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Sfj_h2[1:59,2]+Sfj_h2[2:60,2])/2 * (Sfj_w2[1:59,2]+Sfj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2))) +
             ((Sfa_h1[1:59,2]+Sfa_h1[2:60,2])/2 * (Sfa_w1[1:59,2]+Sfa_w1[2:60,2])/2  * (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2  + (Sfa_h2[1:59,2]+Sfa_h2[2:60,2])/2 * (Sfa_w2[1:59,2]+Sfa_w2[2:60,2])/2 * (1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)) * (Sfa_s[1:59,2,k]+Sfa_s[2:60,2,k])/2) +
          
          ((0.5 * (F1[1:59,1,k]+F1[2:60,1,k])/2  * ( nf1[1:59,1,1] +  nf1[2:60,1,1])/2  *   (Sfj_s[1:59,1,k]+Sfj_s[2:60,1,k])/2  * ((Sfj_h1[1:59,1]+Sfj_h1[2:60,1])/2 * (Sfj_w1[1:59,1]+Sfj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Sfj_h2[1:59,1]+Sfj_h2[2:60,1])/2 * (Sfj_w2[1:59,1]+Sfj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)))  +
             (0.5 * (F2[1:59,1,k]+F2[2:60,1,k])/2  * ( nf2[1:59,1,1] +  nf2[2:60,1,1])/2  *   (Sfj_s[1:59,1,k]+Sfj_s[2:60,1,k])/2  * ((Sfj_h1[1:59,1]+Sfj_h1[2:60,1])/2 * (Sfj_w1[1:59,1]+Sfj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Sfj_h2[1:59,1]+Sfj_h2[2:60,1])/2 * (Sfj_w2[1:59,1]+Sfj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2))) +
             ((Sfa_h1[1:59,1]+Sfa_h1[2:60,1])/2 * (Sfa_w1[1:59,1]+Sfa_w1[2:60,1])/2  * (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2  + (Sfa_h2[1:59,1]+Sfa_h2[2:60,1])/2 * (Sfa_w2[1:59,1]+Sfa_w2[2:60,1])/2 * (1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)) * (Sfa_s[1:59,1,k]+Sfa_s[2:60,1,k])/2) +
          
          ( ((0.5 * (F1[1:59,3,k]+F1[2:60,3,k])/2  * ( nf1[1:59,3,1] +  nf1[2:60,3,1])/2  *   (Smj_s[1:59,3,k]+Smj_s[2:60,3,k])/2  * ((Smj_h1[1:59,3]+Smj_h1[2:60,3])/2 * (Smj_w1[1:59,3]+Smj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Smj_h2[1:59,3]+Smj_h2[2:60,3])/2 * (Smj_w2[1:59,3]+Smj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)))  +
               (0.5 * (F2[1:59,3,k]+F2[2:60,3,k])/2  * ( nf2[1:59,3,1] +  nf2[2:60,3,1])/2  *   (Smj_s[1:59,3,k]+Smj_s[2:60,3,k])/2  * ((Smj_h1[1:59,3]+Smj_h1[2:60,3])/2 * (Smj_w1[1:59,3]+Smj_w1[2:60,3])/2  *  (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2 + (Smj_h2[1:59,3]+Smj_h2[2:60,3])/2 * (Smj_w2[1:59,3]+Smj_w2[2:60,3])/2 *(1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2))) +
               ((Sma_h1[1:59,3]+Sma_h1[2:60,3])/2 * (Sma_w1[1:59,3]+Sma_w1[2:60,3])/2  * (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2  + (Sma_h2[1:59,3]+Sma_h2[2:60,3])/2 * (Sma_w2[1:59,3]+Sma_w2[2:60,3])/2 * (1 - (mu_psi[1:59,3,k] + mu_psi[2:60,3,k])/2)) * (Sma_s[1:59,3,k]+Sma_s[2:60,3,k])/2) +
              
              ((0.5 * (F1[1:59,2,k]+F1[2:60,2,k])/2  * ( nf1[1:59,2,1] +  nf1[2:60,2,1])/2  *   (Smj_s[1:59,2,k]+Smj_s[2:60,2,k])/2  * ((Smj_h1[1:59,2]+Smj_h1[2:60,2])/2 * (Smj_w1[1:59,2]+Smj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Smj_h2[1:59,2]+Smj_h2[2:60,2])/2 * (Smj_w2[1:59,2]+Smj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)))  +
                 (0.5 * (F2[1:59,2,k]+F2[2:60,2,k])/2  * ( nf2[1:59,2,1] +  nf2[2:60,2,1])/2  *   (Smj_s[1:59,2,k]+Smj_s[2:60,2,k])/2  * ((Smj_h1[1:59,2]+Smj_h1[2:60,2])/2 * (Smj_w1[1:59,2]+Smj_w1[2:60,2])/2  *  (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2 + (Smj_h2[1:59,2]+Smj_h2[2:60,2])/2 * (Smj_w2[1:59,2]+Smj_w2[2:60,2])/2 *(1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2))) +
                 ((Sma_h1[1:59,2]+Sma_h1[2:60,2])/2 * (Sma_w1[1:59,2]+Sma_w1[2:60,2])/2  * (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2  + (Sma_h2[1:59,2]+Sma_h2[2:60,2])/2 * (Sma_w2[1:59,2]+Sma_w2[2:60,2])/2 * (1 - (mu_psi[1:59,2,k] + mu_psi[2:60,2,k])/2)) * (Sma_s[1:59,2,k]+Sma_s[2:60,2,k])/2) +
              
              ((0.5 * (F1[1:59,1,k]+F1[2:60,1,k])/2  * ( nf1[1:59,1,1] +  nf1[2:60,1,1])/2  *   (Smj_s[1:59,1,k]+Smj_s[2:60,1,k])/2  * ((Smj_h1[1:59,1]+Smj_h1[2:60,1])/2 * (Smj_w1[1:59,1]+Smj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Smj_h2[1:59,1]+Smj_h2[2:60,1])/2 * (Smj_w2[1:59,1]+Smj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)))  +
                 (0.5 * (F2[1:59,1,k]+F2[2:60,1,k])/2  * ( nf2[1:59,1,1] +  nf2[2:60,1,1])/2  *   (Smj_s[1:59,1,k]+Smj_s[2:60,1,k])/2  * ((Smj_h1[1:59,1]+Smj_h1[2:60,1])/2 * (Smj_w1[1:59,1]+Smj_w1[2:60,1])/2  *  (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2 + (Smj_h2[1:59,1]+Smj_h2[2:60,1])/2 * (Smj_w2[1:59,1]+Smj_w2[2:60,1])/2 *(1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2))) +
                 ((Sma_h1[1:59,1]+Sma_h1[2:60,1])/2 * (Sma_w1[1:59,1]+Sma_w1[2:60,1])/2  * (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2  + (Sma_h2[1:59,1]+Sma_h2[2:60,1])/2 * (Sma_w2[1:59,1]+Sma_w2[2:60,1])/2 * (1 - (mu_psi[1:59,1,k] + mu_psi[2:60,1,k])/2)) * (Sma_s[1:59,1,k]+Sma_s[2:60,1,k])/2)
          ) )
    
   
     sens_nf1_t[j,k,1:59,l] <- ((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 *(Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) +
                                                                    ((Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2 * ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) -
                (              (0.5 *(Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                                     (Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2 * ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) +
                               (0.5 *(Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                                     (Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2 * ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))
    )
    sens_nf2_t[j,k,1:59,l] <-  ( (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2 *((Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))))) +
                                                                     ((Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2 * ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) -
(                                 (0.5 *(Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  *( ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                                       (Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2 * ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) +
                                 (0.5 *(Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  *( ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                                       (Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2 * ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))
     
    sens_nm1_t[j,k,1:59,l] <- ((0.5 * (F1[1:59,j,k]+F1[2:60,j,k])/2 *(Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) +
                                 ((Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2 * ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) -
      (              (0.5 *(Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  * ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                       (Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2 * ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) +
                       (0.5 *(Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                       (Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2 * ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))
      )
    sens_nm2_t[j,k,1:59,l] <-  ( (0.5 * (F2[1:59,j,k]+F2[2:60,j,k])/2 *((Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  * ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))))) +
                                   ((Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2 * ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))) -
      (                                 (0.5 *(Sfj_s[1:59,j,k]+Sfj_s[2:60,j,k])/2  *( ((Sfj_h1[1:59,j]+Sfj_h1[2:60,j])/2 * (Sfj_w1[1:59,j]+Sfj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                                          (Sfa_s[1:59,j,k]+Sfa_s[2:60,j,k])/2 * ((Sfa_h1[1:59,j]+Sfa_h1[2:60,j])/2 * (Sfa_w1[1:59,j]+Sfa_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sfa_h2[1:59,j]+Sfa_h2[2:60,j])/2 * (Sfa_w2[1:59,j]+Sfa_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)) +
                                          (0.5 *(Smj_s[1:59,j,k]+Smj_s[2:60,j,k])/2  *( ((Smj_h1[1:59,j]+Smj_h1[2:60,j])/2 * (Smj_w1[1:59,j]+Smj_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + ((Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2))))) * ((F1[1:59,j,k]+F1[2:60,j,k])/2 * (nrf1[1:59,j,k,l] +  nrf1[2:60,j,k,l])/2  + (F2[1:59,j,k]+F2[2:60,j,k])/2 * (nrf2[1:59,j,k,l] +  nrf2[2:60,j,k,l])/2) +
                                          (Sma_s[1:59,j,k]+Sma_s[2:60,j,k])/2 * ((Sma_h1[1:59,j]+Sma_h1[2:60,j])/2 * (Sma_w1[1:59,j]+Sma_w1[2:60,j])/2  *  (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2 + (Sma_h2[1:59,j]+Sma_h2[2:60,j])/2 * (Sma_w2[1:59,j]+Sma_w2[2:60,j])/2 * (1 - (mu_psi[1:59,j,k] + mu_psi[2:60,j,k])/2)))
    
     }
  }
}

#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#
# Step 5: Calculate the LTRE contributions of temporal process (co)variation 
# in the demographic parameters to temporal variation in the realized 
# population growth rates.
#~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~#

cont_F1_t     <- array(0,dim = c(samples,3,59))
cont_F2_t     <- array(0,dim = c(samples,3,59))
cont_Sfj_w1_t <- array(0,dim = c(samples,3,59))
cont_Sfa_w1_t <- array(0,dim = c(samples,3,59))
cont_Sfj_w2_t <- array(0,dim = c(samples,3,59))
cont_Sfa_w2_t <- array(0,dim = c(samples,3,59))
cont_Sfj_h1_t <- array(0,dim = c(samples,3,59))
cont_Sfa_h1_t <- array(0,dim = c(samples,3,59))
cont_Sfj_h2_t <- array(0,dim = c(samples,3,59))
cont_Sfa_h2_t <- array(0,dim = c(samples,3,59))
cont_Sfj_s_t  <- array(0,dim = c(samples,3,59))
cont_Sfa_s_t  <- array(0,dim = c(samples,3,59))
cont_nf1_t    <- array(0,dim = c(samples,3,59))
cont_nf2_t    <- array(0,dim = c(samples,3,59))
cont_Smj_w1_t <- array(0,dim = c(samples,3,59))
cont_Sma_w1_t <- array(0,dim = c(samples,3,59))
cont_Smj_w2_t <- array(0,dim = c(samples,3,59))
cont_Sma_w2_t <- array(0,dim = c(samples,3,59))
cont_Smj_h1_t <- array(0,dim = c(samples,3,59))
cont_Sma_h1_t <- array(0,dim = c(samples,3,59))
cont_Smj_h2_t <- array(0,dim = c(samples,3,59))
cont_Sma_h2_t <- array(0,dim = c(samples,3,59))
cont_Smj_s_t  <- array(0,dim = c(samples,3,59))
cont_Sma_s_t  <- array(0,dim = c(samples,3,59))
cont_nm1_t    <- array(0,dim = c(samples,3,59))
cont_nm2_t    <- array(0,dim = c(samples,3,59))
cont_psi1_t   <- array(0,dim = c(samples,3,59))
cont_psi2_t   <- array(0,dim = c(samples,3,59))
cont_pi1_t    <- array(0,dim = c(samples,3,59))
cont_pi2_t    <- array(0,dim = c(samples,3,59))
cont_pi3_t    <- array(0,dim = c(samples,3,59)) 

cont_F1     <- array(0,dim = c(samples,3))
cont_F2     <- array(0,dim = c(samples,3))
cont_Sfj_w1 <- array(0,dim = c(samples,3))
cont_Sfa_w1 <- array(0,dim = c(samples,3))
cont_Sfj_w2 <- array(0,dim = c(samples,3))
cont_Sfa_w2 <- array(0,dim = c(samples,3))
cont_Sfj_h1 <- array(0,dim = c(samples,3))
cont_Sfa_h1 <- array(0,dim = c(samples,3))
cont_Sfj_h2 <- array(0,dim = c(samples,3))
cont_Sfa_h2 <- array(0,dim = c(samples,3))
cont_Sfj_s  <- array(0,dim = c(samples,3))
cont_Sfa_s  <- array(0,dim = c(samples,3))
cont_nf1    <- array(0,dim = c(samples,3))
cont_nf2    <- array(0,dim = c(samples,3))
cont_Smj_w1 <- array(0,dim = c(samples,3))
cont_Sma_w1 <- array(0,dim = c(samples,3))
cont_Smj_w2 <- array(0,dim = c(samples,3))
cont_Sma_w2 <- array(0,dim = c(samples,3))
cont_Smj_h1 <- array(0,dim = c(samples,3))
cont_Sma_h1 <- array(0,dim = c(samples,3))
cont_Smj_h2 <- array(0,dim = c(samples,3))
cont_Sma_h2 <- array(0,dim = c(samples,3))
cont_Smj_s  <- array(0,dim = c(samples,3))
cont_Sma_s  <- array(0,dim = c(samples,3))
cont_nm1    <- array(0,dim = c(samples,3))
cont_nm2    <- array(0,dim = c(samples,3))
cont_psi1    <- array(0,dim = c(samples,3))
cont_psi2    <- array(0,dim = c(samples,3))
cont_pi1    <- array(0,dim = c(samples,3))
cont_pi2    <- array(0,dim = c(samples,3))
cont_pi3    <- array(0,dim = c(samples,3))

sensvec    <- array(0,dim = c(31, samples,3))

sens_F1       <- apply(sens_F1     ,1:2, sum)
sens_F2       <- apply(sens_F2     ,1:2, sum)
sens_Sfj_w1   <- apply(sens_Sfj_w1 ,1:2, sum)
sens_Sfj_w2   <- apply(sens_Sfj_w2 ,1:2, sum)
sens_Sfj_h1   <- apply(sens_Sfj_h1 ,1:2, sum)
sens_Sfj_h2   <- apply(sens_Sfj_h2 ,1:2, sum)
sens_Sfj_s    <- apply(sens_Sfj_s  ,1:2, sum)
sens_Smj_w1   <- apply(sens_Smj_w1 ,1:2, sum)
sens_Smj_w2   <- apply(sens_Smj_w2 ,1:2, sum)
sens_Smj_h1   <- apply(sens_Smj_h1 ,1:2, sum)
sens_Smj_h2   <- apply(sens_Smj_h2 ,1:2, sum)
sens_Smj_s    <- apply(sens_Smj_s  ,1:2, sum)  
sens_nf1      <- apply(sens_nf1,1:2,sum)  
sens_nf2      <- apply(sens_nf2,1:2,sum)  
sens_nm1      <- apply(sens_nm1,1:2,sum)  
sens_nm2      <- apply(sens_nm2,1:2,sum)  

sens_F1_t     <- apply(sens_F1_t    ,1:3,sum)
sens_F2_t     <- apply(sens_F2_t    ,1:3,sum)
sens_Sfj_w1_t <- apply(sens_Sfj_w1_t,1:3,sum)
sens_Sfj_w2_t <- apply(sens_Sfj_w2_t,1:3,sum)
sens_Sfj_h1_t <- apply(sens_Sfj_h1_t,1:3,sum)
sens_Sfj_h2_t <- apply(sens_Sfj_h2_t,1:3,sum)
sens_Sfj_s_t  <- apply(sens_Sfj_s_t   ,1:3,sum)
sens_nf1_t    <- apply(sens_nf1_t   ,1:3,sum)
sens_nf2_t    <- apply(sens_nf2_t   ,1:3,sum)
sens_Smj_w1_t <- apply(sens_Smj_w1_t,1:3,sum)
sens_Smj_w2_t <- apply(sens_Smj_w2_t,1:3,sum)
sens_Smj_h1_t <- apply(sens_Smj_h1_t,1:3,sum)
sens_Smj_h2_t <- apply(sens_Smj_h2_t,1:3,sum)
sens_Smj_s_t  <- apply(sens_Smj_s_t   ,1:3,sum)
sens_nm1_t    <- apply(sens_nm1_t   ,1:3,sum)
sens_nm2_t    <- apply(sens_nm2_t   ,1:3,sum)

pi_edit1 <- aperm(pi_all[,1,1:60,], c(2,3,1))
pi_edit2 <- aperm(pi_all[,2,1:60,], c(2,3,1))
pi_edit3 <- aperm(pi_all[,3,1:60,], c(2,3,1))


params <- 29

psi_1 <- mu_psi[1:60,,]
psi_2 <- 1 - mu_psi[1:60,,]

dp_dif <- matrix(0,3,params)
for (j in 1:samples){ #samples
  for(k in 1:n.region){
    # array of annual demographic rates
    dp_stoch <- abind(F1[,j,],F2[,j,],
                      Sfj_w1_r[,j,],Sfj_w2_r[,j,],Sfj_h1_r[,j,],Sfj_h2_r[,j,],Sfj_s[,j,],Sfa_w1_r[,j,],Sfa_w2_r[,j,],Sfa_h1_r[,j,],Sfa_h2_r[,j,],Sfa_s[,j,],nf1[,j,],nf2[,j,],
                      Smj_w1_r[,j,],Smj_w2_r[,j,],Smj_h1_r[,j,],Smj_h2_r[,j,],Smj_s[,j,],Sma_w1_r[,j,],Sma_w2_r[,j,],Sma_h1_r[,j,],Sma_h2_r[,j,],Sma_s[,j,],nm1[,j,],nm2[,j,],
                      t(pi_all[,1,1:60,j]),t(pi_all[,2,1:60,j]),t(pi_all[,3,1:60,j]), along = 3)
    for(t in 1:59){
      # Change in demographic rate b/w t and t+1
      dp_dif[k,]<- dp_stoch[t+1,k,] - dp_stoch[t,k,] 
      
      # Derive process variance and covariance among demographic parameters using 'shrinkage' estimates of vital rates and proportionate abundances:
      dp_varcov <- array(apply(dp_stoch, 2, var), dim = c(params,params,3))
      sensvec   <- abind(sens_F1[j,],sens_F2[j,],
                         sens_Sfj_w1[j,],sens_Sfj_w2[j,],sens_Sfj_h1[j,],sens_Sfj_h2[j,],sens_Sfj_s[j,],sens_Sfa_w1[j,],sens_Sfa_w2[j,],sens_Sfa_h1[j,],sens_Sfa_h2[j,],sens_Sfa_s[j,],sens_nf1[j,],sens_nf2[j,],
                         sens_Smj_w1[j,],sens_Smj_w2[j,],sens_Smj_h1[j,],sens_Smj_h2[j,],sens_Smj_s[j,],sens_Sma_w1[j,],sens_Sma_w2[j,],sens_Sma_h1[j,],sens_Sma_h2[j,],sens_Sma_s[j,],sens_nm1[j,],sens_nm2[j,],
                         sens_pi[j,1,],sens_pi[j,2,],sens_pi[j,3,], along = 2)
      
      sensvec_t <- abind(sens_F1_t[j,,t],sens_F2_t[j,,t],
                         sens_Sfj_w1_t[j,,t],sens_Sfj_w2_t[j,,t],sens_Sfj_h1_t[j,,t],sens_Sfj_h2_t[j,,t],sens_Sfj_s_t[j,,t],sens_Sfa_w1_t[j,,t],sens_Sfa_w2_t[j,,t],sens_Sfa_h1_t[j,,t],sens_Sfa_h2_t[j,,t],sens_Sfa_s_t[j,,t],sens_nf1_t[j,,t],sens_nf2_t[j,,t],
                         sens_Smj_w1_t[j,,t],sens_Smj_w2_t[j,,t],sens_Smj_h1_t[j,,t],sens_Smj_h2_t[j,,t],sens_Smj_s_t[j,,t],sens_Sma_w1_t[j,,t],sens_Sma_w2_t[j,,t],sens_Sma_h1_t[j,,t],sens_Sma_h2_t[j,,t],sens_Sma_s_t[j,,t],sens_nm1_t[j,,t],sens_nm2_t[j,,t],
                         sens_pi_t[j,1,,t],sens_pi_t[j,2,,t],sens_pi_t[j,3,,t], along = 2)
      
      # calculate demographic contributions
      contvec2 <- matrix(0,params,3)
      for (m in 1:params){
        # Transient contribution to changesin population growth = change in demographic rate x its sensitivity
        contvec2[m,k] <- dp_dif[k,m]*sensvec_t[k,m]                       # Equation 2: Koons et al. 2017
      }
      contmatrix <- array(0,dim = c(params,params,3))
      for (l in 1:params){
        for (m in 1:params){
          # Transient Contribution to variability to population growth = Pairwise Covariance between Rate A and Rate B x sensitivity to A x sensitivity to B
          contmatrix[l,m,k] <- dp_varcov[l,m,k]*sensvec[k,l]*sensvec[k,m] # Equation 1: Koons et al. 2017
        }
      }
      
      contributions_t <- contvec2
      
          cont_F1_t[j,k,t] <- contributions_t[1,k]    
          cont_F2_t[j,k,t] <- contributions_t[2,k]    
      cont_Sfj_w1_t[j,k,t] <- contributions_t[3,k]
      cont_Sfj_w2_t[j,k,t] <- contributions_t[4,k]
      cont_Sfj_h1_t[j,k,t] <- contributions_t[5,k]
      cont_Sfj_h2_t[j,k,t] <- contributions_t[6,k]
      cont_Sfj_s_t[j,k,t]  <- contributions_t[7,k] 
      cont_Sfa_w1_t[j,k,t] <- contributions_t[8,k]
      cont_Sfa_w2_t[j,k,t] <- contributions_t[9,k]
      cont_Sfa_h1_t[j,k,t] <- contributions_t[10,k]
      cont_Sfa_h2_t[j,k,t] <- contributions_t[11,k]
       cont_Sfa_s_t[j,k,t] <- contributions_t[12,k] 
         cont_nf1_t[j,k,t] <- contributions_t[13,k]   
         cont_nf2_t[j,k,t] <- contributions_t[14,k]
      cont_Smj_w1_t[j,k,t] <- contributions_t[15,k]
      cont_Smj_w2_t[j,k,t] <- contributions_t[16,k]
      cont_Smj_h1_t[j,k,t] <- contributions_t[17,k]
      cont_Smj_h2_t[j,k,t] <- contributions_t[18,k]
       cont_Smj_s_t[j,k,t] <- contributions_t[19,k] 
      cont_Sma_w1_t[j,k,t] <- contributions_t[20,k]
      cont_Sma_w2_t[j,k,t] <- contributions_t[21,k]
      cont_Sma_h1_t[j,k,t] <- contributions_t[22,k]
      cont_Sma_h2_t[j,k,t] <- contributions_t[23,k]
       cont_Sma_s_t[j,k,t] <- contributions_t[24,k] 
         cont_nm1_t[j,k,t] <- contributions_t[25,k]   
         cont_nm2_t[j,k,t] <- contributions_t[26,k]
         cont_pi1_t[j,k,t] <- contributions_t[27,k]   
         cont_pi2_t[j,k,t] <- contributions_t[28,k]   
         cont_pi3_t[j,k,t] <- contributions_t[29,k]   

    }
    contributions <- apply(contmatrix,c(1,3),sum)
    
        cont_F1[j,k] <- contributions[1,k]     
        cont_F2[j,k] <- contributions[2,k]     
    cont_Sfj_w1[j,k] <- contributions[3,k]
    cont_Sfj_w2[j,k] <- contributions[4,k]
    cont_Sfj_h1[j,k] <- contributions[5,k]
    cont_Sfj_h2[j,k] <- contributions[6,k]
     cont_Sfj_s[j,k] <- contributions[7,k]  
    cont_Sfa_w1[j,k] <- contributions[8,k]
    cont_Sfa_w2[j,k] <- contributions[9,k]
    cont_Sfa_h1[j,k] <- contributions[10,k]
    cont_Sfa_h2[j,k] <- contributions[11,k]
     cont_Sfa_s[j,k] <- contributions[12,k] 
       cont_nf1[j,k] <- contributions[13,k]   
       cont_nf2[j,k] <- contributions[14,k]
    cont_Smj_w1[j,k] <- contributions[15,k]
    cont_Smj_w2[j,k] <- contributions[16,k]
    cont_Smj_h1[j,k] <- contributions[17,k]
    cont_Smj_h2[j,k] <- contributions[18,k]
     cont_Smj_s[j,k] <- contributions[19,k] 
    cont_Sma_w1[j,k] <- contributions[20,k]
    cont_Sma_w2[j,k] <- contributions[21,k]
    cont_Sma_h1[j,k] <- contributions[22,k]
    cont_Sma_h2[j,k] <- contributions[23,k]
     cont_Sma_s[j,k] <- contributions[24,k] 
       cont_nm1[j,k] <- contributions[25,k]   
       cont_nm2[j,k] <- contributions[26,k] 
       cont_pi1[j,k] <- contributions[27,k]   
       cont_pi2[j,k] <- contributions[28,k]   
       cont_pi3[j,k] <- contributions[29,k]   
  }
}

# Calculate elasticiticies
elas_F1   <-       sens_F1 * mu_F1      /mu_lam  ;elas_F2 <-       sens_F2 * mu_F2      /mu_lam  ;elas_w1_f <- sens_Sfj_w1 * mu_Sfj_w1  /mu_lam  ;elas_w2_f <- sens_Sfj_w2 * mu_Sfj_w2  /mu_lam  ;elas_h1_f <- sens_Sfj_h1 * mu_Sfj_h1  /mu_lam  ;elas_h2_f <- sens_Sfj_h2 * mu_Sfj_h2  /mu_lam ;elas_js_f <- sens_Sfj_s  * mu_Sfj_s   /mu_lam;elas_W1_f <- sens_Sfa_w1 * mu_Sfa_w1  /mu_lam ;elas_W2_f <- sens_Sfa_w2 * mu_Sfa_w2  /mu_lam ;elas_H1_f <- sens_Sfa_h1 * mu_Sfa_h1  /mu_lam ;elas_H2_f <- sens_Sfa_h2 * mu_Sfa_h2  /mu_lam;elas_AS_f <-  sens_Sfa_s * mu_Sfa_s   /mu_lam  ;elas_n1_f <-    sens_nf1 * mu_nf1     /mu_lam    ;elas_n2_f <-    sens_nf2 * mu_nf2     /mu_lam
elas_w1_m <- sens_Smj_w1 * mu_Smj_w1  /mu_lam  ;elas_w2_m <- sens_Smj_w2 * mu_Smj_w2  /mu_lam  ;elas_h1_m <- sens_Smj_h1 * mu_Smj_h1  /mu_lam  ;elas_h2_m <- sens_Smj_h2 * mu_Smj_h2  /mu_lam ;elas_js_m <- sens_Smj_s  * mu_Smj_s   /mu_lam;elas_W1_m <- sens_Sma_w1 * mu_Sma_w1  /mu_lam ;elas_W2_m <- sens_Sma_w2 * mu_Sma_w2  /mu_lam ;elas_H1_m <- sens_Sma_h1 * mu_Sma_h1  /mu_lam ;elas_H2_m <- sens_Sma_h2 * mu_Sma_h2  /mu_lam;elas_AS_m <-  sens_Sma_s * mu_Sma_s   /mu_lam  ;elas_n1_m <-    sens_nm1 * mu_nm1     /mu_lam    ;elas_n2_m <-    sens_nm2 * mu_nm2     /mu_lam 
elas_p1   <-     sens_pi[,1,] * mu_pi1  /mu_lam;elas_p2 <-     sens_pi[,2,] * mu_pi2  /mu_lam;elas_p3 <-     sens_pi[,3,] * mu_pi3  /mu_lam

# Rename sensitivities
sens_F1   <-     sens_F1 ;sens_F2   <-     sens_F2 ;sens_w1_f <- sens_Sfj_w1 ;sens_w2_f <- sens_Sfj_w2 ;sens_h1_f <- sens_Sfj_h1 ;sens_h2_f <- sens_Sfj_h2 ;sens_js_f <- sens_Sfj_s  ;sens_W1_f <- sens_Sfa_w1 ;sens_W2_f <- sens_Sfa_w2 ;sens_H1_f <- sens_Sfa_h1 ;sens_H2_f <- sens_Sfa_h2 ;sens_AS_f <-  sens_Sfa_s ;sens_n1_f <-    sens_nf1 ;sens_n2_f <-    sens_nf2 
sens_w1_m <- sens_Smj_w1 ;sens_w2_m <- sens_Smj_w2 ;sens_h1_m <- sens_Smj_h1 ;sens_h2_m <- sens_Smj_h2 ;sens_js_m <- sens_Smj_s  ;sens_W1_m <- sens_Sma_w1 ;sens_W2_m <- sens_Sma_w2 ;sens_H1_m <- sens_Sma_h1 ;sens_H2_m <- sens_Sma_h2 ;sens_AS_m <-  sens_Sma_s ;sens_n1_m <-    sens_nm1 ;sens_n2_m <-    sens_nm2 
sens_p1   <-     sens_pi[,1,] ;sens_p2 <-     sens_pi[,2,] ;sens_p3 <-     sens_pi[,3,] 
# Rename LTREs
cont_F1   <-     cont_F1;cont_F2   <-     cont_F2;cont_w1_f <- cont_Sfj_w1;cont_w2_f <- cont_Sfj_w2;cont_h1_f <- cont_Sfj_h1;cont_h2_f <- cont_Sfj_h2;cont_js_f <- cont_Sfj_s;cont_W1_f <- cont_Sfa_w1;cont_W2_f <- cont_Sfa_w2;cont_H1_f <- cont_Sfa_h1;cont_H2_f <- cont_Sfa_h2;cont_AS_f <-  cont_Sfa_s;cont_n1_f <-    cont_nf1;cont_n2_f <-    cont_nf2
cont_w1_m <-  cont_Smj_w1;cont_w2_m <-  cont_Smj_w2;cont_h1_m <-  cont_Smj_h1;cont_h2_m <-  cont_Smj_h2;cont_js_m <-  cont_Smj_s;cont_W1_m <-  cont_Sma_w1;cont_W2_m <-  cont_Sma_w2;cont_H1_m <-  cont_Sma_h1;cont_H2_m <-  cont_Sma_h2;cont_AS_m <-  cont_Sma_s;cont_n1_m <-    cont_nm1;cont_n2_m <-    cont_nm2
cont_p1 <-    cont_pi1 ;cont_p2 <-    cont_pi2 ;cont_p3 <-    cont_pi3
# Rename tLTREs
cont_F1_t    <- cont_F1_t;cont_F2_t    <- cont_F2_t;cont_w1_f_t  <- cont_Sfj_w1_t;cont_w2_f_t  <- cont_Sfa_w1_t;cont_h1_f_t  <- cont_Sfj_w2_t;cont_h2_f_t  <- cont_Sfa_w2_t;cont_js_f_t  <- cont_Sfj_s_t;cont_W1_f_t  <- cont_Sfj_h1_t;cont_W2_f_t  <- cont_Sfa_h1_t;cont_H1_f_t  <- cont_Sfj_h2_t;cont_H2_f_t  <- cont_Sfa_h2_t;cont_AS_f_t  <- cont_Sfa_s_t;cont_n1_f_t  <- cont_nf1_t;cont_n2_f_t  <- cont_nf2_t
cont_w1_m_t  <- cont_Smj_w1_t;cont_w2_m_t  <- cont_Sma_w1_t;cont_h1_m_t  <- cont_Smj_w2_t;cont_h2_m_t  <- cont_Sma_w2_t;cont_js_m_t  <- cont_Smj_s_t;cont_W1_m_t  <- cont_Smj_h1_t;cont_W2_m_t  <- cont_Sma_h1_t;cont_H1_m_t  <- cont_Smj_h2_t;cont_H2_m_t  <- cont_Sma_h2_t;cont_AS_m_t  <- cont_Sma_s_t;cont_n1_m_t  <- cont_nm1_t;cont_n2_m_t  <- cont_nm2_t
cont_p1_t  <- cont_pi1_t;cont_p2_t  <- cont_pi2_t;cont_p3_t  <- cont_pi3_t

elas_F1_mn   <- t(rbind.data.frame(mean = (apply(elas_F1, 2, mean)),   low_95 = (apply(elas_F1, 2,quantile, probs = 0.025)),   upp_95 = (apply(elas_F1, 2,quantile, probs = 0.975)   )))
elas_F2_mn   <- t(rbind.data.frame(mean = (apply(elas_F2, 2, mean)),   low_95 = (apply(elas_F2, 2,quantile, probs = 0.025)),   upp_95 = (apply(elas_F2, 2,quantile, probs = 0.975)   )))
elas_w1_f_mn <- t(rbind.data.frame(mean = (apply(elas_w1_f, 2, mean)), low_95 = (apply(elas_w1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_w1_f, 2,quantile, probs = 0.975) )))
elas_w2_f_mn <- t(rbind.data.frame(mean = (apply(elas_w2_f, 2, mean)), low_95 = (apply(elas_w2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_w2_f, 2,quantile, probs = 0.975) )))
elas_h1_f_mn <- t(rbind.data.frame(mean = (apply(elas_h1_f, 2, mean)), low_95 = (apply(elas_h1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_h1_f, 2,quantile, probs = 0.975) )))
elas_h2_f_mn <- t(rbind.data.frame(mean = (apply(elas_h2_f, 2, mean)), low_95 = (apply(elas_h2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_h2_f, 2,quantile, probs = 0.975) )))
elas_js_f_mn <- t(rbind.data.frame(mean = (apply(elas_js_f, 2, mean)), low_95 = (apply(elas_js_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_js_f, 2,quantile, probs = 0.975) )))
elas_W1_f_mn <- t(rbind.data.frame(mean = (apply(elas_W1_f, 2, mean)), low_95 = (apply(elas_W1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_W1_f, 2,quantile, probs = 0.975) )))
elas_W2_f_mn <- t(rbind.data.frame(mean = (apply(elas_W2_f, 2, mean)), low_95 = (apply(elas_W2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_W2_f, 2,quantile, probs = 0.975) )))
elas_H1_f_mn <- t(rbind.data.frame(mean = (apply(elas_H1_f, 2, mean)), low_95 = (apply(elas_H1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_H1_f, 2,quantile, probs = 0.975) )))
elas_H2_f_mn <- t(rbind.data.frame(mean = (apply(elas_H2_f, 2, mean)), low_95 = (apply(elas_H2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_H2_f, 2,quantile, probs = 0.975) )))
elas_AS_f_mn <- t(rbind.data.frame(mean = (apply(elas_AS_f, 2, mean)), low_95 = (apply(elas_AS_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_AS_f, 2,quantile, probs = 0.975) )))
elas_n1_f_mn <- t(rbind.data.frame(mean = (apply(elas_n1_f, 2, mean)), low_95 = (apply(elas_n1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_n1_f, 2,quantile, probs = 0.975) )))
elas_n2_f_mn <- t(rbind.data.frame(mean = (apply(elas_n2_f, 2, mean)), low_95 = (apply(elas_n2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_n2_f, 2,quantile, probs = 0.975) )))

elas_w1_m_mn <- t(rbind.data.frame(mean = (apply(elas_w1_m, 2, mean)), low_95 = (apply(elas_w1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_w1_m, 2,quantile, probs = 0.975) )))
elas_w2_m_mn <- t(rbind.data.frame(mean = (apply(elas_w2_m, 2, mean)), low_95 = (apply(elas_w2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_w2_m, 2,quantile, probs = 0.975) )))
elas_h1_m_mn <- t(rbind.data.frame(mean = (apply(elas_h1_m, 2, mean)), low_95 = (apply(elas_h1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_h1_m, 2,quantile, probs = 0.975) )))
elas_h2_m_mn <- t(rbind.data.frame(mean = (apply(elas_h2_m, 2, mean)), low_95 = (apply(elas_h2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_h2_m, 2,quantile, probs = 0.975) )))
elas_js_m_mn <- t(rbind.data.frame(mean = (apply(elas_js_m, 2, mean)), low_95 = (apply(elas_js_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_js_m, 2,quantile, probs = 0.975) )))
elas_W1_m_mn <- t(rbind.data.frame(mean = (apply(elas_W1_m, 2, mean)), low_95 = (apply(elas_W1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_W1_m, 2,quantile, probs = 0.975) )))
elas_W2_m_mn <- t(rbind.data.frame(mean = (apply(elas_W2_m, 2, mean)), low_95 = (apply(elas_W2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_W2_m, 2,quantile, probs = 0.975) )))
elas_H1_m_mn <- t(rbind.data.frame(mean = (apply(elas_H1_m, 2, mean)), low_95 = (apply(elas_H1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_H1_m, 2,quantile, probs = 0.975) )))
elas_H2_m_mn <- t(rbind.data.frame(mean = (apply(elas_H2_m, 2, mean)), low_95 = (apply(elas_H2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_H2_m, 2,quantile, probs = 0.975) )))
elas_AS_m_mn <- t(rbind.data.frame(mean = (apply(elas_AS_m, 2, mean)), low_95 = (apply(elas_AS_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_AS_m, 2,quantile, probs = 0.975) )))
elas_n1_m_mn <- t(rbind.data.frame(mean = (apply(elas_n1_m, 2, mean)), low_95 = (apply(elas_n1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_n1_m, 2,quantile, probs = 0.975) )))
elas_n2_m_mn <- t(rbind.data.frame(mean = (apply(elas_n2_m, 2, mean)), low_95 = (apply(elas_n2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_n2_m, 2,quantile, probs = 0.975) )))

elas_p1_mn <- t(rbind.data.frame(mean = (apply(elas_p1, 2, mean)), low_95 = (apply(elas_p1, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_p1, 2,quantile, probs = 0.975) )))
elas_p2_mn <- t(rbind.data.frame(mean = (apply(elas_p2, 2, mean)), low_95 = (apply(elas_p2, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_p2, 2,quantile, probs = 0.975) )))
elas_p3_mn <- t(rbind.data.frame(mean = (apply(elas_p3, 2, mean)), low_95 = (apply(elas_p3, 2,quantile, probs = 0.025)), upp_95 = (apply(elas_p3, 2,quantile, probs = 0.975) )))

rownames(elas_F1_mn)   <- NULL; colnames(elas_F1_mn)   <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_F2_mn)   <- NULL; colnames(elas_F2_mn)   <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_w1_f_mn) <- NULL; colnames(elas_w1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_w2_f_mn) <- NULL; colnames(elas_w2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_h1_f_mn) <- NULL; colnames(elas_h1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_h2_f_mn) <- NULL; colnames(elas_h2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_js_f_mn) <- NULL; colnames(elas_js_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_W1_f_mn) <- NULL; colnames(elas_W1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_W2_f_mn) <- NULL; colnames(elas_W2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_H1_f_mn) <- NULL; colnames(elas_H1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_H2_f_mn) <- NULL; colnames(elas_H2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_AS_f_mn) <- NULL; colnames(elas_AS_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_n1_f_mn) <- NULL; colnames(elas_n1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_n2_f_mn) <- NULL; colnames(elas_n2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')

rownames(elas_w1_m_mn) <- NULL; colnames(elas_w1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_w2_m_mn) <- NULL; colnames(elas_w2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_h1_m_mn) <- NULL; colnames(elas_h1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_h2_m_mn) <- NULL; colnames(elas_h2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_js_m_mn) <- NULL; colnames(elas_js_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_W1_m_mn) <- NULL; colnames(elas_W1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_W2_m_mn) <- NULL; colnames(elas_W2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_H1_m_mn) <- NULL; colnames(elas_H1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_H2_m_mn) <- NULL; colnames(elas_H2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_AS_m_mn) <- NULL; colnames(elas_AS_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_n1_m_mn) <- NULL; colnames(elas_n1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_n2_m_mn) <- NULL; colnames(elas_n2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')

rownames(elas_p1_mn) <- NULL; colnames(elas_p1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_p2_mn) <- NULL; colnames(elas_p2_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(elas_p3_mn) <- NULL; colnames(elas_p3_mn) <- c('Mean', 'Lower_95', 'Upper_95')

LTRE_elas <- cbind.data.frame(rbind.data.frame(elas_F1_mn,elas_F2_mn,
                                               elas_w1_f_mn,elas_w2_f_mn,elas_h1_f_mn,elas_h2_f_mn,elas_js_f_mn,elas_W1_f_mn,elas_W2_f_mn,
                                               elas_H1_f_mn,elas_H2_f_mn,elas_AS_f_mn,elas_n1_f_mn,elas_n2_f_mn,
                                               elas_w1_m_mn,elas_w2_m_mn,elas_h1_m_mn,elas_h2_m_mn,elas_js_m_mn,elas_W1_m_mn,elas_W2_m_mn,
                                               elas_H1_m_mn,elas_H2_m_mn,elas_AS_m_mn,elas_n1_m_mn,elas_n2_m_mn,
                                               elas_p1_mn,elas_p2_mn,elas_p3_mn),
                              expand.grid(region = c('AK','NO','PR'),
                                          parameter = c('F1','F2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'P1','P2','P3') ))


sens_F1_mn <- t(rbind.data.frame(mean = (apply(sens_F1, 2, mean)), low_95 = (apply(sens_F1, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_F1, 2,quantile, probs = 0.975) )))
sens_F2_mn <- t(rbind.data.frame(mean = (apply(sens_F2, 2, mean)), low_95 = (apply(sens_F2, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_F2, 2,quantile, probs = 0.975) )))
sens_w1_f_mn <- t(rbind.data.frame(mean = (apply(sens_w1_f, 2, mean)), low_95 = (apply(sens_w1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_w1_f, 2,quantile, probs = 0.975) )))
sens_w2_f_mn <- t(rbind.data.frame(mean = (apply(sens_w2_f, 2, mean)), low_95 = (apply(sens_w2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_w2_f, 2,quantile, probs = 0.975) )))
sens_h1_f_mn <- t(rbind.data.frame(mean = (apply(sens_h1_f, 2, mean)), low_95 = (apply(sens_h1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_h1_f, 2,quantile, probs = 0.975) )))
sens_h2_f_mn <- t(rbind.data.frame(mean = (apply(sens_h2_f, 2, mean)), low_95 = (apply(sens_h2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_h2_f, 2,quantile, probs = 0.975) )))
sens_js_f_mn <- t(rbind.data.frame(mean = (apply(sens_js_f, 2, mean)), low_95 = (apply(sens_js_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_js_f, 2,quantile, probs = 0.975) )))
sens_W1_f_mn <- t(rbind.data.frame(mean = (apply(sens_W1_f, 2, mean)), low_95 = (apply(sens_W1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_W1_f, 2,quantile, probs = 0.975) )))
sens_W2_f_mn <- t(rbind.data.frame(mean = (apply(sens_W2_f, 2, mean)), low_95 = (apply(sens_W2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_W2_f, 2,quantile, probs = 0.975) )))
sens_H1_f_mn <- t(rbind.data.frame(mean = (apply(sens_H1_f, 2, mean)), low_95 = (apply(sens_H1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_H1_f, 2,quantile, probs = 0.975) )))
sens_H2_f_mn <- t(rbind.data.frame(mean = (apply(sens_H2_f, 2, mean)), low_95 = (apply(sens_H2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_H2_f, 2,quantile, probs = 0.975) )))
sens_AS_f_mn <- t(rbind.data.frame(mean = (apply(sens_AS_f, 2, mean)), low_95 = (apply(sens_AS_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_AS_f, 2,quantile, probs = 0.975) )))
sens_n1_f_mn <- t(rbind.data.frame(mean = (apply(sens_n1_f, 2, mean)), low_95 = (apply(sens_n1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_n1_f, 2,quantile, probs = 0.975) )))
sens_n2_f_mn <- t(rbind.data.frame(mean = (apply(sens_n2_f, 2, mean)), low_95 = (apply(sens_n2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_n2_f, 2,quantile, probs = 0.975) )))

sens_w1_m_mn <- t(rbind.data.frame(mean = (apply(sens_w1_m, 2, mean)), low_95 = (apply(sens_w1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_w1_m, 2,quantile, probs = 0.975) )))
sens_w2_m_mn <- t(rbind.data.frame(mean = (apply(sens_w2_m, 2, mean)), low_95 = (apply(sens_w2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_w2_m, 2,quantile, probs = 0.975) )))
sens_h1_m_mn <- t(rbind.data.frame(mean = (apply(sens_h1_m, 2, mean)), low_95 = (apply(sens_h1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_h1_m, 2,quantile, probs = 0.975) )))
sens_h2_m_mn <- t(rbind.data.frame(mean = (apply(sens_h2_m, 2, mean)), low_95 = (apply(sens_h2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_h2_m, 2,quantile, probs = 0.975) )))
sens_js_m_mn <- t(rbind.data.frame(mean = (apply(sens_js_m, 2, mean)), low_95 = (apply(sens_js_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_js_m, 2,quantile, probs = 0.975) )))
sens_W1_m_mn <- t(rbind.data.frame(mean = (apply(sens_W1_m, 2, mean)), low_95 = (apply(sens_W1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_W1_m, 2,quantile, probs = 0.975) )))
sens_W2_m_mn <- t(rbind.data.frame(mean = (apply(sens_W2_m, 2, mean)), low_95 = (apply(sens_W2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_W2_m, 2,quantile, probs = 0.975) )))
sens_H1_m_mn <- t(rbind.data.frame(mean = (apply(sens_H1_m, 2, mean)), low_95 = (apply(sens_H1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_H1_m, 2,quantile, probs = 0.975) )))
sens_H2_m_mn <- t(rbind.data.frame(mean = (apply(sens_H2_m, 2, mean)), low_95 = (apply(sens_H2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_H2_m, 2,quantile, probs = 0.975) )))
sens_AS_m_mn <- t(rbind.data.frame(mean = (apply(sens_AS_m, 2, mean)), low_95 = (apply(sens_AS_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_AS_m, 2,quantile, probs = 0.975) )))
sens_n1_m_mn <- t(rbind.data.frame(mean = (apply(sens_n1_m, 2, mean)), low_95 = (apply(sens_n1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_n1_m, 2,quantile, probs = 0.975) )))
sens_n2_m_mn <- t(rbind.data.frame(mean = (apply(sens_n2_m, 2, mean)), low_95 = (apply(sens_n2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_n2_m, 2,quantile, probs = 0.975) )))

sens_p1_mn <- t(rbind.data.frame(mean = (apply(sens_p1, 2, mean)), low_95 = (apply(sens_p1, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_p1, 2,quantile, probs = 0.975) )))
sens_p2_mn <- t(rbind.data.frame(mean = (apply(sens_p2, 2, mean)), low_95 = (apply(sens_p2, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_p2, 2,quantile, probs = 0.975) )))
sens_p3_mn <- t(rbind.data.frame(mean = (apply(sens_p3, 2, mean)), low_95 = (apply(sens_p3, 2,quantile, probs = 0.025)), upp_95 = (apply(sens_p3, 2,quantile, probs = 0.975) )))

rownames(sens_F1_mn) <- NULL; colnames(sens_F1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_F2_mn) <- NULL; colnames(sens_F2_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_w1_f_mn) <- NULL; colnames(sens_w1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_w2_f_mn) <- NULL; colnames(sens_w2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_h1_f_mn) <- NULL; colnames(sens_h1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_h2_f_mn) <- NULL; colnames(sens_h2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_js_f_mn) <- NULL; colnames(sens_js_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_W1_f_mn) <- NULL; colnames(sens_W1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_W2_f_mn) <- NULL; colnames(sens_W2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_H1_f_mn) <- NULL; colnames(sens_H1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_H2_f_mn) <- NULL; colnames(sens_H2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_AS_f_mn) <- NULL; colnames(sens_AS_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_n1_f_mn) <- NULL; colnames(sens_n1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_n2_f_mn) <- NULL; colnames(sens_n2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_w1_m_mn) <- NULL; colnames(sens_w1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_w2_m_mn) <- NULL; colnames(sens_w2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_h1_m_mn) <- NULL; colnames(sens_h1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_h2_m_mn) <- NULL; colnames(sens_h2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_js_m_mn) <- NULL; colnames(sens_js_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_W1_m_mn) <- NULL; colnames(sens_W1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_W2_m_mn) <- NULL; colnames(sens_W2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_H1_m_mn) <- NULL; colnames(sens_H1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_H2_m_mn) <- NULL; colnames(sens_H2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_AS_m_mn) <- NULL; colnames(sens_AS_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_n1_m_mn) <- NULL; colnames(sens_n1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_n2_m_mn) <- NULL; colnames(sens_n2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_p1_mn) <- NULL; colnames(sens_p1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_p2_mn) <- NULL; colnames(sens_p2_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(sens_p3_mn) <- NULL; colnames(sens_p3_mn) <- c('Mean', 'Lower_95', 'Upper_95')
#rownames(sens_m1_mn) <- NULL; colnames(sens_m1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
#rownames(sens_m2_mn) <- NULL; colnames(sens_m2_mn) <- c('Mean', 'Lower_95', 'Upper_95')

LTRE_sens <- cbind.data.frame(rbind.data.frame(sens_F1_mn,sens_F2_mn,
                                               sens_w1_f_mn,sens_w2_f_mn,sens_h1_f_mn,sens_h2_f_mn,sens_js_f_mn,sens_W1_f_mn,sens_W2_f_mn,sens_H1_f_mn,sens_H2_f_mn,sens_AS_f_mn,sens_n1_f_mn,sens_n2_f_mn,
                                               sens_w1_m_mn,sens_w2_m_mn,sens_h1_m_mn,sens_h2_m_mn,sens_js_m_mn,sens_W1_m_mn,sens_W2_m_mn,sens_H1_m_mn,sens_H2_m_mn,sens_AS_m_mn,sens_n1_m_mn,sens_n2_m_mn,
                                               sens_p1_mn,sens_p2_mn,sens_p3_mn),
                              expand.grid(region = c('AK','NO','PR'),
                                          parameter = c('F1','F2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'P1','P2','P3') ))

cont_F1_mn <- t(rbind.data.frame(mean = (apply(cont_F1, 2, mean)), low_95 = (apply(cont_F1, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_F1, 2,quantile, probs = 0.975) )))
cont_F2_mn <- t(rbind.data.frame(mean = (apply(cont_F2, 2, mean)), low_95 = (apply(cont_F2, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_F2, 2,quantile, probs = 0.975) )))
cont_w1_f_mn <- t(rbind.data.frame(mean = (apply(cont_w1_f, 2, mean)), low_95 = (apply(cont_w1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_w1_f, 2,quantile, probs = 0.975) )))
cont_w2_f_mn <- t(rbind.data.frame(mean = (apply(cont_w2_f, 2, mean)), low_95 = (apply(cont_w2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_w2_f, 2,quantile, probs = 0.975) )))
cont_h1_f_mn <- t(rbind.data.frame(mean = (apply(cont_h1_f, 2, mean)), low_95 = (apply(cont_h1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_h1_f, 2,quantile, probs = 0.975) )))
cont_h2_f_mn <- t(rbind.data.frame(mean = (apply(cont_h2_f, 2, mean)), low_95 = (apply(cont_h2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_h2_f, 2,quantile, probs = 0.975) )))
cont_js_f_mn <- t(rbind.data.frame(mean = (apply(cont_js_f, 2, mean)), low_95 = (apply(cont_js_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_js_f, 2,quantile, probs = 0.975) )))
cont_W1_f_mn <- t(rbind.data.frame(mean = (apply(cont_W1_f, 2, mean)), low_95 = (apply(cont_W1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_W1_f, 2,quantile, probs = 0.975) )))
cont_W2_f_mn <- t(rbind.data.frame(mean = (apply(cont_W2_f, 2, mean)), low_95 = (apply(cont_W2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_W2_f, 2,quantile, probs = 0.975) )))
cont_H1_f_mn <- t(rbind.data.frame(mean = (apply(cont_H1_f, 2, mean)), low_95 = (apply(cont_H1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_H1_f, 2,quantile, probs = 0.975) )))
cont_H2_f_mn <- t(rbind.data.frame(mean = (apply(cont_H2_f, 2, mean)), low_95 = (apply(cont_H2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_H2_f, 2,quantile, probs = 0.975) )))
cont_AS_f_mn <- t(rbind.data.frame(mean = (apply(cont_AS_f, 2, mean)), low_95 = (apply(cont_AS_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_AS_f, 2,quantile, probs = 0.975) )))
cont_n1_f_mn <- t(rbind.data.frame(mean = (apply(cont_n1_f, 2, mean)), low_95 = (apply(cont_n1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_n1_f, 2,quantile, probs = 0.975) )))
cont_n2_f_mn <- t(rbind.data.frame(mean = (apply(cont_n2_f, 2, mean)), low_95 = (apply(cont_n2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_n2_f, 2,quantile, probs = 0.975) )))
cont_w1_m_mn <- t(rbind.data.frame(mean = (apply(cont_w1_m, 2, mean)), low_95 = (apply(cont_w1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_w1_m, 2,quantile, probs = 0.975) )))
cont_w2_m_mn <- t(rbind.data.frame(mean = (apply(cont_w2_m, 2, mean)), low_95 = (apply(cont_w2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_w2_m, 2,quantile, probs = 0.975) )))
cont_h1_m_mn <- t(rbind.data.frame(mean = (apply(cont_h1_m, 2, mean)), low_95 = (apply(cont_h1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_h1_m, 2,quantile, probs = 0.975) )))
cont_h2_m_mn <- t(rbind.data.frame(mean = (apply(cont_h2_m, 2, mean)), low_95 = (apply(cont_h2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_h2_m, 2,quantile, probs = 0.975) )))
cont_js_m_mn <- t(rbind.data.frame(mean = (apply(cont_js_m, 2, mean)), low_95 = (apply(cont_js_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_js_m, 2,quantile, probs = 0.975) )))
cont_W1_m_mn <- t(rbind.data.frame(mean = (apply(cont_W1_m, 2, mean)), low_95 = (apply(cont_W1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_W1_m, 2,quantile, probs = 0.975) )))
cont_W2_m_mn <- t(rbind.data.frame(mean = (apply(cont_W2_m, 2, mean)), low_95 = (apply(cont_W2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_W2_m, 2,quantile, probs = 0.975) )))
cont_H1_m_mn <- t(rbind.data.frame(mean = (apply(cont_H1_m, 2, mean)), low_95 = (apply(cont_H1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_H1_m, 2,quantile, probs = 0.975) )))
cont_H2_m_mn <- t(rbind.data.frame(mean = (apply(cont_H2_m, 2, mean)), low_95 = (apply(cont_H2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_H2_m, 2,quantile, probs = 0.975) )))
cont_AS_m_mn <- t(rbind.data.frame(mean = (apply(cont_AS_m, 2, mean)), low_95 = (apply(cont_AS_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_AS_m, 2,quantile, probs = 0.975) )))
cont_n1_m_mn <- t(rbind.data.frame(mean = (apply(cont_n1_m, 2, mean)), low_95 = (apply(cont_n1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_n1_m, 2,quantile, probs = 0.975) )))
cont_n2_m_mn <- t(rbind.data.frame(mean = (apply(cont_n2_m, 2, mean)), low_95 = (apply(cont_n2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_n2_m, 2,quantile, probs = 0.975) )))
cont_p1_mn <- t(rbind.data.frame(mean = (apply(cont_p1, 2, mean)), low_95 = (apply(cont_p1, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_p1, 2,quantile, probs = 0.975) )))
cont_p2_mn <- t(rbind.data.frame(mean = (apply(cont_p2, 2, mean)), low_95 = (apply(cont_p2, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_p2, 2,quantile, probs = 0.975) )))
cont_p3_mn <- t(rbind.data.frame(mean = (apply(cont_p3, 2, mean)), low_95 = (apply(cont_p3, 2,quantile, probs = 0.025)), upp_95 = (apply(cont_p3, 2,quantile, probs = 0.975) )))

rownames(cont_F1_mn) <- NULL; colnames(cont_F1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_F2_mn) <- NULL; colnames(cont_F2_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_w1_f_mn) <- NULL; colnames(cont_w1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_w2_f_mn) <- NULL; colnames(cont_w2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_h1_f_mn) <- NULL; colnames(cont_h1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_h2_f_mn) <- NULL; colnames(cont_h2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_js_f_mn) <- NULL; colnames(cont_js_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_W1_f_mn) <- NULL; colnames(cont_W1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_W2_f_mn) <- NULL; colnames(cont_W2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_H1_f_mn) <- NULL; colnames(cont_H1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_H2_f_mn) <- NULL; colnames(cont_H2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_AS_f_mn) <- NULL; colnames(cont_AS_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_n1_f_mn) <- NULL; colnames(cont_n1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_n2_f_mn) <- NULL; colnames(cont_n2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_w1_m_mn) <- NULL; colnames(cont_w1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_w2_m_mn) <- NULL; colnames(cont_w2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_h1_m_mn) <- NULL; colnames(cont_h1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_h2_m_mn) <- NULL; colnames(cont_h2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_js_m_mn) <- NULL; colnames(cont_js_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_W1_m_mn) <- NULL; colnames(cont_W1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_W2_m_mn) <- NULL; colnames(cont_W2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_H1_m_mn) <- NULL; colnames(cont_H1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_H2_m_mn) <- NULL; colnames(cont_H2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_AS_m_mn) <- NULL; colnames(cont_AS_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_n1_m_mn) <- NULL; colnames(cont_n1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_n2_m_mn) <- NULL; colnames(cont_n2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_p1_mn) <- NULL; colnames(cont_p1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_p2_mn) <- NULL; colnames(cont_p2_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(cont_p3_mn) <- NULL; colnames(cont_p3_mn) <- c('Mean', 'Lower_95', 'Upper_95')

LTRE_cont <- cbind.data.frame(rbind.data.frame(cont_F1_mn,cont_F2_mn,
                                               cont_w1_f_mn,cont_w2_f_mn,cont_h1_f_mn,cont_h2_f_mn,cont_js_f_mn,
                                               cont_W1_f_mn,cont_W2_f_mn,cont_H1_f_mn,cont_H2_f_mn,cont_AS_f_mn,
                                               cont_n1_f_mn,cont_n2_f_mn,
                                               cont_w1_m_mn,cont_w2_m_mn,cont_h1_m_mn,cont_h2_m_mn,cont_js_m_mn,
                                               cont_W1_m_mn,cont_W2_m_mn,cont_H1_m_mn,cont_H2_m_mn,cont_AS_m_mn,
                                               cont_n1_m_mn,cont_n2_m_mn,
                                               cont_p1_mn,cont_p2_mn,cont_p3_mn),
                              expand.grid(region = c('Alaska','Boreal','Prairie'),
                                          parameter = c('F1','F2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'P1','P2','P3') ))

total <- cont_F1 + cont_F2+ cont_w1_f+ cont_w2_f+ cont_h1_f+ cont_h2_f+ cont_js_f+ cont_W1_f+ cont_W2_f+ cont_H1_f+ cont_H2_f+ cont_AS_f+ cont_n1_f+ cont_n2_f+ cont_w1_m+ cont_w2_m+ cont_h1_m+ cont_h2_m+ cont_js_m+ cont_W1_m+ cont_W2_m+ cont_H1_m+ cont_H2_m+ cont_AS_m+ cont_n1_m+ cont_n2_m+cont_p1+cont_p2+cont_p3


prop_F1 <- cont_F1/total
prop_F2 <- cont_F2/total
prop_w1_f <- cont_w1_f/total
prop_w2_f <- cont_w2_f/total
prop_h1_f <- cont_h1_f/total
prop_h2_f <- cont_h2_f/total
prop_js_f <- cont_js_f/total
prop_W1_f <- cont_W1_f/total
prop_W2_f <- cont_W2_f/total
prop_H1_f <- cont_H1_f/total
prop_H2_f <- cont_H2_f/total
prop_AS_f <- cont_AS_f/total
prop_n1_f <- cont_n1_f/total
prop_n2_f <- cont_n2_f/total
prop_w1_m <- cont_w1_m/total
prop_w2_m <- cont_w2_m/total
prop_h1_m <- cont_h1_m/total
prop_h2_m <- cont_h2_m/total
prop_js_m <- cont_js_m/total
prop_W1_m <- cont_W1_m/total
prop_W2_m <- cont_W2_m/total
prop_H1_m <- cont_H1_m/total
prop_H2_m <- cont_H2_m/total
prop_AS_m <- cont_AS_m/total
prop_n1_m <- cont_n1_m/total
prop_n2_m <- cont_n2_m/total
prop_p1 <- cont_p1/total
prop_p2 <- cont_p2/total
prop_p3 <- cont_p3/total

prop_F1_mn <- t(rbind.data.frame(mean = (apply(prop_F1, 2, mean)), low_95 = (apply(prop_F1, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_F1, 2,quantile, probs = 0.975) )))
prop_F2_mn <- t(rbind.data.frame(mean = (apply(prop_F2, 2, mean)), low_95 = (apply(prop_F2, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_F2, 2,quantile, probs = 0.975) )))
prop_w1_f_mn <- t(rbind.data.frame(mean = (apply(prop_w1_f, 2, mean)), low_95 = (apply(prop_w1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_w1_f, 2,quantile, probs = 0.975) )))
prop_w2_f_mn <- t(rbind.data.frame(mean = (apply(prop_w2_f, 2, mean)), low_95 = (apply(prop_w2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_w2_f, 2,quantile, probs = 0.975) )))
prop_h1_f_mn <- t(rbind.data.frame(mean = (apply(prop_h1_f, 2, mean)), low_95 = (apply(prop_h1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_h1_f, 2,quantile, probs = 0.975) )))
prop_h2_f_mn <- t(rbind.data.frame(mean = (apply(prop_h2_f, 2, mean)), low_95 = (apply(prop_h2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_h2_f, 2,quantile, probs = 0.975) )))
prop_js_f_mn <- t(rbind.data.frame(mean = (apply(prop_js_f, 2, mean)), low_95 = (apply(prop_js_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_js_f, 2,quantile, probs = 0.975) )))
prop_W1_f_mn <- t(rbind.data.frame(mean = (apply(prop_W1_f, 2, mean)), low_95 = (apply(prop_W1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_W1_f, 2,quantile, probs = 0.975) )))
prop_W2_f_mn <- t(rbind.data.frame(mean = (apply(prop_W2_f, 2, mean)), low_95 = (apply(prop_W2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_W2_f, 2,quantile, probs = 0.975) )))
prop_H1_f_mn <- t(rbind.data.frame(mean = (apply(prop_H1_f, 2, mean)), low_95 = (apply(prop_H1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_H1_f, 2,quantile, probs = 0.975) )))
prop_H2_f_mn <- t(rbind.data.frame(mean = (apply(prop_H2_f, 2, mean)), low_95 = (apply(prop_H2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_H2_f, 2,quantile, probs = 0.975) )))
prop_AS_f_mn <- t(rbind.data.frame(mean = (apply(prop_AS_f, 2, mean)), low_95 = (apply(prop_AS_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_AS_f, 2,quantile, probs = 0.975) )))
prop_n1_f_mn <- t(rbind.data.frame(mean = (apply(prop_n1_f, 2, mean)), low_95 = (apply(prop_n1_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_n1_f, 2,quantile, probs = 0.975) )))
prop_n2_f_mn <- t(rbind.data.frame(mean = (apply(prop_n2_f, 2, mean)), low_95 = (apply(prop_n2_f, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_n2_f, 2,quantile, probs = 0.975) )))
prop_w1_m_mn <- t(rbind.data.frame(mean = (apply(prop_w1_m, 2, mean)), low_95 = (apply(prop_w1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_w1_m, 2,quantile, probs = 0.975) )))
prop_w2_m_mn <- t(rbind.data.frame(mean = (apply(prop_w2_m, 2, mean)), low_95 = (apply(prop_w2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_w2_m, 2,quantile, probs = 0.975) )))
prop_h1_m_mn <- t(rbind.data.frame(mean = (apply(prop_h1_m, 2, mean)), low_95 = (apply(prop_h1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_h1_m, 2,quantile, probs = 0.975) )))
prop_h2_m_mn <- t(rbind.data.frame(mean = (apply(prop_h2_m, 2, mean)), low_95 = (apply(prop_h2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_h2_m, 2,quantile, probs = 0.975) )))
prop_js_m_mn <- t(rbind.data.frame(mean = (apply(prop_js_m, 2, mean)), low_95 = (apply(prop_js_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_js_m, 2,quantile, probs = 0.975) )))
prop_W1_m_mn <- t(rbind.data.frame(mean = (apply(prop_W1_m, 2, mean)), low_95 = (apply(prop_W1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_W1_m, 2,quantile, probs = 0.975) )))
prop_W2_m_mn <- t(rbind.data.frame(mean = (apply(prop_W2_m, 2, mean)), low_95 = (apply(prop_W2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_W2_m, 2,quantile, probs = 0.975) )))
prop_H1_m_mn <- t(rbind.data.frame(mean = (apply(prop_H1_m, 2, mean)), low_95 = (apply(prop_H1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_H1_m, 2,quantile, probs = 0.975) )))
prop_H2_m_mn <- t(rbind.data.frame(mean = (apply(prop_H2_m, 2, mean)), low_95 = (apply(prop_H2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_H2_m, 2,quantile, probs = 0.975) )))
prop_AS_m_mn <- t(rbind.data.frame(mean = (apply(prop_AS_m, 2, mean)), low_95 = (apply(prop_AS_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_AS_m, 2,quantile, probs = 0.975) )))
prop_n1_m_mn <- t(rbind.data.frame(mean = (apply(prop_n1_m, 2, mean)), low_95 = (apply(prop_n1_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_n1_m, 2,quantile, probs = 0.975) )))
prop_n2_m_mn <- t(rbind.data.frame(mean = (apply(prop_n2_m, 2, mean)), low_95 = (apply(prop_n2_m, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_n2_m, 2,quantile, probs = 0.975) )))
prop_p1_mn <- t(rbind.data.frame(mean = (apply(prop_p1, 2, mean)), low_95 = (apply(prop_p1, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_p1, 2,quantile, probs = 0.975) )))
prop_p2_mn <- t(rbind.data.frame(mean = (apply(prop_p2, 2, mean)), low_95 = (apply(prop_p2, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_p2, 2,quantile, probs = 0.975) )))
prop_p3_mn <- t(rbind.data.frame(mean = (apply(prop_p3, 2, mean)), low_95 = (apply(prop_p3, 2,quantile, probs = 0.025)), upp_95 = (apply(prop_p3, 2,quantile, probs = 0.975) )))


rownames(prop_F1_mn) <- NULL; colnames(prop_F1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_F2_mn) <- NULL; colnames(prop_F2_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_w1_f_mn) <- NULL; colnames(prop_w1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_w2_f_mn) <- NULL; colnames(prop_w2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_h1_f_mn) <- NULL; colnames(prop_h1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_h2_f_mn) <- NULL; colnames(prop_h2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_js_f_mn) <- NULL; colnames(prop_js_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_W1_f_mn) <- NULL; colnames(prop_W1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_W2_f_mn) <- NULL; colnames(prop_W2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_H1_f_mn) <- NULL; colnames(prop_H1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_H2_f_mn) <- NULL; colnames(prop_H2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_AS_f_mn) <- NULL; colnames(prop_AS_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_n1_f_mn) <- NULL; colnames(prop_n1_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_n2_f_mn) <- NULL; colnames(prop_n2_f_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_w1_m_mn) <- NULL; colnames(prop_w1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_w2_m_mn) <- NULL; colnames(prop_w2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_h1_m_mn) <- NULL; colnames(prop_h1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_h2_m_mn) <- NULL; colnames(prop_h2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_js_m_mn) <- NULL; colnames(prop_js_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_W1_m_mn) <- NULL; colnames(prop_W1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_W2_m_mn) <- NULL; colnames(prop_W2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_H1_m_mn) <- NULL; colnames(prop_H1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_H2_m_mn) <- NULL; colnames(prop_H2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_AS_m_mn) <- NULL; colnames(prop_AS_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_n1_m_mn) <- NULL; colnames(prop_n1_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_n2_m_mn) <- NULL; colnames(prop_n2_m_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_p1_mn) <- NULL; colnames(prop_p1_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_p2_mn) <- NULL; colnames(prop_p2_mn) <- c('Mean', 'Lower_95', 'Upper_95')
rownames(prop_p3_mn) <- NULL; colnames(prop_p3_mn) <- c('Mean', 'Lower_95', 'Upper_95')

LTRE_prop <- cbind.data.frame(rbind.data.frame(prop_F1_mn,prop_F2_mn,
                                               prop_w1_f_mn,prop_w2_f_mn,prop_h1_f_mn,prop_h2_f_mn,prop_js_f_mn,prop_W1_f_mn,prop_W2_f_mn,prop_H1_f_mn,prop_H2_f_mn,prop_AS_f_mn,prop_n1_f_mn,prop_n2_f_mn,
                                               prop_w1_m_mn,prop_w2_m_mn,prop_h1_m_mn,prop_h2_m_mn,prop_js_m_mn,prop_W1_m_mn,prop_W2_m_mn,prop_H1_m_mn,prop_H2_m_mn,prop_AS_m_mn,prop_n1_m_mn,prop_n2_m_mn,
                                               prop_p1_mn,prop_p2_mn,prop_p3_mn),
                              expand.grid(region = c('Alaska','Boreal','Prairie'),
                                          parameter = c('F1','F2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'P1','P2','P3') ), sex = c(rep('Female', 14*3), rep('Male',12*3), rep('Move',3*3)))

cont_F1_t_mn <- apply(cont_F1_t, c(2,3), mean)
cont_F2_t_mn <- apply(cont_F2_t, c(2,3), mean)
cont_w1_f_t_mn <- apply(cont_w1_f_t, c(2,3), mean)
cont_w2_f_t_mn <- apply(cont_w2_f_t, c(2,3), mean)
cont_h1_f_t_mn <- apply(cont_h1_f_t, c(2,3), mean)
cont_h2_f_t_mn <- apply(cont_h2_f_t, c(2,3), mean)
cont_js_f_t_mn <- apply(cont_js_f_t, c(2,3), mean)
cont_W1_f_t_mn <- apply(cont_W1_f_t, c(2,3), mean)
cont_W2_f_t_mn <- apply(cont_W2_f_t, c(2,3), mean)
cont_H1_f_t_mn <- apply(cont_H1_f_t, c(2,3), mean)
cont_H2_f_t_mn <- apply(cont_H2_f_t, c(2,3), mean)
cont_AS_f_t_mn <- apply(cont_AS_f_t, c(2,3), mean)
cont_n1_f_t_mn <- apply(cont_n1_f_t, c(2,3), mean)
cont_n2_f_t_mn <- apply(cont_n2_f_t, c(2,3), mean)
cont_w1_m_t_mn <- apply(cont_w1_m_t, c(2,3), mean)
cont_w2_m_t_mn <- apply(cont_w2_m_t, c(2,3), mean)
cont_h1_m_t_mn <- apply(cont_h1_m_t, c(2,3), mean)
cont_h2_m_t_mn <- apply(cont_h2_m_t, c(2,3), mean)
cont_js_m_t_mn <- apply(cont_js_m_t, c(2,3), mean)
cont_W1_m_t_mn <- apply(cont_W1_m_t, c(2,3), mean)
cont_W2_m_t_mn <- apply(cont_W2_m_t, c(2,3), mean)
cont_H1_m_t_mn <- apply(cont_H1_m_t, c(2,3), mean)
cont_H2_m_t_mn <- apply(cont_H2_m_t, c(2,3), mean)
cont_AS_m_t_mn <- apply(cont_AS_m_t, c(2,3), mean)
cont_n1_m_t_mn <- apply(cont_n1_m_t, c(2,3), mean)
cont_n2_m_t_mn <- apply(cont_n2_m_t, c(2,3), mean)
cont_p1_t_mn <- apply(cont_p1_t, c(2,3), mean)
cont_p2_t_mn <- apply(cont_p2_t, c(2,3), mean)
cont_p3_t_mn <- apply(cont_p3_t, c(2,3), mean)

cont_F_t      <- cont_F1_t + cont_F2_t
cont_F_t_lead <-  cont_F_t[,,-59]
cor_F <- array(NA, dim = c(3,dim(cont_F_t)[1],(params-1)))

# Estimate lagged correlation between fecundity and all other demographic rates
for(k in 1:n.region){
  for(i in 1:dim(cor_F)[2]){
    cor_F[k,i,1]  <- cor(cont_F_t_lead[i,k,], cont_F_t[i,k,-1])
    cor_F[k,i,2]  <- cor(cont_F_t_lead[i,k,],cont_w1_f_t[i,k,-1]) 
    cor_F[k,i,3]  <- cor(cont_F_t_lead[i,k,],cont_w2_f_t[i,k,-1]) 
    cor_F[k,i,4]  <- cor(cont_F_t_lead[i,k,],cont_h1_f_t[i,k,-1]) 
    cor_F[k,i,5]  <- cor(cont_F_t_lead[i,k,],cont_h2_f_t[i,k,-1]) 
    cor_F[k,i,6]  <- cor(cont_F_t_lead[i,k,],cont_js_f_t[i,k,-1]) 
    cor_F[k,i,7]  <- cor(cont_F_t_lead[i,k,],cont_W1_f_t[i,k,-1]) 
    cor_F[k,i,8]  <- cor(cont_F_t_lead[i,k,],cont_W2_f_t[i,k,-1]) 
    cor_F[k,i,9]  <- cor(cont_F_t_lead[i,k,],cont_H1_f_t[i,k,-1]) 
    cor_F[k,i,10] <- cor(cont_F_t_lead[i,k,],cont_H2_f_t[i,k,-1]) 
    cor_F[k,i,11] <- cor(cont_F_t_lead[i,k,],cont_AS_f_t[i,k,-1]) 
    cor_F[k,i,12] <- cor(cont_F_t_lead[i,k,],cont_n1_f_t[i,k,-1]) 
    cor_F[k,i,13] <- cor(cont_F_t_lead[i,k,],cont_n2_f_t[i,k,-1]) 
    
    cor_F[k,i,14]  <- cor(cont_F_t_lead[i,k,],cont_w1_m_t[i,k,-1]) 
    cor_F[k,i,15]  <- cor(cont_F_t_lead[i,k,],cont_w2_m_t[i,k,-1]) 
    cor_F[k,i,16]  <- cor(cont_F_t_lead[i,k,],cont_h1_m_t[i,k,-1]) 
    cor_F[k,i,17]  <- cor(cont_F_t_lead[i,k,],cont_h2_m_t[i,k,-1]) 
    cor_F[k,i,18]  <- cor(cont_F_t_lead[i,k,],cont_js_m_t[i,k,-1]) 
    cor_F[k,i,19]  <- cor(cont_F_t_lead[i,k,],cont_W1_m_t[i,k,-1]) 
    cor_F[k,i,20]  <- cor(cont_F_t_lead[i,k,],cont_W2_m_t[i,k,-1]) 
    cor_F[k,i,21]  <- cor(cont_F_t_lead[i,k,],cont_H1_m_t[i,k,-1]) 
    cor_F[k,i,22] <- cor(cont_F_t_lead[i,k,],cont_H2_m_t[i,k,-1]) 
    cor_F[k,i,23] <- cor(cont_F_t_lead[i,k,],cont_AS_m_t[i,k,-1]) 
    cor_F[k,i,24] <- cor(cont_F_t_lead[i,k,],cont_n1_m_t[i,k,-1]) 
    cor_F[k,i,25] <- cor(cont_F_t_lead[i,k,],cont_n2_m_t[i,k,-1]) 
    
    cor_F[k,i,26] <- cor(cont_F_t_lead[i,k,],cont_p1_t[i,k,-1]) 
    cor_F[k,i,27] <- cor(cont_F_t_lead[i,k,],cont_p2_t[i,k,-1]) 
    cor_F[k,i,28] <- cor(cont_F_t_lead[i,k,],cont_p3_t[i,k,-1]) 

  }
}

lags <- cbind.data.frame( mean = c(apply(cor_F, c(1,3), mean)), 
                          lower = c(apply(cor_F , c(1,3),quantile, probs = 0.025)),
                          upper = c(apply(cor_F , c(1,3),quantile, probs = 0.975)), 
                          expand.grid(region = c('Alaska','Boreal','Prairie'),
                                      Parameter = c('F','w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                        'w1','w2','h1','h2','JS','W1','W2','H1','H2','AS','N1','N2',
                                                    'P1','P2','P3')),
                          sex = c(rep('Female', 13*3), rep('Male',12*3), rep('Move',3*3))) 

library(reshape2)

cont_t <- melt(rbind(
  t(cont_F1_t_mn + cont_F2_t_mn),
  t(cont_w1_f_t_mn),t(cont_w2_f_t_mn),t(cont_h1_f_t_mn),t(cont_h2_f_t_mn),t(cont_js_f_t_mn),t(cont_W1_f_t_mn),t(cont_W2_f_t_mn),t(cont_H1_f_t_mn),t(cont_H2_f_t_mn),t(cont_AS_f_t_mn),t(cont_n1_f_t_mn+cont_n2_f_t_mn),
  t(cont_w1_m_t_mn),t(cont_w2_m_t_mn),t(cont_h1_m_t_mn),t(cont_h2_m_t_mn),t(cont_js_m_t_mn),t(cont_W1_m_t_mn),t(cont_W2_m_t_mn),t(cont_H1_m_t_mn),t(cont_H2_m_t_mn),t(cont_AS_m_t_mn),t(cont_n1_m_t_mn+cont_n2_m_t_mn),
  t(cont_p1_t_mn), t(cont_p2_t_mn), t(cont_p3_t_mn)))

cont_t2 <- melt(rbind(
                t(cont_F1_t_mn + cont_F2_t_mn),
                t(cont_w1_f_t_mn+cont_w2_f_t_mn),t(cont_h1_f_t_mn+cont_h2_f_t_mn),t(cont_js_f_t_mn),t(cont_W1_f_t_mn+cont_W2_f_t_mn), t(cont_H1_f_t_mn+cont_H2_f_t_mn),t(cont_AS_f_t_mn),t(cont_n1_f_t_mn+cont_n2_f_t_mn),
                t(cont_w1_m_t_mn+cont_w2_m_t_mn),t(cont_h1_m_t_mn+cont_h2_m_t_mn),t(cont_js_m_t_mn),t(cont_W1_m_t_mn+cont_W2_m_t_mn), t(cont_H1_m_t_mn+cont_H2_m_t_mn),t(cont_AS_m_t_mn),t(cont_n1_m_t_mn+cont_n2_m_t_mn),
                t(cont_p1_t_mn+cont_p2_t_mn+cont_p3_t_mn)))


cont_t <- cbind.data.frame(cont_t, 
                           expand.grid(year = 1962:2020,  
                                       Parameter = c('F','S[c,w,j]','S[p,w,j]','S[c,h,j]','S[p,h,j]','S[b,s,j]','S[c,w,a]','S[p,w,a]','S[c,h,a]','S[p,h,a]','S[b,s,a]','N',
                                                         'S[c,w,j]','S[p,w,j]','S[c,h,j]','S[p,h,j]','S[b,s,j]','S[c,w,a]','S[p,w,a]','S[c,h,a]','S[p,h,a]','S[b,s,a]','N',
                                                          'C[AK]','C[NO]','C[PR]'), region = c('Alaska','Boreal','Prairie')), sex = c(rep('Female', 12 * 59),rep('Male', 11 * 59),rep('Move', 3 * 59) ))

cont_t2 <- cbind.data.frame(cont_t2, 
                           expand.grid(year = 1962:2020,  
                                       Parameter = c('F','S[w,j]','S[h,j]','S[b,s,j]','S[w,a]','S[h,a]','S[b,s,a]','N',
                                                         'S[w,j]','S[h,j]','S[b,s,j]','S[w,a]','S[h,a]','S[b,s,a]','N','C'), region = c('Alaska','Boreal','Prairie')),
                           sex = c(rep('Female', 8 * 59),rep('Male', 7 * 59),rep('Move', 1 * 59) ))

library(ggplot2); library(see);library(scico)



ltre_plot <-  ggplot(data = subset(cont_t2,sex != 'Move'), aes(fill = Parameter, x = year, y = value)) + 
  geom_bar(position="stack", stat="identity") + geom_hline(yintercept = 0) +
  scale_fill_metro_d(labels = c(expression(F[net],W[HY],H[HY],S[SY], W[AHY], H[AHY],S[ASY],N[net] ))) +
  labs(y = 'Contribution of each demographic\nparameter to population growth', x = 'Year') +
  facet_wrap(sex~region, ncol = 3) + coord_cartesian(ylim = c(-.5,.5)) + theme_modern(legend.position = 'top', base_size = 20, legend.text.size = 20, legend.title.size = 20, axis.title.size = 20 )
ltre_plot

ggsave(ltre_plot, file = 'tLTRE.jpg', height = 12, width = 16, dpi = 320)


LTRE_cont$sex <- c(rep('Female',42), rep('Male',36),rep('Move',9))

ltre_plot2 <- ggplot(data = subset(LTRE_cont, sex != 'Move'), aes(fill = region, x = parameter, y = Mean)) + 
  geom_pointrange2(aes(fill = region, x = parameter, y = Mean, ymin = Lower_95, ymax =Upper_95), 
                   size = .66, position = position_dodge2(.5), shape = 21) +
  geom_point(aes(fill = region, x = parameter, y = Mean),
             size = 3, position = position_dodge2(.5), shape = 21) +
  scale_fill_see_d() + geom_hline(yintercept = 0) + facet_wrap(~sex, ncol = 1) +
  geom_vline(xintercept = 2.5) +  geom_vline(xintercept = 7.5) +   geom_vline(xintercept = 12.5)  + geom_vline(xintercept = 14.5) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY], W['HY,GC'],W['HY,CV'],H['HY,GC'],H['HY,CV'],S['SY'], W['AHY,GC'],W['AHY,CV'],H['AHY,GC'],H['AHY,CV'],S['ASY'],N[SY],N['ASY'])))+
  labs(y = expression(atop('Estimated  transient life table response', paste('experiment contribution to population growth'))), x = 'Demographic Rate', fill = 'Region') +
  theme_modern(legend.position = 'top', base_size = 20,axis.text.size = 20,axis.title.size = 20, legend.text.size = 20, legend.title.size  = 20)
ltre_plot2

ggsave(ltre_plot2, file = 'ltre_complex.jpg', height =  8, width = 18, dpi = 320)


ltre_plot_prop <- ggplot(data = LTRE_prop, aes(color = region, x = parameter, y = Mean)) + 
  geom_pointrange2(aes(fill = region, x = parameter, y = Mean, ymin = Lower_95, ymax =Upper_95, shape = sex), 
                   size = .66, position = position_dodge2(.5), color = 'black') +
  geom_point(aes(color = region, x = parameter, y = Mean, shape = sex),
             size = 3, position = position_dodge2(.5)) +
  scale_color_see_d() + geom_hline(yintercept = 0) +
  geom_vline(xintercept = 2.5) +  geom_vline(xintercept = 7.5) +   geom_vline(xintercept = 12.5)  + geom_vline(xintercept = 14.5) +
  scale_x_discrete(labels = c(expression(F['SY'],F['ASY'], W['GC,HY'],W['CV,HY'],H['GC,HY'],H['CV,HY'],S['SY'], W['GC,AHY'],W['CV,AHY'],H['GC,AHY'],H['GC,AHY'],S['ASY'],N['SY'],N['ASY'],psi[AK],psi[NO],psi[PR],M[GC],M[CV])))+
  labs(y = expression(atop('Estimated proportional transient life table response', paste('experiment contribution to population growth'))), 
       x = 'Demographic Rate', color = 'Breeding Region',fill = 'Breeding Region', shape = 'Type') +
  theme_modern(legend.position = 'top', base_size = 20,axis.text.size = 20,axis.title.size = 20, legend.text.size = 20, legend.title.size  = 20)
ltre_plot_prop
ggsave(ltre_plot_prop, file = 'ltre_prop.jpg', height =  8, width = 18, dpi = 320)



lag_plot <- ggplot(data = lags, aes(fill = region, x = Parameter, y = mean)) +
  geom_pointrange2(aes(fill = region, x = Parameter, y = mean, ymin = lower, ymax =upper, shape = sex),
                   size = .5, position = position_dodge2(.5),color = 'black') +
  geom_point(aes(color = region, x = Parameter, y = mean,shape = sex),
             size = 3, position = position_dodge2(.5)) +
  scale_color_see_d() + geom_hline(yintercept = 0) +
  scale_x_discrete(labels = c(expression(F[net], W['HY,GC'],W['HY,CV'],H['HY,GC'],H['HY,CV'],S['SY'], W['AHY,GC'],W['AHY,CV'],H['AHY,GC'],H['AHY,CV'],S['ASY'],N[SY],N['ASY'],psi[AK],psi[NO],psi[PR])))+
  labs(y = expression(atop("Correlation between LTRE contributions of", paste("F"["t"], " and the LTRE contributions of ", theta[' t+1']))), 
       x = 'Demographic Rate', fill = 'Region', color = 'Region', shape = 'Type') +
  theme_modern(legend.position = 'top', base_size = 20,axis.text.size = 20,axis.title.size = 20, legend.text.size = 20, legend.title.size  = 20)
lag_plot
ggsave(lag_plot, file = 'lag_plot.jpg', height = 8, width = 18, dpi = 320)


results <- rbind.data.frame(LTRE_sens, LTRE_elas, LTRE_conts)
write.csv(results, file = 'sens_results.csv')


############################################################################################

# Step 6: Calculate desired statistics (e.g. the mean and Bayesian credible  
# interval) from the derived posterior distributions of the LTRE             
# contributions. The following is an example for the total contribution      
# from all demographic parameters.

total_ak <- cont_F1[,1]+cont_F2[,1]+
  cont_w1_f[,1]+cont_w2_f[,1]+cont_h1_f[,1]+cont_h2_f[,1]+cont_js_f[,1]+cont_W1_f[,1]+cont_W2_f[,1]+cont_H1_f[,1]+cont_H2_f[,1]+cont_AS_f[,1]+cont_n1_f[,1]+cont_n2_f[,1]+ 
  cont_w1_m[,1]+cont_w2_m[,1]+cont_h1_m[,1]+cont_h2_m[,1]+cont_js_m[,1]+cont_W1_m[,1]+cont_W2_m[,1]+cont_H1_m[,1]+cont_H2_m[,1]+cont_AS_m[,1]+cont_n1_m[,1]+cont_n2_m[,1]+
  cont_p1[,1]+cont_p2[,1]+cont_p3[,1]

total_no <- cont_F1[,2]+cont_F2[,2]+
  cont_w1_f[,2]+cont_w2_f[,2]+cont_h1_f[,2]+cont_h2_f[,2]+cont_js_f[,2]+cont_W1_f[,2]+cont_W2_f[,2]+cont_H1_f[,2]+cont_H2_f[,2]+cont_AS_f[,2]+cont_n1_f[,2]+cont_n2_f[,2]+ 
  cont_w1_m[,2]+cont_w2_m[,2]+cont_h1_m[,2]+cont_h2_m[,2]+cont_js_m[,2]+cont_W1_m[,2]+cont_W2_m[,2]+cont_H1_m[,2]+cont_H2_m[,2]+cont_AS_m[,2]+cont_n1_m[,2]+cont_n2_m[,2]+
  cont_p1[,2]+cont_p2[,2]+cont_p3[,2]

total_pr <- cont_F1[,3]+cont_F2[,3]+
  cont_w1_f[,3]+cont_w2_f[,3]+cont_h1_f[,3]+cont_h2_f[,3]+cont_js_f[,3]+cont_W1_f[,3]+cont_W2_f[,3]+cont_H1_f[,3]+cont_H2_f[,3]+cont_AS_f[,3]+cont_n1_f[,3]+cont_n2_f[,3]+ 
  cont_w1_m[,3]+cont_w2_m[,3]+cont_h1_m[,3]+cont_h2_m[,3]+cont_js_m[,3]+cont_W1_m[,3]+cont_W2_m[,3]+cont_H1_m[,3]+cont_H2_m[,3]+cont_AS_m[,3]+cont_n1_m[,3]+cont_n2_m[,3]+
  cont_p1[,3]+cont_p2[,3]+cont_p3[,3]


pi_ak <- aperm(pi_all[1,,1:60,],c(2,3,1))
pi_no <- aperm(pi_all[2,,1:60,],c(2,3,1))
pi_pr <- aperm(pi_all[3,,1:60,],c(2,3,1))

# Write out population model in matrix form
matrix.elements <- expression(0.5*F1*(Sfj_w1*Sfj_h1 + Sfj_w2*Sfj_h2) * Sfj_s * pi_ak +
                              0.5*F1*(Sfj_w1*Sfj_h1 + Sfj_w2*Sfj_h2) * Sfj_s * pi_no +
                              0.5*F1*(Sfj_w1*Sfj_h1 + Sfj_w2*Sfj_h2) * Sfj_s * pi_pr,
                              
                              0.5*F2*(Sfj_w1*Sfj_h1 + Sfj_w2*Sfj_h2) * Sfj_s * pi_ak+
                              0.5*F2*(Sfj_w1*Sfj_h1 + Sfj_w2*Sfj_h2) * Sfj_s * pi_no+
                              0.5*F2*(Sfj_w1*Sfj_h1 + Sfj_w2*Sfj_h2) * Sfj_s * pi_pr,
                              
                              0,0,
                              
                              (Sfa_w1*Sfa_h1+ Sfa_w2*Sfa_h2) * Sfa_s * pi_ak + 
                              (Sfa_w1*Sfa_h1+ Sfa_w2*Sfa_h2) * Sfa_s * pi_no +
                              (Sfa_w1*Sfa_h1+ Sfa_w2*Sfa_h2) * Sfa_s * pi_pr,
                              
                              (Sfa_w1*Sfa_h1+ Sfa_w2*Sfa_h2) * Sfa_s * pi_ak + 
                              (Sfa_w1*Sfa_h1+ Sfa_w2*Sfa_h2) * Sfa_s * pi_no +
                              (Sfa_w1*Sfa_h1+ Sfa_w2*Sfa_h2) * Sfa_s * pi_pr,
                              0,0,
                              
                              0.5*F1*(Smj_w1*Smj_h1 + Smj_w2*Smj_h2) * Smj_s * pi_ak +
                              0.5*F1*(Smj_w1*Smj_h1 + Smj_w2*Smj_h2) * Smj_s * pi_no +
                              0.5*F1*(Smj_w1*Smj_h1 + Smj_w2*Smj_h2) * Smj_s * pi_pr,
                              
                              0.5*F2*(Smj_w1*Smj_h1 + Smj_w2*Smj_h2) * Smj_s * pi_ak+
                              0.5*F2*(Smj_w1*Smj_h1 + Smj_w2*Smj_h2) * Smj_s * pi_no+
                              0.5*F2*(Smj_w1*Smj_h1 + Smj_w2*Smj_h2) * Smj_s * pi_pr,
                              
                              0,0,
                              0,0,
                              (Sma_w1*Sma_h1+ Sma_w2*Sma_h2) * Sma_s * pi_ak + 
                              (Sma_w1*Sma_h1+ Sma_w2*Sma_h2) * Sma_s * pi_no +
                              (Sma_w1*Sma_h1+ Sma_w2*Sma_h2) * Sma_s * pi_pr,
                              
                              (Sma_w1*Sma_h1+ Sma_w2*Sma_h2) * Sma_s * pi_ak + 
                              (Sma_w1*Sma_h1+ Sma_w2*Sma_h2) * Sma_s * pi_no +
                              (Sma_w1*Sma_h1+ Sma_w2*Sma_h2) * Sma_s * pi_pr
                              
                              
)

#Extract formulas for each partial derative [i.e., sensitivity]

dF1      <- as.expression(sapply(matrix.elements,D,"F1"))
dF2      <- as.expression(sapply(matrix.elements,D,"F2"))

dSfj_w1  <- as.expression(sapply(matrix.elements,D,"Sfj_w1"))
dSfj_w2  <- as.expression(sapply(matrix.elements,D,"Sfj_w2"))
dSfj_h1  <- as.expression(sapply(matrix.elements,D,"Sfj_h1"))
dSfj_h2  <- as.expression(sapply(matrix.elements,D,"Sfj_h2"))
dSfj_s   <- as.expression(sapply(matrix.elements,D,"Sfj_s"))

dSfa_w1  <- as.expression(sapply(matrix.elements,D,"Sfa_w1"))
dSfa_w2  <- as.expression(sapply(matrix.elements,D,"Sfa_w2"))
dSfa_h1  <- as.expression(sapply(matrix.elements,D,"Sfa_h1"))
dSfa_h2  <- as.expression(sapply(matrix.elements,D,"Sfa_h2"))
dSfa_s   <- as.expression(sapply(matrix.elements,D,"Sfa_s"))

dSmj_w1  <- as.expression(sapply(matrix.elements,D,"Smj_w1"))
dSmj_w2  <- as.expression(sapply(matrix.elements,D,"Smj_w2"))
dSmj_h1  <- as.expression(sapply(matrix.elements,D,"Smj_h1"))
dSmj_h2  <- as.expression(sapply(matrix.elements,D,"Smj_h2"))
dSmj_s   <- as.expression(sapply(matrix.elements,D,"Smj_s"))

dSma_w1  <- as.expression(sapply(matrix.elements,D,"Sma_w1"))
dSma_w2  <- as.expression(sapply(matrix.elements,D,"Sma_w2"))
dSma_h1  <- as.expression(sapply(matrix.elements,D,"Sma_h1"))
dSma_h2  <- as.expression(sapply(matrix.elements,D,"Sma_h2"))
dSma_s   <- as.expression(sapply(matrix.elements,D,"Sma_s"))

dpi_ak    <- as.expression(sapply(matrix.elements,D,"pi_ak"))
dpi_no    <- as.expression(sapply(matrix.elements,D,"pi_no"))
dpi_pr    <- as.expression(sapply(matrix.elements,D,"pi_pr"))

samples <- length(keep1)    
loggeolam_1 <- matrix(NA,samples,3)
loggeolam_2 <- matrix(NA,samples,3)
loggeolam_3 <- matrix(NA,samples,3)
diffgeolam1 <- matrix(NA,samples,3) 
diffgeolam2 <- matrix(NA,samples,3) 

sta1 <- 1
end1 <- 20

sta2 <- 21
end2 <- 40

sta3 <- 41
end3 <- 60

n.region <- 3
for (j in 1:samples){
  for(k in 1:n.region){
    loggeolam_1[j,k] <- mean(log(lam_tot[sta1:end1,j,k]))
    loggeolam_2[j,k] <- mean(log(lam_tot[sta2:end2,j,k]))
    loggeolam_3[j,k] <- mean(log(lam_tot[sta3:end3,j,k]))
    diffgeolam1[j,k] <- loggeolam_2[j,k] - loggeolam_1[j,k]
    diffgeolam2[j,k] <- loggeolam_3[j,k] - loggeolam_1[j,k]
  }
}
apply(exp(loggeolam_1),2,mean)
apply(exp(loggeolam_2),2,mean)
apply(exp(loggeolam_3),2,mean)

apply(diffgeolam1,2,mean)
apply(diffgeolam2,2,mean)

apply(exp(loggeolam_1),2,sd)
apply(exp(loggeolam_2),2,sd)
apply(exp(loggeolam_3),2,sd)

apply(diffgeolam1,2,sd)
apply(diffgeolam2,2,sd)

(apply(exp(loggeolam_1),2,sd)/apply(exp(loggeolam_1),2,mean))
(apply(exp(loggeolam_2),2,sd)/apply(exp(loggeolam_2),2,mean))
(apply(exp(loggeolam_3),2,sd)/apply(exp(loggeolam_3),2,mean))

###########################################################################
# Step 7: Calculate population dynamics for a reference population that      
# represents average initial conditions and average per time step vital rates 
# between the two time periods being compared.
############################################################################

# Region Alaska, Comparison 1
Time <- 20
refpi_ak <- refpi_no <- refpi_pr <- refF1 <- refF2 <- refSfj_w1 <- refSfa_w1 <- refSfj_w2 <- refSfa_w2  <- refSfj_s <- refSfa_s <- refSfj_h1 <- refSfa_h1 <- refSfj_h2 <- refSfa_h2  <- refSmj_w1 <- refSma_w1 <- refSmj_w2 <- refSma_w2  <- refSmj_s <- refSma_s <- refSmj_h1 <- refSma_h1 <- refSmj_h2 <- refSma_h2  <- lam_realref <- array(NA,dim = c(samples,Time,3))
refnf1   <- refnf2 <-refnm1 <- refnm2 <- matrix(NA,samples, 3)
refn     <- array(NA,dim=c(4,1,samples,Time+1,3))
Sfj_w1_reg <- Sfj_w2_reg <- Sfj_h1_reg <- Sfj_h2_reg <- Sfa_w1_reg <- Sfa_w2_reg <- Sfa_h1_reg <- Sfa_h2_reg <-Smj_w1_reg <- Smj_w2_reg <- Smj_h1_reg <- Smj_h2_reg <- Sma_w1_reg <- Sma_w2_reg <- Sma_h1_reg <- Sma_h2_reg <- array(NA,dim=c(60,samples,3))

# Annual vital rates
for (j in 1:samples){
  for(k in 1:n.region){
    for(t in 1:60){
      Sfj_w1_reg[t,j,k] <- Sfj_w1[t,j] * mu_psi[t,j,k]
      Sfa_w1_reg[t,j,k] <- Sfa_w1[t,j] * mu_psi[t,j,k]
      Sfj_w2_reg[t,j,k] <- Sfj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_w2_reg[t,j,k] <- Sfa_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Sfj_h1_reg[t,j,k] <- Sfj_h1[t,j] * mu_psi[t,j,k]
      Sfa_h1_reg[t,j,k] <- Sfa_h1[t,j] * mu_psi[t,j,k]
      Sfj_h2_reg[t,j,k] <- Sfj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_h2_reg[t,j,k] <- Sfa_h2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_w1_reg[t,j,k] <- Smj_w1[t,j] * mu_psi[t,j,k]
      Sma_w1_reg[t,j,k] <- Sma_w1[t,j] * mu_psi[t,j,k]
      Smj_w2_reg[t,j,k] <- Smj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sma_w2_reg[t,j,k] <- Sma_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_h1_reg[t,j,k] <- Smj_h1[t,j] * mu_psi[t,j,k]
      Sma_h1_reg[t,j,k] <- Sma_h1[t,j] * mu_psi[t,j,k]
      Smj_h2_reg[t,j,k] <- Smj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sma_h2_reg[t,j,k] <- Sma_h2[t,j] * (1 - mu_psi[t,j,k])
    }
    # Average vital rate between the starts of each time period
    refnf1[j,k] <- (nf1[sta1,j,k] + nf1[sta2,j,k]) / 2
    refnf2[j,k] <- (nf2[sta1,j,k] + nf2[sta2,j,k]) / 2
    refnm1[j,k] <- (nm1[sta1,j,k] + nm1[sta2,j,k]) / 2
    refnm2[j,k] <- (nm2[sta1,j,k] + nm2[sta2,j,k]) / 2
    
    refn[1,1,j,1,k] <- refnf1[j,k]
    refn[2,1,j,1,k] <- refnf2[j,k]
    
    refn[3,1,j,1,k] <- refnm1[j,k]
    refn[4,1,j,1,k] <- refnm2[j,k]
    
    for (i in 1:Time){
      refpi_ak[j,i,k] <-   (pi_ak[i+sta1-1,j,k] +   pi_ak[i+sta2-1,j,k]) / 2
      refpi_no[j,i,k] <-   (pi_no[i+sta1-1,j,k] +   pi_no[i+sta2-1,j,k]) / 2
      refpi_pr[j,i,k] <-   (pi_pr[i+sta1-1,j,k] +   pi_pr[i+sta2-1,j,k]) / 2
      
      refF1[j,i,k] <-   (F1[i+sta1-1,j,k] + F1[i+sta2-1,j,k]) / 2
      refF2[j,i,k] <-   (F2[i+sta1-1,j,k] + F2[i+sta2-1,j,k]) / 2
      
      refSfj_w1[j,i,k] <- ((Sfj_w1_reg[i+sta1-1,j,k] + Sfj_w1_reg[i+sta2-1,j,k]) / 2)
      refSfa_w1[j,i,k] <- ((Sfa_w1_reg[i+sta1-1,j,k] + Sfa_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_w2[j,i,k] <- ((Sfj_w2_reg[i+sta1-1,j,k] + Sfj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_w2[j,i,k] <- ((Sfa_w2_reg[i+sta1-1,j,k] + Sfa_w2_reg[i+sta2-1,j,k]) / 2) 
    
      refSfj_s[j,i,k]    <- (Sfj_s[i+sta1-1,j,k] +  Sfj_s[i+sta2-1,j,k]) / 2
      refSfa_s[j,i,k]    <- (Sfa_s[i+sta1-1,j,k] +  Sfa_s[i+sta2-1,j,k]) / 2
      
      refSfj_h1[j,i,k] <- ((Sfj_h1_reg[i+sta1-1,j,k] + Sfj_h1_reg[i+sta2-1,j,k]) / 2)
      refSfa_h1[j,i,k] <- ((Sfa_h1_reg[i+sta1-1,j,k] + Sfa_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_h2[j,i,k] <- ((Sfj_h2_reg[i+sta1-1,j,k] + Sfj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_h2[j,i,k] <- ((Sfa_h2_reg[i+sta1-1,j,k] + Sfa_h2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_w1[j,i,k] <- ((Smj_w1_reg[i+sta1-1,j,k] + Smj_w1_reg[i+sta2-1,j,k]) / 2)
      refSma_w1[j,i,k] <- ((Sma_w1_reg[i+sta1-1,j,k] + Sma_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_w2[j,i,k] <- ((Smj_w2_reg[i+sta1-1,j,k] + Smj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSma_w2[j,i,k] <- ((Sma_w2_reg[i+sta1-1,j,k] + Sma_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_s[j,i,k] <-    (Smj_s[i+sta1-1,j,k] +  Smj_s[i+sta2-1,j,k]) / 2
      refSma_s[j,i,k] <-    (Sma_s[i+sta1-1,j,k] +  Sma_s[i+sta2-1,j,k]) / 2
      
      refSmj_h1[j,i,k] <- ((Smj_h1_reg[i+sta1-1,j,k] + Smj_h1_reg[i+sta2-1,j,k]) / 2)
      refSma_h1[j,i,k] <- ((Sma_h1_reg[i+sta1-1,j,k] + Sma_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_h2[j,i,k] <- ((Smj_h2_reg[i+sta1-1,j,k] + Smj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSma_h2[j,i,k] <- ((Sma_h2_reg[i+sta1-1,j,k] + Sma_h2_reg[i+sta2-1,j,k]) / 2) 
      
      # Demographic projection matrix for each region
      A_AK <- matrix(c(
        0.5*refF1[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),0,0,
        
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),0,0,
        
        0.5*refF1[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),0,0,
        
        0,0,
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1]),
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1])
        ), nrow=4, byrow=TRUE)
      
      A_NO <- matrix(c(
         0.5*refF1[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 
         0.5*refF2[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 0,0,
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),0,0,
        
        0.5*refF1[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 0,0,
        
        0,0,
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2]),
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2])
        ), nrow=4, byrow=TRUE)
      
      A_PR <- matrix(c(
         0.5*refF1[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 
         0.5*refF2[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 0,0,
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),0,0,
        
        0.5*refF1[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 0,0,
        
        0,0,
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3]),
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3])
        ), nrow=4, byrow=TRUE)
      
      n_ak <- A_AK %*% refn[,,j,i,1]
      n_no <- A_NO %*% refn[,,j,i,2]
      n_pr <- A_PR %*% refn[,,j,i,3]
      
      lam_realref[j,i,1] <- sum( n_ak)
      lam_realref[j,i,2] <- sum( n_no)
      lam_realref[j,i,3] <- sum( n_pr)
      
      refn[,1,j,i+1,1] <-  n_ak/sum( n_ak) #store the proportionate abundances
      refn[,1,j,i+1,2] <-  n_no/sum( n_no) #store the proportionate abundances
      refn[,1,j,i+1,3] <-  n_pr/sum( n_pr) #store the proportionate abundances
    }
  }
}

# temporal means of the lower-level vital rates
refF1mu     <- apply(refF1 ,c(1,3),mean)
refF2mu     <- apply(refF2 ,c(1,3),mean)
refSfjmu_w1 <- apply(refSfj_w1,c(1,3),mean)
refSfamu_w1 <- apply(refSfa_w1,c(1,3),mean)
refSfjmu_w2 <- apply(refSfj_w2,c(1,3),mean)
refSfamu_w2 <- apply(refSfa_w2,c(1,3),mean)
refSfjmu_h1 <- apply(refSfj_h1,c(1,3),mean)
refSfamu_h1 <- apply(refSfa_h1,c(1,3),mean)
refSfjmu_h2 <- apply(refSfj_h2,c(1,3),mean)
refSfamu_h2 <- apply(refSfa_h2,c(1,3),mean)
refSfjmu_s  <- apply(refSfj_s,c(1,3),mean)
refSfamu_s  <- apply(refSfa_s,c(1,3),mean)
refSmjmu_w1 <- apply(refSmj_w1,c(1,3),mean)
refSmamu_w1 <- apply(refSma_w1,c(1,3),mean)
refSmjmu_w2 <- apply(refSmj_w2,c(1,3),mean)
refSmamu_w2 <- apply(refSma_w2,c(1,3),mean)
refSmjmu_h1 <- apply(refSmj_h1,c(1,3),mean)
refSmamu_h1 <- apply(refSma_h1,c(1,3),mean)
refSmjmu_h2 <- apply(refSmj_h2,c(1,3),mean)
refSmamu_h2 <- apply(refSma_h2,c(1,3),mean)
refSmjmu_s  <- apply(refSmj_s,c(1,3),mean)
refSmamu_s  <- apply(refSma_s,c(1,3),mean)

logF1mudiff      <- matrix(NA,samples,3)
logF2mudiff      <- matrix(NA,samples,3)
logSfj1_wmudiff  <- matrix(NA,samples,3)
logSfa1_wmudiff  <- matrix(NA,samples,3)
logSfj1_hmudiff  <- matrix(NA,samples,3)
logSfa1_hmudiff  <- matrix(NA,samples,3)
logSfj2_wmudiff  <- matrix(NA,samples,3)
logSfa2_wmudiff  <- matrix(NA,samples,3)
logSfj2_hmudiff  <- matrix(NA,samples,3)
logSfa2_hmudiff  <- matrix(NA,samples,3)
logSfj_smudiff   <- matrix(NA,samples,3)
logSfa_smudiff   <- matrix(NA,samples,3)

logSmj1_wmudiff  <- matrix(NA,samples,3)
logSma1_wmudiff  <- matrix(NA,samples,3)
logSmj1_hmudiff  <- matrix(NA,samples,3)
logSma1_hmudiff  <- matrix(NA,samples,3)
logSmj2_wmudiff  <- matrix(NA,samples,3)
logSma2_wmudiff  <- matrix(NA,samples,3)
logSmj2_hmudiff  <- matrix(NA,samples,3)
logSma2_hmudiff  <- matrix(NA,samples,3)
logSmj_smudiff   <- matrix(NA,samples,3)
logSma_smudiff   <- matrix(NA,samples,3)

logF1sigdiff     <- matrix(NA,samples,3)
logF2sigdiff     <- matrix(NA,samples,3)
logSfj1_wsigdiff <- matrix(NA,samples,3)
logSfa1_wsigdiff <- matrix(NA,samples,3)
logSfj1_hsigdiff <- matrix(NA,samples,3)
logSfa1_hsigdiff <- matrix(NA,samples,3)
logSfj2_wsigdiff <- matrix(NA,samples,3)
logSfa2_wsigdiff <- matrix(NA,samples,3)
logSfj2_hsigdiff <- matrix(NA,samples,3)
logSfa2_hsigdiff <- matrix(NA,samples,3)
logSfj_ssigdiff  <- matrix(NA,samples,3)
logSfa_ssigdiff  <- matrix(NA,samples,3)

logSmj1_wsigdiff <- matrix(NA,samples,3)
logSma1_wsigdiff <- matrix(NA,samples,3)
logSmj1_hsigdiff <- matrix(NA,samples,3)
logSma1_hsigdiff <- matrix(NA,samples,3)
logSmj2_wsigdiff <- matrix(NA,samples,3)
logSma2_wsigdiff <- matrix(NA,samples,3)
logSmj2_hsigdiff <- matrix(NA,samples,3)
logSma2_hsigdiff <- matrix(NA,samples,3)
logSmj_ssigdiff  <- matrix(NA,samples,3)
logSma_ssigdiff  <- matrix(NA,samples,3)

######################################################################################
# Step 7: Calculate differences on log scale in lower-level vital rate means 
# and standard deviations between time periods.
#######################################################################################

for (j in 1:samples){
  for(k in 1:n.region){      
    # Equation 3 Koons et al. 2017, log u_a - log u_b
    logF1mudiff[j,k]     <-        log(mean(F1[sta1:end1,j,k])) -        log(mean(F1[sta2:end2,j,k]))
    logF2mudiff[j,k]     <-        log(mean(F2[sta1:end1,j,k])) -        log(mean(F2[sta2:end2,j,k]))
    logSfj1_wmudiff[j,k] <-      log(mean(Sfj_w1_reg[sta1:end1,j,k]))-  log(mean(Sfj_w1_reg[sta2:end2,j,k])) 
    logSfa1_wmudiff[j,k] <-      log(mean(Sfa_w1_reg[sta1:end1,j,k]))-  log(mean(Sfa_w1_reg[sta2:end2,j,k])) 
    logSfj1_hmudiff[j,k] <-      log(mean(Sfj_h1_reg[sta1:end1,j,k]))-  log(mean(Sfj_h1_reg[sta2:end2,j,k]))
    logSfa1_hmudiff[j,k] <-      log(mean(Sfa_h1_reg[sta1:end1,j,k]))-  log(mean(Sfa_h1_reg[sta2:end2,j,k]))
    logSfj2_wmudiff[j,k] <-      log(mean(Sfj_w2_reg[sta1:end1,j,k]))-  log(mean(Sfj_w2_reg[sta2:end2,j,k])) 
    logSfa2_wmudiff[j,k] <-      log(mean(Sfa_w2_reg[sta1:end1,j,k]))-  log(mean(Sfa_w2_reg[sta2:end2,j,k])) 
    logSfj2_hmudiff[j,k] <-      log(mean(Sfj_h2_reg[sta1:end1,j,k]))-  log(mean(Sfj_h2_reg[sta2:end2,j,k]))
    logSfa2_hmudiff[j,k] <-      log(mean(Sfa_h2_reg[sta1:end1,j,k]))-  log(mean(Sfa_h2_reg[sta2:end2,j,k]))
    logSfj_smudiff[j,k]  <-      log(mean(Sfj2[sta1:end1,j,k])) -      log(mean(Sfj2[sta2:end2,j,k]))
    logSfa_smudiff[j,k]  <-      log(mean(Sfa2[sta1:end1,j,k])) -      log(mean(Sfa2[sta2:end2,j,k]))
    
    logSmj1_wmudiff[j,k] <-      log(mean(Smj_w1_reg[sta1:end1,j,k]))-  log(mean(Smj_w1_reg[sta2:end2,j,k])) 
    logSma1_wmudiff[j,k] <-      log(mean(Sma_w1_reg[sta1:end1,j,k]))-  log(mean(Sma_w1_reg[sta2:end2,j,k])) 
    logSmj1_hmudiff[j,k] <-      log(mean(Smj_h1_reg[sta1:end1,j,k]))-  log(mean(Smj_h1_reg[sta2:end2,j,k]))
    logSma1_hmudiff[j,k] <-      log(mean(Sma_h1_reg[sta1:end1,j,k]))-  log(mean(Sma_h1_reg[sta2:end2,j,k]))
    logSmj2_wmudiff[j,k] <-      log(mean(Smj_w2_reg[sta1:end1,j,k]))-  log(mean(Smj_w2_reg[sta2:end2,j,k])) 
    logSma2_wmudiff[j,k] <-      log(mean(Sma_w2_reg[sta1:end1,j,k]))-  log(mean(Sma_w2_reg[sta2:end2,j,k])) 
    logSmj2_hmudiff[j,k] <-      log(mean(Smj_h2_reg[sta1:end1,j,k]))-  log(mean(Smj_h2_reg[sta2:end2,j,k]))
    logSma2_hmudiff[j,k] <-      log(mean(Sma_h2_reg[sta1:end1,j,k]))-  log(mean(Sma_h2_reg[sta2:end2,j,k]))
    logSmj_smudiff[j,k]  <-      log(mean(Smj2[sta1:end1,j,k])) -      log(mean(Smj2[sta2:end2,j,k]))
    logSma_smudiff[j,k]  <-      log(mean(Sma2[sta1:end1,j,k])) -      log(mean(Sma2[sta2:end2,j,k]))
    
    # Equation 3 Koons et al. 2017, log sig_a - log sig_b
    logF1sigdiff[j,k]     <-   log(sqrt(var(F1[sta1:end1,j,k]))) -   log(sqrt(var(F1[sta2:end2,j,k])))
    logF2sigdiff[j,k]     <-   log(sqrt(var(F2[sta1:end1,j,k]))) -   log(sqrt(var(F2[sta2:end2,j,k])))
    logSfj_ssigdiff[j,k]  <-   log(sqrt(var(Sfj2[sta1:end1,j,k]))) - log(sqrt(var(Sfj2[sta2:end2,j,k])))
    logSfa_ssigdiff[j,k]  <-   log(sqrt(var(Sfa2[sta1:end1,j,k]))) - log(sqrt(var(Sfa2[sta2:end2,j,k])))
    logSfj1_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_w1_reg[sta2:end2,j,k])))
    logSfa1_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_w1_reg[sta2:end2,j,k])))
    logSfj1_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_h1_reg[sta2:end2,j,k])))
    logSfa1_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_h1_reg[sta2:end2,j,k])))
    logSfj2_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_w2_reg[sta2:end2,j,k])))
    logSfa2_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_w2_reg[sta2:end2,j,k])))
    logSfj2_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_h2_reg[sta2:end2,j,k])))
    logSfa2_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_h2_reg[sta2:end2,j,k])))
  
    logSmj_ssigdiff[j,k] <- log(sqrt(var(Smj2[sta1:end1,j,k]))) - log(sqrt(var(Smj2[sta2:end2,j,k])))
    logSma_ssigdiff[j,k] <- log(sqrt(var(Sma2[sta1:end1,j,k]))) - log(sqrt(var(Sma2[sta2:end2,j,k])))
    logSmj1_wsigdiff[j,k] <-   log(sqrt(var(Smj_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_w1_reg[sta2:end2,j,k])))
    logSma1_wsigdiff[j,k] <-   log(sqrt(var(Sma_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_w1_reg[sta2:end2,j,k])))
    logSmj1_hsigdiff[j,k] <-   log(sqrt(var(Smj_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_h1_reg[sta2:end2,j,k])))
    logSma1_hsigdiff[j,k] <-   log(sqrt(var(Sma_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_h1_reg[sta2:end2,j,k])))
    logSmj2_wsigdiff[j,k] <-   log(sqrt(var(Smj_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_w2_reg[sta2:end2,j,k])))
    logSma2_wsigdiff[j,k] <-   log(sqrt(var(Sma_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_w2_reg[sta2:end2,j,k])))
    logSmj2_hsigdiff[j,k] <-   log(sqrt(var(Smj_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_h2_reg[sta2:end2,j,k])))
    logSma2_hsigdiff[j,k] <-   log(sqrt(var(Sma_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_h2_reg[sta2:end2,j,k])))
  }
}

# Step 8: Compute real-time elasticities, evaluated at the reference mean         
# Real-time elasticities for the direct effects of change in the lower-level vital rates.

S <- 4  # dimension of projection matrix
sp = 1  

eAF1mu  <- eAF2mu <- eASfjmu_w1 <- eASfjmu_w2 <- eASfjmu_s <- eASfjmu_h1 <- eASfjmu_h2 <- eASfamu_h1 <- eASfamu_h2 <- eASfamu_w1 <- eASfamu_w2 <- eASfamu_s <- 
                     eASmjmu_w1 <- eASmjmu_w2 <- eASmjmu_s <- eASmjmu_h1 <- eASmjmu_h2 <- eASmamu_h1 <- eASmamu_h2 <- eASmamu_w1 <- eASmamu_w2 <- eASmamu_s <- 
eAF1sd  <- eAF2sd <- eASfjsd_w1 <- eASfjsd_w2 <- eASfjsd_s <- eASfjsd_h1 <- eASfjsd_h2 <- eASfasd_h1 <- eASfasd_h2 <- eASfasd_w1 <- eASfasd_w2 <- eASfasd_s <- 
                     eASmjsd_w1 <- eASmjsd_w2 <- eASmjsd_s <- eASmjsd_h1 <- eASmjsd_h2 <- eASmasd_h1 <- eASmasd_h2 <- eASmasd_w1 <- eASmasd_w2 <- eASmasd_s <-array(NA,dim=c(S,S,samples,Time))

tot_eAF1mu  <- tot_eAF2mu <- tot_eASfjmu_w1 <- tot_eASfjmu_w2 <- tot_eASfjmu_s <- tot_eASfjmu_h1 <- tot_eASfjmu_h2 <- tot_eASfamu_h1 <- tot_eASfamu_h2 <- tot_eASfamu_w1 <- tot_eASfamu_w2 <- tot_eASfamu_s <- 
                             tot_eASmjmu_w1 <- tot_eASmjmu_w2 <- tot_eASmjmu_s <- tot_eASmjmu_h1 <- tot_eASmjmu_h2 <- tot_eASmamu_h1 <- tot_eASmamu_h2 <- tot_eASmamu_w1 <- tot_eASmamu_w2 <- tot_eASmamu_s <-
tot_eAF1sd  <- tot_eAF2sd <- tot_eASfjsd_w1 <- tot_eASfjsd_w2 <- tot_eASfjsd_s <- tot_eASfjsd_h1 <- tot_eASfjsd_h2 <- tot_eASfasd_h1 <- tot_eASfasd_h2 <- tot_eASfasd_w1 <- tot_eASfasd_w2 <- tot_eASfasd_s  <-
                             tot_eASmjsd_w1 <- tot_eASmjsd_w2 <- tot_eASmjsd_s <- tot_eASmjsd_h1 <- tot_eASmjsd_h2 <- tot_eASmasd_h1 <- tot_eASmasd_h2 <- tot_eASmasd_w1 <- tot_eASmasd_w2 <- tot_eASmasd_s  <-matrix(NA,samples,Time)


for (j in 1:samples){
  for (i in 1:Time){
    for(k in sp){ # manually change region
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s = refSfj_s[j,i,k],
        Sfa_s = refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s = refSmj_s[j,i,k],
        Sma_s = refSma_s[j,i,k],
        
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      for (m in 1:S){
        for (n in 1:S){
          # Equation 3 Koons et al. 2017, e^A_mu
          ##########################################################
          # Means
          eAF1mu[m,n,j,i] <- refF1mu[j,k] * dA_dF1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2mu[m,n,j,i] <- refF2mu[j,k] * dA_dF2[m,n] * refn[n,1,j,i,k] /  lam_realref[j,i,k]
          
          tot_eAF2mu[j,i] <- sum(sum(eAF2mu[,,j,i])) 
          tot_eAF1mu[j,i] <- sum(sum(eAF1mu[,,j,i])) 
          
          eASfjmu_w1[m,n,j,i] <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w1[m,n,j,i] <- refSfamu_w1[j,k] * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_w2[m,n,j,i] <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w2[m,n,j,i] <- refSfamu_w2[j,k] * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w1[m,n,j,i] <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w1[m,n,j,i] <- refSmamu_w1[j,k] * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w2[m,n,j,i] <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w2[m,n,j,i] <- refSmamu_w2[j,k] * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_w1[j,i] <-sum(sum(eASfjmu_w1[,,j,i]))
          tot_eASfamu_w1[j,i] <-sum(sum(eASfamu_w1[,,j,i]))
          tot_eASfjmu_w2[j,i] <-sum(sum(eASfjmu_w2[,,j,i]))
          tot_eASfamu_w2[j,i] <-sum(sum(eASfamu_w2[,,j,i]))
          tot_eASmjmu_w1[j,i] <-sum(sum(eASmjmu_w1[,,j,i]))
          tot_eASmamu_w1[j,i] <-sum(sum(eASmamu_w1[,,j,i]))
          tot_eASmjmu_w2[j,i] <-sum(sum(eASmjmu_w2[,,j,i]))
          tot_eASmamu_w2[j,i] <-sum(sum(eASmamu_w2[,,j,i]))
          
          eASfjmu_h1[m,n,j,i] <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h1[m,n,j,i] <- refSfamu_h1[j,k] * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_h2[m,n,j,i] <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h2[m,n,j,i] <- refSfamu_h2[j,k] * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h1[m,n,j,i] <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h1[m,n,j,i] <- refSmamu_h1[j,k] * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h2[m,n,j,i] <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h2[m,n,j,i] <- refSmamu_h2[j,k] * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k] 
          
          tot_eASfjmu_h1[j,i] <-sum(sum(eASfjmu_h1[,,j,i]))
          tot_eASfamu_h1[j,i] <-sum(sum(eASfamu_h1[,,j,i]))
          tot_eASfjmu_h2[j,i] <-sum(sum(eASfjmu_h2[,,j,i]))
          tot_eASfamu_h2[j,i] <-sum(sum(eASfamu_h2[,,j,i]))
          tot_eASmjmu_h1[j,i] <-sum(sum(eASmjmu_h1[,,j,i]))
          tot_eASmamu_h1[j,i] <-sum(sum(eASmamu_h1[,,j,i]))
          tot_eASmjmu_h2[j,i] <-sum(sum(eASmjmu_h2[,,j,i]))
          tot_eASmamu_h2[j,i] <-sum(sum(eASmamu_h2[,,j,i]))
          
          eASfjmu_s[m,n,j,i] <- refSfjmu_s[j,k] * dA_dSfjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_s[m,n,j,i] <- refSfamu_s[j,k] * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_s[m,n,j,i] <- refSmjmu_s[j,k] * dA_dSmjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_s[m,n,j,i] <- refSmamu_s[j,k] * dA_dSmas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_s[j,i] <- sum(sum(eASfjmu_s[,,j,i])) 
          tot_eASfamu_s[j,i] <- sum(sum(eASfamu_s[,,j,i])) 
          tot_eASmjmu_s[j,i] <- sum(sum(eASmjmu_s[,,j,i])) 
          tot_eASmamu_s[j,i] <- sum(sum(eASmamu_s[,,j,i])) 
          ##################################################################################### 
          # Variance
          # Equation 3 Koons et al. 2017, e^A_sd
          eAF1sd[m,n,j,i] <- (refF1[j,i,k] - refF1mu[j,k]) * dA_dF1[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2sd[m,n,j,i] <- (refF2[j,i,k] - refF2mu[j,k]) * dA_dF2[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eAF1sd[j,i] <- sum(sum(eAF1sd[,,j,i]))
          tot_eAF2sd[j,i] <- sum(sum(eAF2sd[,,j,i]))
          
          eASfjsd_w1[m,n,j,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w1[m,n,j,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_w2[m,n,j,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w2[m,n,j,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h1[m,n,j,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h1[m,n,j,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h2[m,n,j,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h2[m,n,j,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_s [m,n,j,i] <- (refSfj_s[j,i,k]   - refSfjmu_s[j,k]) * dA_dSfjs[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_s [m,n,j,i] <- (refSfa_s[j,i,k]   - refSfamu_s[j,k]) * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          eASmjsd_w1[m,n,j,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w1[m,n,j,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_w2[m,n,j,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w2[m,n,j,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h1[m,n,j,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h1[m,n,j,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h2[m,n,j,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h2[m,n,j,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_s [m,n,j,i] <- (refSmj_s[j,i,k]  - refSmjmu_s[j,k]) * dA_dSmjs[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_s [m,n,j,i] <- (refSma_s[j,i,k]  - refSmamu_s[j,k]) * dA_dSmas[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjsd_w1[j,i] <- sum(sum(eASfjsd_w1[,,j,i])) 
          tot_eASfasd_w1[j,i] <- sum(sum(eASfasd_w1[,,j,i])) 
          tot_eASfjsd_w2[j,i] <- sum(sum(eASfjsd_w2[,,j,i])) 
          tot_eASfasd_w2[j,i] <- sum(sum(eASfasd_w2[,,j,i])) 
          tot_eASfjsd_h1[j,i] <- sum(sum(eASfjsd_h1[,,j,i])) 
          tot_eASfasd_h1[j,i] <- sum(sum(eASfasd_h1[,,j,i])) 
          tot_eASfjsd_h2[j,i] <- sum(sum(eASfjsd_h2[,,j,i])) 
          tot_eASfasd_h2[j,i] <- sum(sum(eASfasd_h2[,,j,i])) 
          tot_eASfjsd_s [j,i] <- sum(sum(eASfjsd_s[,,j,i])) 
          tot_eASfasd_s [j,i] <- sum(sum(eASfasd_s[,,j,i])) 
          
          tot_eASmjsd_w1[j,i] <- sum(sum(eASmjsd_w1[,,j,i])) 
          tot_eASmasd_w1[j,i] <- sum(sum(eASmasd_w1[,,j,i])) 
          tot_eASmjsd_w2[j,i] <- sum(sum(eASmjsd_w2[,,j,i])) 
          tot_eASmasd_w2[j,i] <- sum(sum(eASmasd_w2[,,j,i])) 
          tot_eASmjsd_h1[j,i] <- sum(sum(eASmjsd_h1[,,j,i])) 
          tot_eASmasd_h1[j,i] <- sum(sum(eASmasd_h1[,,j,i])) 
          tot_eASmjsd_h2[j,i] <- sum(sum(eASmjsd_h2[,,j,i])) 
          tot_eASmasd_h2[j,i] <- sum(sum(eASmasd_h2[,,j,i])) 
          tot_eASmjsd_s [j,i] <- sum(sum(eASmjsd_s[,,j,i])) 
          tot_eASmasd_s [j,i] <- sum(sum(eASmasd_s[,,j,i])) 
        }
      }
    }
  }
}

   avg_eAF1mu    <- rowMeans(tot_eAF1mu  )
   avg_eAF2mu    <- rowMeans(tot_eAF2mu )
  avg_eASfjmu_w1 <- rowMeans(tot_eASfjmu_w1 )
  avg_eASfjmu_w2 <- rowMeans(tot_eASfjmu_w2 )
  avg_eASfjmu_s  <- rowMeans(tot_eASfjmu_s )
  avg_eASfjmu_h1 <- rowMeans(tot_eASfjmu_h1 )
  avg_eASfjmu_h2 <- rowMeans(tot_eASfjmu_h2)
  avg_eASfamu_h1 <- rowMeans( tot_eASfamu_h1)
  avg_eASfamu_h2 <- rowMeans( tot_eASfamu_h2 )
  avg_eASfamu_w1 <- rowMeans(tot_eASfamu_w1 )
  avg_eASfamu_w2 <- rowMeans(tot_eASfamu_w2 )
  avg_eASfamu_s  <- rowMeans(tot_eASfamu_s )

  avg_eASmjmu_w1 <- rowMeans(tot_eASmjmu_w1 )
  avg_eASmjmu_w2 <- rowMeans(tot_eASmjmu_w2 )
  avg_eASmjmu_s  <- rowMeans(tot_eASmjmu_s )
  avg_eASmjmu_h1 <- rowMeans(tot_eASmjmu_h1 )
  avg_eASmjmu_h2 <- rowMeans(tot_eASmjmu_h2)
  avg_eASmamu_h1 <- rowMeans(tot_eASmamu_h1)
  avg_eASmamu_h2 <- rowMeans(tot_eASmamu_h2 )
  avg_eASmamu_w1 <- rowMeans(tot_eASmamu_w1 )
  avg_eASmamu_w2 <- rowMeans(tot_eASmamu_w2 )
  avg_eASmamu_s  <- rowMeans(tot_eASmamu_s )
  
   avg_eAF1sd    <-  rowMeans(tot_eAF1sd  )
   avg_eAF2sd    <-  rowMeans(tot_eAF2sd )
  avg_eASfjsd_w1 <-  rowMeans(tot_eASfjsd_w1 )
  avg_eASfjsd_w2 <-  rowMeans(tot_eASfjsd_w2 )
  avg_eASfjsd_s  <-  rowMeans(tot_eASfjsd_s )
  avg_eASfjsd_h1 <-  rowMeans(tot_eASfjsd_h1 )
  avg_eASfjsd_h2 <-  rowMeans(tot_eASfjsd_h2)
  avg_eASfasd_h1 <- rowMeans( tot_eASfasd_h1)
  avg_eASfasd_h2 <- rowMeans( tot_eASfasd_h2 )
  avg_eASfasd_w1 <-  rowMeans(tot_eASfasd_w1 )
  avg_eASfasd_w2 <-  rowMeans(tot_eASfasd_w2 )
  avg_eASfasd_s  <-  rowMeans(tot_eASfasd_s )
  
  avg_eASmjsd_w1 <-  rowMeans(tot_eASmjsd_w1 )
  avg_eASmjsd_w2 <-  rowMeans(tot_eASmjsd_w2 )
  avg_eASmjsd_s  <-  rowMeans(tot_eASmjsd_s )
  avg_eASmjsd_h1 <-  rowMeans(tot_eASmjsd_h1 )
  avg_eASmjsd_h2 <-  rowMeans(tot_eASmjsd_h2)
  avg_eASmasd_h1 <-  rowMeans(tot_eASmasd_h1)
  avg_eASmasd_h2 <-  rowMeans(tot_eASmasd_h2 )
  avg_eASmasd_w1 <-  rowMeans(tot_eASmasd_w1 )
  avg_eASmasd_w2 <-  rowMeans(tot_eASmasd_w2 )
  avg_eASmasd_s  <-  rowMeans(tot_eASmasd_s )
  
# Compute real-time elasticities for the indirect effects of past change in  
# the lower-level vital rates that are channeled through perturbations to   
# stage structure.
I <- diag(S)             # Identity matrix
e <- matrix(1,S,1)       # vector of 1's
# indirect elasticities
enF1mu <- enF2mu <- enSfjwmu1 <- enSfjwmu2 <- enSfawmu1 <- enSfawmu2 <- enSfjhmu1 <- enSfjhmu2 <- enSfahmu1 <- enSfahmu2 <- enSfasmu <- enSfjsmu  <- 
enF1sd <- enF2sd <- enSfjwsd1 <- enSfjwsd2 <- enSfawsd1 <- enSfawsd2 <- enSfjhsd1 <- enSfjhsd2 <- enSfahsd1 <- enSfahsd2 <- enSfassd <- enSfjssd  <- 
                    enSmjwmu1 <- enSmjwmu2 <- enSmawmu1 <- enSmawmu2 <- enSmjhmu1 <- enSmjhmu2 <- enSmahmu1 <- enSmahmu2 <- enSmasmu <- enSmjsmu  <- 
                    enSmjwsd1 <- enSmjwsd2 <- enSmawsd1 <- enSmawsd2 <- enSmjhsd1 <- enSmjhsd2 <- enSmahsd1 <- enSmahsd2 <- enSmassd <- enSmjssd  <- array(0,dim=c(S,S,samples,Time))


tot_enF1mu <- tot_enF2mu <- tot_enSfjwmu1 <- tot_enSfjwmu2 <- tot_enSfawmu1 <- tot_enSfawmu2 <- tot_enSfjhmu1 <- tot_enSfjhmu2 <- tot_enSfahmu1 <- tot_enSfahmu2 <- tot_enSfasmu <- tot_enSfjsmu  <- 
tot_enF1sd <- tot_enF2sd <- tot_enSfjwsd1 <- tot_enSfjwsd2 <- tot_enSfawsd1 <- tot_enSfawsd2 <- tot_enSfjhsd1 <- tot_enSfjhsd2 <- tot_enSfahsd1 <- tot_enSfahsd2 <- tot_enSfassd <- tot_enSfjssd  <-
                            tot_enSmjwmu1 <- tot_enSmjwmu2 <- tot_enSmawmu1 <- tot_enSmawmu2 <- tot_enSmjhmu1 <- tot_enSmjhmu2 <- tot_enSmahmu1 <- tot_enSmahmu2 <- tot_enSmasmu <- tot_enSmjsmu  <- 
                            tot_enSmjwsd1 <- tot_enSmjwsd2 <- tot_enSmawsd1 <- tot_enSmawsd2 <- tot_enSmjhsd1 <- tot_enSmjhsd2 <- tot_enSmahsd1 <- tot_enSmahsd2 <- tot_enSmassd <- tot_enSmjssd  <-matrix(0,samples,Time)


  for (j in 1:samples){
  # perturbation matrices
    C2F1 <- C2F2 <- C2Sfjw1 <- C2Sfjw2 <- C2Sfaw1 <- C2Sfaw2 <- C2Sfjh1 <- C2Sfjh2 <- C2Sfah1 <- C2Sfah2 <- C2Sfas <- C2Sfjs  <-C3F1 <- C3F2 <- C3Sfjw1 <- C3Sfjw2 <- C3Sfaw1 <- C3Sfaw2 <- C3Sfjh1 <- C3Sfjh2 <- C3Sfah1 <- C3Sfah2 <- C3Sfas <- C3Sfjs <-
                    C2Smjw1 <- C2Smjw2 <- C2Smaw1 <- C2Smaw2 <- C2Smjh1 <- C2Smjh2 <- C2Smah1 <- C2Smah2 <- C2Smas <- C2Smjs                 <- C3Smjw1 <- C3Smjw2 <- C3Smaw1 <- C3Smaw2 <- C3Smjh1 <- C3Smjh2 <- C3Smah1 <- C3Smah2 <- C3Smas <- C3Smjs<-array(0,dim=c(S^2,S^2,Time)) 
  # perturbation to stage structure
    w_mu_F1 <- w_mu_F2 <- w_mu_Sfjw1 <- w_mu_Sfjw2 <- w_mu_Sfaw1 <- w_mu_Sfaw2 <- w_mu_Sfjh1 <- w_mu_Sfjh2 <- w_mu_Sfah1 <- w_mu_Sfah2 <- w_mu_Sfas <- w_mu_Sfjs  <-w_sd_F1 <- w_sd_F2 <- w_sd_Sfjw1 <- w_sd_Sfjw2 <- w_sd_Sfaw1 <- w_sd_Sfaw2 <- w_sd_Sfjh1 <- w_sd_Sfjh2 <- w_sd_Sfah1 <- w_sd_Sfah2 <- w_sd_Sfas <- w_sd_Sfjs  <- 
                          w_mu_Smjw1 <- w_mu_Smjw2 <- w_mu_Smaw1 <- w_mu_Smaw2 <- w_mu_Smjh1 <- w_mu_Smjh2 <- w_mu_Smah1 <- w_mu_Smah2 <- w_mu_Smas <- w_mu_Smjs                       <- w_sd_Smjw1 <- w_sd_Smjw2 <- w_sd_Smaw1 <- w_sd_Smaw2 <- w_sd_Smjh1 <- w_sd_Smjh2 <- w_sd_Smah1 <- w_sd_Smah2 <- w_sd_Smas <- w_sd_Smjs  <- array(0,dim=c(S,S,S,Time+1)) 
  for (i in 1:Time){
    for(k in sp){ # manually change species
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s =  refSfj_s[j,i,k],
        Sfa_s =  refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s =  refSmj_s[j,i,k],
        Sma_s =  refSma_s[j,i,k],
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      mat_elements <- sapply(matrix.elements,eval,vr_list)
      A <- matrix(as.numeric(mat_elements[]),nrow=4,byrow=T)
      
      for (m in 1:S){
        for (n in 1:S){
            C2F1[(S+1)*m-S,(S+1)*n-S,i]   <- refF1mu[j,k]     * dA_dF1[m,n]
            C2F2[(S+1)*m-S,(S+1)*n-S,i]   <- refF2mu[j,k]     * dA_dF2[m,n]
          C2Sfjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n]
          C2Sfjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n]
          C2Sfaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w1[j,k] * dA_dSfaw1[m,n]
          C2Sfaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w2[j,k] * dA_dSfaw2[m,n]
          C2Sfjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n]
          C2Sfjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n]
          C2Sfah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h1[j,k] * dA_dSfah1[m,n]
          C2Sfah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h2[j,k] * dA_dSfah2[m,n]
           C2Sfas[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_s[j,k]  * dA_dSfas[m,n]
           C2Sfjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_s[j,k]  * dA_dSfjs[m,n]

          C3F1[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF1[j,i,k]     - refF1mu[j,k]    ) * dA_dF1[m,n]
          C3F2[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF2[j,i,k]     - refF2mu[j,k]    ) * dA_dF2[m,n]
          C3Sfjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n]
          C3Sfjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n]
          C3Sfaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n]
          C3Sfaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n]
          C3Sfjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n]
          C3Sfjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n]
          C3Sfah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n]
          C3Sfah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n]
          C3Sfas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfa_s[j,i,k]  - refSfamu_s[j,k] ) * dA_dSfas[m,n]
          C3Sfjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfj_s[j,i,k]  - refSfjmu_s[j,k] ) * dA_dSfjs[m,n]
          
          C2Smjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n]
          C2Smjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n]
          C2Smaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w1[j,k] * dA_dSmaw1[m,n]
          C2Smaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w2[j,k] * dA_dSmaw2[m,n]
          C2Smjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n]
          C2Smjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n]
          C2Smah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h1[j,k] * dA_dSmah1[m,n]
          C2Smah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h2[j,k] * dA_dSmah2[m,n]
          C2Smas[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_s[j,k]  * dA_dSmas[m,n]
          C2Smjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_s[j,k]  * dA_dSmjs[m,n]
          
          C3Smjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n]
          C3Smjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n]
          C3Smaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n]
          C3Smaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n]
          C3Smjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n]
          C3Smjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n]
          C3Smah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n]
          C3Smah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n]
          C3Smas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSma_s[j,i,k]  - refSmamu_s[j,k] ) * dA_dSmas[m,n]
          C3Smjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSmj_s[j,i,k]  - refSmjmu_s[j,k] ) * dA_dSmjs[m,n]
          
          
          K <- I - refn[,1,j,i+1,k]%*%t(e)  # intermediate steps
          B <- K %*% A / lam_realref[j,i,k]
          
          gF1_mu <-  K %*%     C2F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_mu <-  K %*%     C2F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfjw1_mu <-  K %*%   C2Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfjw2_mu <-  K %*%   C2Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfaw1_mu <-  K %*%   C2Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfaw2_mu <-  K %*%   C2Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfjh1_mu <-  K %*%   C2Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfjh2_mu <-  K %*%   C2Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfah1_mu <-  K %*%   C2Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
        gSfah2_mu <-  K %*%   C2Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfas_mu <-  K %*%    C2Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfjs_mu <-  K %*%    C2Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
         gF1_sig <-  K %*%     C3F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gF2_sig <-  K %*%     C3F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfjw1_sig <-  K %*%   C3Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfjw2_sig <-  K %*%   C3Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfaw1_sig <-  K %*%   C3Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfaw2_sig <-  K %*%   C3Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfjh1_sig <-  K %*%   C3Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfjh2_sig <-  K %*%   C3Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfah1_sig <-  K %*%   C3Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfah2_sig <-  K %*%   C3Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfas_sig <-  K %*%    C3Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSfjs_sig <-  K %*%    C3Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         
         gSmjw1_mu <-  K %*%   C2Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjw2_mu <-  K %*%   C2Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmaw1_mu <-  K %*%   C2Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmaw2_mu <-  K %*%   C2Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjh1_mu <-  K %*%   C2Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjh2_mu <-  K %*%   C2Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmah1_mu <-  K %*%   C2Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmah2_mu <-  K %*%   C2Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmas_mu <-  K %*%    C2Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjs_mu <-  K %*%    C2Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         
         gSmjw1_sig <-  K %*%   C3Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjw2_sig <-  K %*%   C3Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmaw1_sig <-  K %*%   C3Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmaw2_sig <-  K %*%   C3Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjh1_sig <-  K %*%   C3Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjh2_sig <-  K %*%   C3Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmah1_sig <-  K %*%   C3Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmah2_sig <-  K %*%   C3Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmas_sig <-  K %*%    C3Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         gSmjs_sig <-  K %*%    C3Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
         
             w_mu_F1[,m,n,i+1]  <- B %*%  w_mu_F1[,m,n,i] +    gF1_mu  
             w_mu_F2[,m,n,i+1]  <- B %*%  w_mu_F2[,m,n,i] +    gF2_mu  
           w_mu_Sfjw1[,m,n,i+1]  <- B %*% w_mu_Sfjw1[,m,n,i] +  gSfjw1_mu  
           w_mu_Sfjw2[,m,n,i+1]  <- B %*% w_mu_Sfjw2[,m,n,i] +  gSfjw2_mu  
           w_mu_Sfaw1[,m,n,i+1]  <- B %*% w_mu_Sfaw1[,m,n,i] +  gSfaw1_mu  
           w_mu_Sfaw2[,m,n,i+1]  <- B %*% w_mu_Sfaw2[,m,n,i] +  gSfaw2_mu  
           w_mu_Sfjh1[,m,n,i+1]  <- B %*% w_mu_Sfjh1[,m,n,i] +  gSfjh1_mu  
           w_mu_Sfjh2[,m,n,i+1]  <- B %*% w_mu_Sfjh2[,m,n,i] +  gSfjh2_mu  
           w_mu_Sfah1[,m,n,i+1]  <- B %*% w_mu_Sfah1[,m,n,i] +  gSfah1_mu  
           w_mu_Sfah2[,m,n,i+1]  <- B %*% w_mu_Sfah2[,m,n,i] +  gSfah2_mu  
            w_mu_Sfas[,m,n,i+1]  <- B %*% w_mu_Sfas[,m,n,i] +   gSfas_mu  
            w_mu_Sfjs[,m,n,i+1]  <- B %*% w_mu_Sfjs[,m,n,i] +   gSfjs_mu  
         
            w_sd_F1[,m,n,i+1]   <- B %*%  w_sd_F1[,m,n,i] +    gF1_sig  
            w_sd_F2[,m,n,i+1]   <- B %*%  w_sd_F2[,m,n,i] +    gF2_sig  
            w_sd_Sfjw1[,m,n,i+1]  <- B %*% w_sd_Sfjw1[,m,n,i] +  gSfjw1_sig  
            w_sd_Sfjw2[,m,n,i+1]  <- B %*% w_sd_Sfjw2[,m,n,i] +  gSfjw2_sig  
            w_sd_Sfaw1[,m,n,i+1]  <- B %*% w_sd_Sfaw1[,m,n,i] +  gSfaw1_sig  
            w_sd_Sfaw2[,m,n,i+1]  <- B %*% w_sd_Sfaw2[,m,n,i] +  gSfaw2_sig  
            w_sd_Sfjh1[,m,n,i+1]  <- B %*% w_sd_Sfjh1[,m,n,i] +  gSfjh1_sig  
            w_sd_Sfjh2[,m,n,i+1]  <- B %*% w_sd_Sfjh2[,m,n,i] +  gSfjh2_sig  
            w_sd_Sfah1[,m,n,i+1]  <- B %*% w_sd_Sfah1[,m,n,i] +  gSfah1_sig  
            w_sd_Sfah2[,m,n,i+1]  <- B %*% w_sd_Sfah2[,m,n,i] +  gSfah2_sig  
            w_sd_Sfas[,m,n,i+1]   <- B %*% w_sd_Sfas[,m,n,i] +   gSfas_sig  
            w_sd_Sfjs[,m,n,i+1]   <- B %*% w_sd_Sfjs[,m,n,i] +   gSfjs_sig  
          
            w_mu_Smjw1[,m,n,i+1]  <- B %*% w_mu_Smjw1[,m,n,i] +  gSmjw1_mu  
            w_mu_Smjw2[,m,n,i+1]  <- B %*% w_mu_Smjw2[,m,n,i] +  gSmjw2_mu  
            w_mu_Smaw1[,m,n,i+1]  <- B %*% w_mu_Smaw1[,m,n,i] +  gSmaw1_mu  
            w_mu_Smaw2[,m,n,i+1]  <- B %*% w_mu_Smaw2[,m,n,i] +  gSmaw2_mu  
            w_mu_Smjh1[,m,n,i+1]  <- B %*% w_mu_Smjh1[,m,n,i] +  gSmjh1_mu  
            w_mu_Smjh2[,m,n,i+1]  <- B %*% w_mu_Smjh2[,m,n,i] +  gSmjh2_mu  
            w_mu_Smah1[,m,n,i+1]  <- B %*% w_mu_Smah1[,m,n,i] +  gSmah1_mu  
            w_mu_Smah2[,m,n,i+1]  <- B %*% w_mu_Smah2[,m,n,i] +  gSmah2_mu  
            w_mu_Smas[,m,n,i+1]  <- B %*% w_mu_Smas[,m,n,i] +   gSmas_mu  
            w_mu_Smjs[,m,n,i+1]  <- B %*% w_mu_Smjs[,m,n,i] +   gSmjs_mu  
            
            w_sd_Smjw1[,m,n,i+1]  <- B %*% w_sd_Smjw1[,m,n,i] +  gSmjw1_sig  
            w_sd_Smjw2[,m,n,i+1]  <- B %*% w_sd_Smjw2[,m,n,i] +  gSmjw2_sig  
            w_sd_Smaw1[,m,n,i+1]  <- B %*% w_sd_Smaw1[,m,n,i] +  gSmaw1_sig  
            w_sd_Smaw2[,m,n,i+1]  <- B %*% w_sd_Smaw2[,m,n,i] +  gSmaw2_sig  
            w_sd_Smjh1[,m,n,i+1]  <- B %*% w_sd_Smjh1[,m,n,i] +  gSmjh1_sig  
            w_sd_Smjh2[,m,n,i+1]  <- B %*% w_sd_Smjh2[,m,n,i] +  gSmjh2_sig  
            w_sd_Smah1[,m,n,i+1]  <- B %*% w_sd_Smah1[,m,n,i] +  gSmah1_sig  
            w_sd_Smah2[,m,n,i+1]  <- B %*% w_sd_Smah2[,m,n,i] +  gSmah2_sig  
            w_sd_Smas[,m,n,i+1]   <- B %*% w_sd_Smas[,m,n,i] +   gSmas_sig  
            w_sd_Smjs[,m,n,i+1]   <- B %*% w_sd_Smjs[,m,n,i] +   gSmjs_sig  
            
            # Equation 3 Koons et al. 2017, e^n_mu
            enF1mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F1[,m,n,i] / lam_realref[j,i,k] 
            enF2mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F2[,m,n,i] / lam_realref[j,i,k] 
            enSfjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
            enSfjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
            enSfawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
            enSfawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
            enSfjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
            enSfjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
            enSfahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah1[,m,n,i] / lam_realref[j,i,k] 
            enSfahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah2[,m,n,i] / lam_realref[j,i,k] 
            enSfasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfas[,m,n,i] / lam_realref[j,i,k] 
            enSfjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjs[,m,n,i] / lam_realref[j,i,k] 
            
            tot_enF1mu [j,i] <-  sum(sum(enF1mu [,,j,i]))
            tot_enF2mu [j,i] <-  sum(sum(enF2mu [,,j,i]))
            tot_enSfjwmu1[j,i] <- sum(sum(enSfjwmu1[,,j,i]))
            tot_enSfjwmu2[j,i] <- sum(sum(enSfjwmu2[,,j,i]))
            tot_enSfawmu1[j,i] <- sum(sum(enSfawmu1[,,j,i]))
            tot_enSfawmu2[j,i] <- sum(sum(enSfawmu2[,,j,i]))
            tot_enSfjhmu1[j,i] <- sum(sum(enSfjhmu1[,,j,i]))
            tot_enSfjhmu2[j,i] <- sum(sum(enSfjhmu2[,,j,i]))
            tot_enSfahmu1[j,i] <- sum(sum(enSfahmu1[,,j,i]))
            tot_enSfahmu2[j,i] <- sum(sum(enSfahmu2[,,j,i]))
            tot_enSfasmu[j,i] <-  sum(sum(enSfasmu[,,j,i]))
               
            enSmjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw1[,m,n,i] / lam_realref[j,i,k] 
            enSmjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw2[,m,n,i] / lam_realref[j,i,k] 
            enSmawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw1[,m,n,i] / lam_realref[j,i,k] 
            enSmawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw2[,m,n,i] / lam_realref[j,i,k] 
            enSmjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh1[,m,n,i] / lam_realref[j,i,k] 
            enSmjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh2[,m,n,i] / lam_realref[j,i,k] 
            enSmahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah1[,m,n,i] / lam_realref[j,i,k] 
            enSmahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah2[,m,n,i] / lam_realref[j,i,k] 
            enSmasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smas[,m,n,i] / lam_realref[j,i,k] 
            enSmjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjs[,m,n,i] / lam_realref[j,i,k] 
            
            tot_enSmjwmu1[j,i] <- sum(sum(enSmjwmu1[,,j,i]))
            tot_enSmjwmu2[j,i] <- sum(sum(enSmjwmu2[,,j,i]))
            tot_enSmawmu1[j,i] <- sum(sum(enSmawmu1[,,j,i]))
            tot_enSmawmu2[j,i] <- sum(sum(enSmawmu2[,,j,i]))
            tot_enSmjhmu1[j,i] <- sum(sum(enSmjhmu1[,,j,i]))
            tot_enSmjhmu2[j,i] <- sum(sum(enSmjhmu2[,,j,i]))
            tot_enSmahmu1[j,i] <- sum(sum(enSmahmu1[,,j,i]))
            tot_enSmahmu2[j,i] <- sum(sum(enSmahmu2[,,j,i]))
            tot_enSmasmu[j,i] <-  sum(sum(enSmasmu[,,j,i]))
            
            
                # Equation 3 Koons et al. 2017, e^n_sd
               enF1sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F1[,m,n,i] / lam_realref[j,i,k] 
               enF2sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F2[,m,n,i] / lam_realref[j,i,k] 
               enSfjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
               enSfjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
               enSfawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
               enSfawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
               enSfjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
               enSfjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
               enSfahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah1[,m,n,i] / lam_realref[j,i,k] 
               enSfahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah2[,m,n,i] / lam_realref[j,i,k] 
               enSfassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfas[,m,n,i] / lam_realref[j,i,k] 
               enSfjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfjs[,m,n,i] / lam_realref[j,i,k] 
               
                tot_enF1sd [j,i] <-  sum(sum(enF1sd [,,j,i]))
                tot_enF2sd [j,i] <-  sum(sum(enF2sd [,,j,i]))
               tot_enSfjwsd1[j,i] <- sum(sum(enSfjwsd1[,,j,i]))
               tot_enSfjwsd2[j,i] <- sum(sum(enSfjwsd2[,,j,i]))
               tot_enSfawsd1[j,i] <- sum(sum(enSfawsd1[,,j,i]))
               tot_enSfawsd2[j,i] <- sum(sum(enSfawsd2[,,j,i]))
               tot_enSfjhsd1[j,i] <- sum(sum(enSfjhsd1[,,j,i]))
               tot_enSfjhsd2[j,i] <- sum(sum(enSfjhsd2[,,j,i]))
               tot_enSfahsd1[j,i] <- sum(sum(enSfahsd1[,,j,i]))
               tot_enSfahsd2[j,i] <- sum(sum(enSfahsd2[,,j,i]))
               tot_enSfassd[j,i] <-  sum(sum(enSfassd[,,j,i]))
               tot_enSfjssd[j,i] <-  sum(sum(enSfjssd[,,j,i]))
               
               enSmjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw1[,m,n,i] / lam_realref[j,i,k] 
               enSmjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw2[,m,n,i] / lam_realref[j,i,k] 
               enSmawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw1[,m,n,i] / lam_realref[j,i,k] 
               enSmawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw2[,m,n,i] / lam_realref[j,i,k] 
               enSmjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh1[,m,n,i] / lam_realref[j,i,k] 
               enSmjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh2[,m,n,i] / lam_realref[j,i,k] 
               enSmahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah1[,m,n,i] / lam_realref[j,i,k] 
               enSmahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah2[,m,n,i] / lam_realref[j,i,k] 
               enSmassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smas[,m,n,i] / lam_realref[j,i,k] 
               enSmjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smjs[,m,n,i] / lam_realref[j,i,k] 
               
               tot_enSmjwsd1[j,i] <- sum(sum(enSmjwsd1[,,j,i]))
               tot_enSmjwsd2[j,i] <- sum(sum(enSmjwsd2[,,j,i]))
               tot_enSmawsd1[j,i] <- sum(sum(enSmawsd1[,,j,i]))
               tot_enSmawsd2[j,i] <- sum(sum(enSmawsd2[,,j,i]))
               tot_enSmjhsd1[j,i] <- sum(sum(enSmjhsd1[,,j,i]))
               tot_enSmjhsd2[j,i] <- sum(sum(enSmjhsd2[,,j,i]))
               tot_enSmahsd1[j,i] <- sum(sum(enSmahsd1[,,j,i]))
               tot_enSmahsd2[j,i] <- sum(sum(enSmahsd2[,,j,i]))
               tot_enSmassd[j,i] <-  sum(sum(enSmassd[,,j,i]))
               tot_enSmjssd[j,i] <-  sum(sum(enSmjssd[,,j,i]))
               
        }
      }
    }
  }
}



 avg_enF1mu  <- rowMeans( tot_enF1mu )
 avg_enF2mu  <- rowMeans( tot_enF2mu )
 avg_enSfjwmu1 <- rowMeans(tot_enSfjwmu1)
 avg_enSfjwmu2 <- rowMeans(tot_enSfjwmu2)
 avg_enSfawmu1 <- rowMeans(tot_enSfawmu1)
 avg_enSfawmu2 <- rowMeans(tot_enSfawmu2)
 avg_enSfjhmu1 <- rowMeans(tot_enSfjhmu1)
 avg_enSfjhmu2 <- rowMeans(tot_enSfjhmu2)
 avg_enSfahmu1 <- rowMeans(tot_enSfahmu1)
 avg_enSfahmu2 <- rowMeans(tot_enSfahmu2)
 avg_enSfasmu <- rowMeans( tot_enSfasmu)
 avg_enSfjsmu <- rowMeans( tot_enSfjsmu)
 avg_enSmjwmu1 <- rowMeans(tot_enSmjwmu1)
 avg_enSmjwmu2 <- rowMeans(tot_enSmjwmu2)
 avg_enSmawmu1 <- rowMeans(tot_enSmawmu1)
 avg_enSmawmu2 <- rowMeans(tot_enSmawmu2)
 avg_enSmjhmu1 <- rowMeans(tot_enSmjhmu1)
 avg_enSmjhmu2 <- rowMeans(tot_enSmjhmu2)
 avg_enSmahmu1 <- rowMeans(tot_enSmahmu1)
 avg_enSmahmu2 <- rowMeans(tot_enSmahmu2)
 avg_enSmasmu <- rowMeans( tot_enSmasmu)
 avg_enSmjsmu <- rowMeans( tot_enSmjsmu)
 
avg_enF1sd  <-  rowMeans( tot_enF1sd )

avg_enF2sd  <-  rowMeans( tot_enF2sd )
avg_enSfjwsd1 <- rowMeans(tot_enSfjwsd1)
avg_enSfjwsd2 <- rowMeans(tot_enSfjwsd2)
avg_enSfawsd1 <- rowMeans(tot_enSfawsd1)
avg_enSfawsd2 <- rowMeans(tot_enSfawsd2)
avg_enSfjhsd1 <- rowMeans(tot_enSfjhsd1)
avg_enSfjhsd2 <- rowMeans(tot_enSfjhsd2)
avg_enSfahsd1 <- rowMeans(tot_enSfahsd1)
avg_enSfahsd2 <- rowMeans(tot_enSfahsd2)
avg_enSfassd <- rowMeans( tot_enSfassd)
avg_enSfjssd <- rowMeans( tot_enSfjssd)

avg_enSmjwsd1 <- rowMeans(tot_enSmjwsd1)
avg_enSmjwsd2 <- rowMeans(tot_enSmjwsd2)
avg_enSmawsd1 <- rowMeans(tot_enSmawsd1)
avg_enSmawsd2 <- rowMeans(tot_enSmawsd2)
avg_enSmjhsd1 <- rowMeans(tot_enSmjhsd1)
avg_enSmjhsd2 <- rowMeans(tot_enSmjhsd2)
avg_enSmahsd1 <- rowMeans(tot_enSmahsd1)
avg_enSmahsd2 <- rowMeans(tot_enSmahsd2)
avg_enSmassd <- rowMeans( tot_enSmassd)
avg_enSmjssd <- rowMeans( tot_enSmjssd)

# Step 9: Calculate vital rate contributions to the difference in geometric mean rates of population growth between time periods. This is a function of 
# logged differences in mean of vital rates, logged differences in s.d. of  vital rates, as channeled through direct effects of perturbations to the   
# moments and indirect effects of perturbations to these moments channeled through changes in population structure over time.
cont_A_F1mu  <- cont_A_F2mu <- cont_A_Sfjmu_w1 <- cont_A_Sfjmu_w2 <- cont_A_Sfjmu_s <- cont_A_Sfjmu_h1 <- cont_A_Sfjmu_h2 <- cont_A_Sfamu_h1 <- cont_A_Sfamu_h2 <- cont_A_Sfamu_w1 <- cont_A_Sfamu_w2 <- cont_A_Sfamu_s <- 
cont_A_F1sd  <- cont_A_F2sd <- cont_A_Sfjsd_w1 <- cont_A_Sfjsd_w2 <- cont_A_Sfjsd_s <- cont_A_Sfjsd_h1 <- cont_A_Sfjsd_h2 <- cont_A_Sfasd_h1 <- cont_A_Sfasd_h2 <- cont_A_Sfasd_w1 <- cont_A_Sfasd_w2 <- cont_A_Sfasd_s <-
cont_n_F1mu  <- cont_n_F2mu <- cont_n_Sfjmu_w1 <- cont_n_Sfjmu_w2 <- cont_n_Sfjmu_s <- cont_n_Sfjmu_h1 <- cont_n_Sfjmu_h2 <- cont_n_Sfamu_h1 <- cont_n_Sfamu_h2 <- cont_n_Sfamu_w1 <- cont_n_Sfamu_w2 <- cont_n_Sfamu_s <- 
cont_n_F1sd  <- cont_n_F2sd <- cont_n_Sfjsd_w1 <- cont_n_Sfjsd_w2 <- cont_n_Sfjsd_s <- cont_n_Sfjsd_h1 <- cont_n_Sfjsd_h2 <- cont_n_Sfasd_h1 <- cont_n_Sfasd_h2 <- cont_n_Sfasd_w1 <- cont_n_Sfasd_w2 <- cont_n_Sfasd_s <- 
                               cont_A_Smjmu_w1 <- cont_A_Smjmu_w2 <- cont_A_Smjmu_s <- cont_A_Smjmu_h1 <- cont_A_Smjmu_h2 <- cont_A_Smamu_h1 <- cont_A_Smamu_h2 <- cont_A_Smamu_w1 <- cont_A_Smamu_w2 <- cont_A_Smamu_s <- 
                               cont_A_Smjsd_w1 <- cont_A_Smjsd_w2 <- cont_A_Smjsd_s <- cont_A_Smjsd_h1 <- cont_A_Smjsd_h2 <- cont_A_Smasd_h1 <- cont_A_Smasd_h2 <- cont_A_Smasd_w1 <- cont_A_Smasd_w2 <- cont_A_Smasd_s <-
                               cont_n_Smjmu_w1 <- cont_n_Smjmu_w2 <- cont_n_Smjmu_s <- cont_n_Smjmu_h1 <- cont_n_Smjmu_h2 <- cont_n_Smamu_h1 <- cont_n_Smamu_h2 <- cont_n_Smamu_w1 <- cont_n_Smamu_w2 <- cont_n_Smamu_s <- 
                               cont_n_Smjsd_w1 <- cont_n_Smjsd_w2 <- cont_n_Smjsd_s <- cont_n_Smjsd_h1 <- cont_n_Smjsd_h2 <- cont_n_Smasd_h1 <- cont_n_Smasd_h2 <- cont_n_Smasd_w1 <- cont_n_Smasd_w2 <- cont_n_Smasd_s <- matrix(NA,samples,1)

# Equation 3; Koons et al. 2017
for (j in 1:samples){
  for(k in sp){

          cont_A_F1mu[j] <-         logF1mudiff[j,k] *      avg_eAF1mu[j]       
          cont_A_F2mu[j] <-         logF2mudiff[j,k] *      avg_eAF2mu[j]       
      cont_A_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *  avg_eASfjmu_w1[j] 
      cont_A_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *  avg_eASfamu_w1[j] 
      cont_A_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *  avg_eASfjmu_h1[j]  
      cont_A_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *  avg_eASfamu_h1[j] 
      cont_A_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *  avg_eASfjmu_w2[j] 
      cont_A_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *  avg_eASfamu_w2[j] 
      cont_A_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *  avg_eASfjmu_h2[j] 
      cont_A_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *  avg_eASfamu_h2[j] 
       cont_A_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *   avg_eASfjmu_s[j] 
       cont_A_Sfamu_s[j] <-      logSfa_smudiff[j,k] *   avg_eASfamu_s[j]  
     
        cont_A_F1sd[j] <-            logF1sigdiff[j,k] *      avg_eAF1sd[j]       
        cont_A_F2sd[j] <-            logF2sigdiff[j,k] *      avg_eAF2sd[j]       
       cont_A_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_eASfjsd_w1[j] 
       cont_A_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_eASfasd_w1[j] 
       cont_A_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_eASfjsd_h1[j]  
       cont_A_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_eASfasd_h1[j] 
       cont_A_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_eASfjsd_w2[j] 
       cont_A_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_eASfasd_w2[j] 
       cont_A_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_eASfjsd_h2[j] 
       cont_A_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_eASfasd_h2[j] 
       cont_A_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *   avg_eASfjsd_s[j] 
       cont_A_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *   avg_eASfasd_s[j]  
        
      
       cont_n_F1mu[j] <-         logF1mudiff[j,k] *       avg_enF1mu  [j]   
       cont_n_F2mu[j] <-         logF2mudiff[j,k] *       avg_enF2mu  [j]   
       cont_n_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *   avg_enSfjwmu1[j] 
       cont_n_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *   avg_enSfjwmu2[j] 
       cont_n_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *   avg_enSfawmu1[j]  
       cont_n_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *   avg_enSfawmu2[j] 
       cont_n_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *   avg_enSfjhmu1[j] 
       cont_n_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *   avg_enSfjhmu2[j] 
       cont_n_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *   avg_enSfahmu1[j] 
       cont_n_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *   avg_enSfahmu2[j] 
       cont_n_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *    avg_enSfasmu [j]
       cont_n_Sfamu_s[j] <-      logSfa_smudiff[j,k] *    avg_enSfjsmu [j] 
       
       cont_n_F1sd[j] <-            logF1sigdiff[j,k] *   avg_enF1sd  [j]
       cont_n_F2sd[j] <-            logF2sigdiff[j,k] *   avg_enF2sd  [j]
       cont_n_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_enSfjwsd1[j]
       cont_n_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_enSfjwsd2[j]
       cont_n_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_enSfawsd1[j]
       cont_n_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_enSfawsd2[j]
       cont_n_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_enSfjhsd1[j]
       cont_n_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_enSfjhsd2[j]
       cont_n_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_enSfahsd1[j]
       cont_n_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_enSfahsd2[j]
       cont_n_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *  avg_enSfassd [j]
       cont_n_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *  avg_enSfjssd [j]
       ###
      
       cont_A_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *  avg_eASmjmu_w1[j] 
       cont_A_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *  avg_eASmamu_w1[j] 
       cont_A_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *  avg_eASmjmu_h1[j]  
       cont_A_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *  avg_eASmamu_h1[j] 
       cont_A_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *  avg_eASmjmu_w2[j] 
       cont_A_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *  avg_eASmamu_w2[j] 
       cont_A_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *  avg_eASmjmu_h2[j] 
       cont_A_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *  avg_eASmamu_h2[j] 
       cont_A_Smjmu_s[j] <-      logSmj_smudiff[j,k] *   avg_eASmjmu_s[j] 
       cont_A_Smamu_s[j] <-      logSma_smudiff[j,k] *   avg_eASmamu_s[j]  
       
       cont_A_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_eASmjsd_w1[j] 
       cont_A_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_eASmasd_w1[j] 
       cont_A_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_eASmjsd_h1[j]  
       cont_A_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_eASmasd_h1[j] 
       cont_A_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_eASmjsd_w2[j] 
       cont_A_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_eASmasd_w2[j] 
       cont_A_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_eASmjsd_h2[j] 
       cont_A_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_eASmasd_h2[j] 
       cont_A_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *   avg_eASmjsd_s[j] 
       cont_A_Smasd_s[j] <-       logSma_ssigdiff[j,k] *   avg_eASmasd_s[j]  
       
       cont_n_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *   avg_enSmjwmu1[j] 
       cont_n_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *   avg_enSmjwmu2[j] 
       cont_n_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *   avg_enSmawmu1[j]  
       cont_n_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *   avg_enSmawmu2[j] 
       cont_n_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *   avg_enSmjhmu1[j] 
       cont_n_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *   avg_enSmjhmu2[j] 
       cont_n_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *   avg_enSmahmu1[j] 
       cont_n_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *   avg_enSmahmu2[j] 
       cont_n_Smjmu_s[j] <-      logSmj_smudiff[j,k] *    avg_enSmasmu [j]
       cont_n_Smamu_s[j] <-      logSma_smudiff[j,k] *    avg_enSmjsmu [j] 
       
       cont_n_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_enSmjwsd1[j]
       cont_n_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_enSmjwsd2[j]
       cont_n_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_enSmawsd1[j]
       cont_n_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_enSmawsd2[j]
       cont_n_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_enSmjhsd1[j]
       cont_n_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_enSmjhsd2[j]
       cont_n_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_enSmahsd1[j]
       cont_n_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_enSmahsd2[j]
       cont_n_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *  avg_enSmassd [j]
       cont_n_Smasd_s[j] <-       logSma_ssigdiff[j,k] *  avg_enSmjssd [j]
  }
}

# Total effect of shifts in the mean vital rate (A_mu), its variance [A_sd], or the indirect effects of demographic rates channeled through shifts in the mean (n_mu) or variance (n_sd) population structure
totF1 <- cont_A_F1mu + cont_A_F1sd + cont_n_F1mu + cont_n_F1sd
totF2 <- cont_A_F2mu + cont_A_F2sd + cont_n_F2mu + cont_n_F2sd
totF  <- totF1 + totF2

tot_Sf_w_j_1 <- cont_A_Sfjmu_w1 + cont_A_Sfjsd_w1 + cont_n_Sfjmu_w1 + cont_n_Sfjsd_w1 
tot_Sf_w_j_2 <- cont_A_Sfjmu_w2 + cont_A_Sfjsd_w2 + cont_n_Sfjmu_w2 + cont_n_Sfjsd_w2
tot_Sf_2_j_1 <- cont_A_Sfjmu_s + cont_A_Sfjsd_s + cont_n_Sfjmu_s + cont_n_Sfjsd_s
tot_Sf_h_j_1 <- cont_A_Sfjmu_h1 + cont_A_Sfjsd_h1 + cont_n_Sfjmu_h1 + cont_n_Sfjsd_h1
tot_Sf_h_j_2 <- cont_A_Sfjmu_h2 + cont_A_Sfjsd_h2 + cont_n_Sfjmu_h2 + cont_n_Sfjsd_h2
tot_Sf_h_a_1 <- cont_A_Sfamu_h1 + cont_A_Sfasd_h1 + cont_n_Sfamu_h1 + cont_n_Sfasd_h1
tot_Sf_h_a_2 <- cont_A_Sfamu_h2 + cont_A_Sfasd_h2 + cont_n_Sfamu_h2 + cont_n_Sfasd_h2
tot_Sf_w_a_1 <- cont_A_Sfamu_w1 + cont_A_Sfasd_w1 + cont_n_Sfamu_w1 + cont_n_Sfasd_w1
tot_Sf_w_a_2 <- cont_A_Sfamu_w2 + cont_A_Sfasd_w2 + cont_n_Sfamu_w2 + cont_n_Sfasd_w2
tot_Sf_2_2_1 <- cont_A_Sfamu_s + cont_A_Sfasd_s + cont_n_Sfamu_s + cont_n_Sfasd_s

tot_Sm_w_j_1 <- cont_A_Smjmu_w1 + cont_A_Smjsd_w1 + cont_n_Smjmu_w1 + cont_n_Smjsd_w1 
tot_Sm_w_j_2 <- cont_A_Smjmu_w2 + cont_A_Smjsd_w2 + cont_n_Smjmu_w2 + cont_n_Smjsd_w2
tot_Sm_2_j_1 <- cont_A_Smjmu_s + cont_A_Smjsd_s + cont_n_Smjmu_s + cont_n_Smjsd_s
tot_Sm_h_j_1 <- cont_A_Smjmu_h1 + cont_A_Smjsd_h1 + cont_n_Smjmu_h1 + cont_n_Smjsd_h1
tot_Sm_h_j_2 <- cont_A_Smjmu_h2 + cont_A_Smjsd_h2 + cont_n_Smjmu_h2 + cont_n_Smjsd_h2
tot_Sm_h_a_1 <- cont_A_Smamu_h1 + cont_A_Smasd_h1 + cont_n_Smamu_h1 + cont_n_Smasd_h1
tot_Sm_h_a_2 <- cont_A_Smamu_h2 + cont_A_Smasd_h2 + cont_n_Smamu_h2 + cont_n_Smasd_h2
tot_Sm_w_a_1 <- cont_A_Smamu_w1 + cont_A_Smasd_w1 + cont_n_Smamu_w1 + cont_n_Smasd_w1
tot_Sm_w_a_2 <- cont_A_Smamu_w2 + cont_A_Smasd_w2 + cont_n_Smamu_w2 + cont_n_Smasd_w2
tot_Sm_2_2_1 <- cont_A_Smamu_s + cont_A_Smasd_s + cont_n_Smamu_s + cont_n_Smasd_s

cont_time_alaska_1 <- rbind.data.frame(
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'Total', value = 'Total', mean = mean(totF1      ), lower = quantile(totF1      ,probs = 0.05),upper = quantile(totF1      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'Total', value = 'Total', mean = mean(totF2      ), lower = quantile(totF2      ,probs = 0.05),upper = quantile(totF2      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_1), lower = quantile(tot_Sf_w_j_1,probs = 0.05),upper = quantile(tot_Sf_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_1), lower = quantile(tot_Sf_w_a_1,probs = 0.05),upper = quantile(tot_Sf_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_1), lower = quantile(tot_Sf_h_j_1,probs = 0.05),upper = quantile(tot_Sf_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_1), lower = quantile(tot_Sf_h_a_1,probs = 0.05),upper = quantile(tot_Sf_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_2), lower = quantile(tot_Sf_w_j_2,probs = 0.05),upper = quantile(tot_Sf_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_2), lower = quantile(tot_Sf_w_a_2,probs = 0.05),upper = quantile(tot_Sf_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_2), lower = quantile(tot_Sf_h_j_2,probs = 0.05),upper = quantile(tot_Sf_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_2), lower = quantile(tot_Sf_h_a_2,probs = 0.05),upper = quantile(tot_Sf_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_j_1), lower = quantile(tot_Sf_2_j_1,probs = 0.05),upper = quantile(tot_Sf_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_2_1), lower = quantile(tot_Sf_2_2_1,probs = 0.05),upper = quantile(tot_Sf_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'mu', mean = mean(cont_A_F1mu    ), lower = quantile(cont_A_F1mu    ,probs = 0.05),upper = quantile(cont_A_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'mu', mean = mean(cont_A_F2mu    ), lower = quantile(cont_A_F2mu    ,probs = 0.05),upper = quantile(cont_A_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w1), lower = quantile(cont_A_Sfjmu_w1,probs = 0.05),upper = quantile(cont_A_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w1), lower = quantile(cont_A_Sfamu_w1,probs = 0.05),upper = quantile(cont_A_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h1), lower = quantile(cont_A_Sfjmu_h1,probs = 0.05),upper = quantile(cont_A_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h1), lower = quantile(cont_A_Sfamu_h1,probs = 0.05),upper = quantile(cont_A_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w2), lower = quantile(cont_A_Sfjmu_w2,probs = 0.05),upper = quantile(cont_A_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w2), lower = quantile(cont_A_Sfamu_w2,probs = 0.05),upper = quantile(cont_A_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h2), lower = quantile(cont_A_Sfjmu_h2,probs = 0.05),upper = quantile(cont_A_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h2), lower = quantile(cont_A_Sfamu_h2,probs = 0.05),upper = quantile(cont_A_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_s ), lower = quantile(cont_A_Sfjmu_s ,probs = 0.05),upper = quantile(cont_A_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_s ), lower = quantile(cont_A_Sfamu_s ,probs = 0.05),upper = quantile(cont_A_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'sd', mean = mean(cont_A_F1sd    ), lower = quantile(cont_A_F1sd    ,probs = 0.05),upper = quantile(cont_A_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'sd', mean = mean(cont_A_F2sd    ), lower = quantile(cont_A_F2sd    ,probs = 0.05),upper = quantile(cont_A_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w1), lower = quantile(cont_A_Sfjsd_w1,probs = 0.05),upper = quantile(cont_A_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w1), lower = quantile(cont_A_Sfasd_w1,probs = 0.05),upper = quantile(cont_A_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h1), lower = quantile(cont_A_Sfjsd_h1,probs = 0.05),upper = quantile(cont_A_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h1), lower = quantile(cont_A_Sfasd_h1,probs = 0.05),upper = quantile(cont_A_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w2), lower = quantile(cont_A_Sfjsd_w2,probs = 0.05),upper = quantile(cont_A_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w2), lower = quantile(cont_A_Sfasd_w2,probs = 0.05),upper = quantile(cont_A_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h2), lower = quantile(cont_A_Sfjsd_h2,probs = 0.05),upper = quantile(cont_A_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h2), lower = quantile(cont_A_Sfasd_h2,probs = 0.05),upper = quantile(cont_A_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_s ), lower = quantile(cont_A_Sfjsd_s ,probs = 0.05),upper = quantile(cont_A_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_s ), lower = quantile(cont_A_Sfasd_s ,probs = 0.05),upper = quantile(cont_A_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'mu', mean = mean(cont_n_F1mu    ), lower = quantile(cont_n_F1mu    ,probs = 0.05),upper = quantile(cont_n_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'mu', mean = mean(cont_n_F2mu    ), lower = quantile(cont_n_F2mu    ,probs = 0.05),upper = quantile(cont_n_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w1), lower = quantile(cont_n_Sfjmu_w1,probs = 0.05),upper = quantile(cont_n_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w1), lower = quantile(cont_n_Sfamu_w1,probs = 0.05),upper = quantile(cont_n_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h1), lower = quantile(cont_n_Sfjmu_h1,probs = 0.05),upper = quantile(cont_n_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h1), lower = quantile(cont_n_Sfamu_h1,probs = 0.05),upper = quantile(cont_n_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w2), lower = quantile(cont_n_Sfjmu_w2,probs = 0.05),upper = quantile(cont_n_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w2), lower = quantile(cont_n_Sfamu_w2,probs = 0.05),upper = quantile(cont_n_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h2), lower = quantile(cont_n_Sfjmu_h2,probs = 0.05),upper = quantile(cont_n_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h2), lower = quantile(cont_n_Sfamu_h2,probs = 0.05),upper = quantile(cont_n_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_s ), lower = quantile(cont_n_Sfjmu_s ,probs = 0.05),upper = quantile(cont_n_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_s ), lower = quantile(cont_n_Sfamu_s ,probs = 0.05),upper = quantile(cont_n_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'sd', mean = mean(cont_n_F1sd    ), lower = quantile(cont_n_F1sd    ,probs = 0.05),upper = quantile(cont_n_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'sd', mean = mean(cont_n_F2sd    ), lower = quantile(cont_n_F2sd    ,probs = 0.05),upper = quantile(cont_n_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w1), lower = quantile(cont_n_Sfjsd_w1,probs = 0.05),upper = quantile(cont_n_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w1), lower = quantile(cont_n_Sfasd_w1,probs = 0.05),upper = quantile(cont_n_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h1), lower = quantile(cont_n_Sfjsd_h1,probs = 0.05),upper = quantile(cont_n_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h1), lower = quantile(cont_n_Sfasd_h1,probs = 0.05),upper = quantile(cont_n_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w2), lower = quantile(cont_n_Sfjsd_w2,probs = 0.05),upper = quantile(cont_n_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w2), lower = quantile(cont_n_Sfasd_w2,probs = 0.05),upper = quantile(cont_n_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h2), lower = quantile(cont_n_Sfjsd_h2,probs = 0.05),upper = quantile(cont_n_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h2), lower = quantile(cont_n_Sfasd_h2,probs = 0.05),upper = quantile(cont_n_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_s ), lower = quantile(cont_n_Sfjsd_s ,probs = 0.05),upper = quantile(cont_n_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_s ), lower = quantile(cont_n_Sfasd_s ,probs = 0.05),upper = quantile(cont_n_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_1), lower = quantile(tot_Sm_w_j_1,probs = 0.05),upper = quantile(tot_Sm_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_1), lower = quantile(tot_Sm_w_a_1,probs = 0.05),upper = quantile(tot_Sm_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_1), lower = quantile(tot_Sm_h_j_1,probs = 0.05),upper = quantile(tot_Sm_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_1), lower = quantile(tot_Sm_h_a_1,probs = 0.05),upper = quantile(tot_Sm_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_2), lower = quantile(tot_Sm_w_j_2,probs = 0.05),upper = quantile(tot_Sm_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_2), lower = quantile(tot_Sm_w_a_2,probs = 0.05),upper = quantile(tot_Sm_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_2), lower = quantile(tot_Sm_h_j_2,probs = 0.05),upper = quantile(tot_Sm_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_2), lower = quantile(tot_Sm_h_a_2,probs = 0.05),upper = quantile(tot_Sm_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_j_1), lower = quantile(tot_Sm_2_j_1,probs = 0.05),upper = quantile(tot_Sm_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_2_1), lower = quantile(tot_Sm_2_2_1,probs = 0.05),upper = quantile(tot_Sm_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w1), lower = quantile(cont_A_Smjmu_w1,probs = 0.05),upper = quantile(cont_A_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w1), lower = quantile(cont_A_Smamu_w1,probs = 0.05),upper = quantile(cont_A_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h1), lower = quantile(cont_A_Smjmu_h1,probs = 0.05),upper = quantile(cont_A_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h1), lower = quantile(cont_A_Smamu_h1,probs = 0.05),upper = quantile(cont_A_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w2), lower = quantile(cont_A_Smjmu_w2,probs = 0.05),upper = quantile(cont_A_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w2), lower = quantile(cont_A_Smamu_w2,probs = 0.05),upper = quantile(cont_A_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h2), lower = quantile(cont_A_Smjmu_h2,probs = 0.05),upper = quantile(cont_A_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h2), lower = quantile(cont_A_Smamu_h2,probs = 0.05),upper = quantile(cont_A_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_s ), lower = quantile(cont_A_Smjmu_s ,probs = 0.05),upper = quantile(cont_A_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_s ), lower = quantile(cont_A_Smamu_s ,probs = 0.05),upper = quantile(cont_A_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w1), lower = quantile(cont_A_Smjsd_w1,probs = 0.05),upper = quantile(cont_A_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w1), lower = quantile(cont_A_Smasd_w1,probs = 0.05),upper = quantile(cont_A_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h1), lower = quantile(cont_A_Smjsd_h1,probs = 0.05),upper = quantile(cont_A_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h1), lower = quantile(cont_A_Smasd_h1,probs = 0.05),upper = quantile(cont_A_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w2), lower = quantile(cont_A_Smjsd_w2,probs = 0.05),upper = quantile(cont_A_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w2), lower = quantile(cont_A_Smasd_w2,probs = 0.05),upper = quantile(cont_A_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h2), lower = quantile(cont_A_Smjsd_h2,probs = 0.05),upper = quantile(cont_A_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h2), lower = quantile(cont_A_Smasd_h2,probs = 0.05),upper = quantile(cont_A_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_s ), lower = quantile(cont_A_Smjsd_s ,probs = 0.05),upper = quantile(cont_A_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_s ), lower = quantile(cont_A_Smasd_s ,probs = 0.05),upper = quantile(cont_A_Smasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w1), lower = quantile(cont_n_Smjmu_w1,probs = 0.05),upper = quantile(cont_n_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w1), lower = quantile(cont_n_Smamu_w1,probs = 0.05),upper = quantile(cont_n_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h1), lower = quantile(cont_n_Smjmu_h1,probs = 0.05),upper = quantile(cont_n_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h1), lower = quantile(cont_n_Smamu_h1,probs = 0.05),upper = quantile(cont_n_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w2), lower = quantile(cont_n_Smjmu_w2,probs = 0.05),upper = quantile(cont_n_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w2), lower = quantile(cont_n_Smamu_w2,probs = 0.05),upper = quantile(cont_n_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h2), lower = quantile(cont_n_Smjmu_h2,probs = 0.05),upper = quantile(cont_n_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h2), lower = quantile(cont_n_Smamu_h2,probs = 0.05),upper = quantile(cont_n_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_s ), lower = quantile(cont_n_Smjmu_s ,probs = 0.05),upper = quantile(cont_n_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_s ), lower = quantile(cont_n_Smamu_s ,probs = 0.05),upper = quantile(cont_n_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w1), lower = quantile(cont_n_Smjsd_w1,probs = 0.05),upper = quantile(cont_n_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w1), lower = quantile(cont_n_Smasd_w1,probs = 0.05),upper = quantile(cont_n_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h1), lower = quantile(cont_n_Smjsd_h1,probs = 0.05),upper = quantile(cont_n_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h1), lower = quantile(cont_n_Smasd_h1,probs = 0.05),upper = quantile(cont_n_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w2), lower = quantile(cont_n_Smjsd_w2,probs = 0.05),upper = quantile(cont_n_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w2), lower = quantile(cont_n_Smasd_w2,probs = 0.05),upper = quantile(cont_n_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h2), lower = quantile(cont_n_Smjsd_h2,probs = 0.05),upper = quantile(cont_n_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h2), lower = quantile(cont_n_Smasd_h2,probs = 0.05),upper = quantile(cont_n_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_s ), lower = quantile(cont_n_Smjsd_s ,probs = 0.05),upper = quantile(cont_n_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_s ), lower = quantile(cont_n_Smasd_s ,probs = 0.05),upper = quantile(cont_n_Smasd_s ,probs = 0.95))
  
)
tot_fec <- totF
tot_fwhy <- tot_Sf_w_j_1 + tot_Sf_w_j_2
tot_fwah <- tot_Sf_w_a_1 + tot_Sf_w_a_2
tot_fssy <- tot_Sf_2_j_1
tot_fsas <- tot_Sf_2_2_1
tot_fhhy <- tot_Sf_h_j_1 + tot_Sf_h_j_2
tot_fhah <- tot_Sf_h_a_1 + tot_Sf_h_a_2
tot_mwhy <- tot_Sm_w_j_1 + tot_Sm_w_j_2
tot_mwah <- tot_Sm_w_a_1 + tot_Sm_w_a_2
tot_mssy <- tot_Sm_2_j_1
tot_msas <- tot_Sm_2_2_1
tot_mhhy <- tot_Sm_h_j_1 + tot_Sm_h_j_2
tot_mhah <- tot_Sm_h_a_1 + tot_Sm_h_a_2

cont_total_alaska_1 <- rbind.data.frame(
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'FEC', statistic = 'Total', value = 'Total', mean = mean(tot_fec),  lower = quantile(tot_fec,probs = 0.05),upper = quantile(tot_fec,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_fwhy), lower = quantile(tot_fwhy,probs = 0.05),upper = quantile(tot_fwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_fwah), lower = quantile(tot_fwah,probs = 0.05),upper = quantile(tot_fwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_fssy), lower = quantile(tot_fssy,probs = 0.05),upper = quantile(tot_fssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_fsas), lower = quantile(tot_fsas,probs = 0.05),upper = quantile(tot_fsas,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_fhhy), lower = quantile(tot_fhhy,probs = 0.05),upper = quantile(tot_fhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_fhah), lower = quantile(tot_fhah,probs = 0.05),upper = quantile(tot_fhah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_mwhy), lower = quantile(tot_mwhy,probs = 0.05),upper = quantile(tot_mwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_mwah), lower = quantile(tot_mwah,probs = 0.05),upper = quantile(tot_mwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_mssy), lower = quantile(tot_mssy,probs = 0.05),upper = quantile(tot_mssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_msas), lower = quantile(tot_msas,probs = 0.05),upper = quantile(tot_msas,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_mhhy), lower = quantile(tot_mhhy,probs = 0.05),upper = quantile(tot_mhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_mhah), lower = quantile(tot_mhah,probs = 0.05),upper = quantile(tot_mhah,probs = 0.95))
)
# elas_time_alaska_1 <- rbind.data.frame(
#   cbind.data.frame(type = 'Elasticity', trait = ' F1', statistic = 'A', value = 'mu', mean = mean(     avg_eAF1mu), lower = quantile(     avg_eAF1mu,probs = 0.05),upper = quantile(     avg_eAF1mu,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' F2', statistic = 'A', value = 'mu', mean = mean(     avg_eAF2mu), lower = quantile(     avg_eAF2mu,probs = 0.05),upper = quantile(     avg_eAF2mu,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean( avg_eASfjmu_w1), lower = quantile( avg_eASfjmu_w1,probs = 0.05),upper = quantile( avg_eASfjmu_w1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean( avg_eASfamu_w1), lower = quantile( avg_eASfamu_w1,probs = 0.05),upper = quantile( avg_eASfamu_w1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean( avg_eASfjmu_h1), lower = quantile( avg_eASfjmu_h1,probs = 0.05),upper = quantile( avg_eASfjmu_h1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean( avg_eASfamu_h1), lower = quantile( avg_eASfamu_h1,probs = 0.05),upper = quantile( avg_eASfamu_h1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean( avg_eASfjmu_w2), lower = quantile( avg_eASfjmu_w2,probs = 0.05),upper = quantile( avg_eASfjmu_w2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean( avg_eASfamu_w2), lower = quantile( avg_eASfamu_w2,probs = 0.05),upper = quantile( avg_eASfamu_w2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean( avg_eASfjmu_h2), lower = quantile( avg_eASfjmu_h2,probs = 0.05),upper = quantile( avg_eASfjmu_h2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean( avg_eASfamu_h2), lower = quantile( avg_eASfamu_h2,probs = 0.05),upper = quantile( avg_eASfamu_h2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(  avg_eASfjmu_s), lower = quantile(  avg_eASfjmu_s,probs = 0.05),upper = quantile(  avg_eASfjmu_s,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(  avg_eASfamu_s), lower = quantile(  avg_eASfamu_s,probs = 0.05),upper = quantile(  avg_eASfamu_s,probs = 0.95)),
#   
#   cbind.data.frame(type = 'Elasticity', trait = ' F1', statistic = 'A', value = 'sd', mean = mean(    avg_eAF1sd), lower = quantile(    avg_eAF1sd,probs = 0.05),upper = quantile(    avg_eAF1sd,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' F2', statistic = 'A', value = 'sd', mean = mean(    avg_eAF2sd), lower = quantile(    avg_eAF2sd,probs = 0.05),upper = quantile(    avg_eAF2sd,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(avg_eASfjsd_w1), lower = quantile(avg_eASfjsd_w1,probs = 0.05),upper = quantile(avg_eASfjsd_w1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(avg_eASfasd_w1), lower = quantile(avg_eASfasd_w1,probs = 0.05),upper = quantile(avg_eASfasd_w1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(avg_eASfjsd_h1), lower = quantile(avg_eASfjsd_h1,probs = 0.05),upper = quantile(avg_eASfjsd_h1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(avg_eASfasd_h1), lower = quantile(avg_eASfasd_h1,probs = 0.05),upper = quantile(avg_eASfasd_h1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(avg_eASfjsd_w2), lower = quantile(avg_eASfjsd_w2,probs = 0.05),upper = quantile(avg_eASfjsd_w2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(avg_eASfasd_w2), lower = quantile(avg_eASfasd_w2,probs = 0.05),upper = quantile(avg_eASfasd_w2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(avg_eASfjsd_h2), lower = quantile(avg_eASfjsd_h2,probs = 0.05),upper = quantile(avg_eASfjsd_h2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(avg_eASfasd_h2), lower = quantile(avg_eASfasd_h2,probs = 0.05),upper = quantile(avg_eASfasd_h2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean( avg_eASfjsd_s), lower = quantile( avg_eASfjsd_s,probs = 0.05),upper = quantile( avg_eASfjsd_s,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SA', statistic = 'A', value = 'sd', mean = mean( avg_eASfasd_s), lower = quantile( avg_eASfasd_s,probs = 0.05),upper = quantile( avg_eASfasd_s,probs = 0.95)),
#   
#   cbind.data.frame(type = 'Elasticity', trait = ' F1', statistic = 'n', value = 'mu', mean = mean(  avg_enF1mu), lower = quantile(  avg_enF1mu ,probs = 0.05),upper = quantile(  avg_enF1mu,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' F2', statistic = 'n', value = 'mu', mean = mean(  avg_enF2mu), lower = quantile(  avg_enF2mu ,probs = 0.05),upper = quantile(  avg_enF2mu,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(avg_enSjwmu1), lower = quantile(avg_enSjwmu1 ,probs = 0.05),upper = quantile(avg_enSjwmu1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(avg_enSjwmu2), lower = quantile(avg_enSjwmu2 ,probs = 0.05),upper = quantile(avg_enSjwmu2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(avg_enSawmu1), lower = quantile(avg_enSawmu1 ,probs = 0.05),upper = quantile(avg_enSawmu1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(avg_enSawmu2), lower = quantile(avg_enSawmu2 ,probs = 0.05),upper = quantile(avg_enSawmu2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(avg_enSjhmu1), lower = quantile(avg_enSjhmu1 ,probs = 0.05),upper = quantile(avg_enSjhmu1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(avg_enSjhmu2), lower = quantile(avg_enSjhmu2 ,probs = 0.05),upper = quantile(avg_enSjhmu2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(avg_enSahmu1), lower = quantile(avg_enSahmu1 ,probs = 0.05),upper = quantile(avg_enSahmu1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(avg_enSahmu2), lower = quantile(avg_enSahmu2 ,probs = 0.05),upper = quantile(avg_enSahmu2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean( avg_enSasmu), lower = quantile( avg_enSasmu ,probs = 0.05),upper = quantile( avg_enSasmu,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SA', statistic = 'n', value = 'mu', mean = mean( avg_enSjsmu), lower = quantile( avg_enSjsmu ,probs = 0.05),upper = quantile( avg_enSjsmu,probs = 0.95)),
#   
#   cbind.data.frame(type = 'Elasticity', trait = ' F1', statistic = 'n', value = 'sd', mean = mean(  avg_enF1sd), lower = quantile(  avg_enF1sd,probs = 0.05),upper = quantile(  avg_enF1sd,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' F2', statistic = 'n', value = 'sd', mean = mean(  avg_enF2sd), lower = quantile(  avg_enF2sd,probs = 0.05),upper = quantile(  avg_enF2sd,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(avg_enSjwsd1), lower = quantile(avg_enSjwsd1,probs = 0.05),upper = quantile(avg_enSjwsd1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(avg_enSjwsd2), lower = quantile(avg_enSjwsd2,probs = 0.05),upper = quantile(avg_enSjwsd2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(avg_enSawsd1), lower = quantile(avg_enSawsd1,probs = 0.05),upper = quantile(avg_enSawsd1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(avg_enSawsd2), lower = quantile(avg_enSawsd2,probs = 0.05),upper = quantile(avg_enSawsd2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(avg_enSjhsd1), lower = quantile(avg_enSjhsd1,probs = 0.05),upper = quantile(avg_enSjhsd1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(avg_enSjhsd2), lower = quantile(avg_enSjhsd2,probs = 0.05),upper = quantile(avg_enSjhsd2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(avg_enSahsd1), lower = quantile(avg_enSahsd1,probs = 0.05),upper = quantile(avg_enSahsd1,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(avg_enSahsd2), lower = quantile(avg_enSahsd2,probs = 0.05),upper = quantile(avg_enSahsd2,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean( avg_enSassd), lower = quantile( avg_enSassd,probs = 0.05),upper = quantile( avg_enSassd,probs = 0.95)),
#   cbind.data.frame(type = 'Elasticity', trait = ' SA', statistic = 'n', value = 'sd', mean = mean( avg_enSjssd), lower = quantile( avg_enSjssd,probs = 0.05),upper = quantile( avg_enSjssd,probs = 0.95))
# )

###########################################################################
# Second Comparison: Alaska
############################################################################

Time <- 20
refpi_ak <- refpi_no <- refpi_pr <- refF1 <- refF2 <- refSfj_w1 <- refSfa_w1 <- refSfj_w2 <- refSfa_w2  <- refSfj_s <- refSfa_s <- refSfj_h1 <- refSfa_h1 <- refSfj_h2 <- refSfa_h2  <- refSmj_w1 <- refSma_w1 <- refSmj_w2 <- refSma_w2  <- refSmj_s <- refSma_s <- refSmj_h1 <- refSma_h1 <- refSmj_h2 <- refSma_h2  <- lam_realref <- array(NA,dim = c(samples,Time,3))
refnf1   <- refnf2 <-refnm1 <- refnm2 <- matrix(NA,samples, 3)
refn     <- array(NA,dim=c(4,1,samples,Time+1,3))
Sfj_w1_reg <- Sfj_w2_reg <- Sfj_h1_reg <- Sfj_h2_reg <- Sfa_w1_reg <- Sfa_w2_reg <- Sfa_h1_reg <- Sfa_h2_reg <-Smj_w1_reg <- Smj_w2_reg <- Smj_h1_reg <- Smj_h2_reg <- Sma_w1_reg <- Sma_w2_reg <- Sma_h1_reg <- Sma_h2_reg <- array(NA,dim=c(60,samples,3))

# Annual vital rates
for (j in 1:samples){
  for(k in 1:n.region){
    for(t in 1:60){
      Sfj_w1_reg[t,j,k] <- Sfj_w1[t,j] * mu_psi[t,j,k]
      Sfa_w1_reg[t,j,k] <- Sfa_w1[t,j] * mu_psi[t,j,k]
      Sfj_w2_reg[t,j,k] <- Sfj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_w2_reg[t,j,k] <- Sfa_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Sfj_h1_reg[t,j,k] <- Sfj_h1[t,j] * mu_psi[t,j,k]
      Sfa_h1_reg[t,j,k] <- Sfa_h1[t,j] * mu_psi[t,j,k]
      Sfj_h2_reg[t,j,k] <- Sfj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_h2_reg[t,j,k] <- Sfa_h2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_w1_reg[t,j,k] <- Smj_w1[t,j] * mu_psi[t,j,k]
      Sma_w1_reg[t,j,k] <- Sma_w1[t,j] * mu_psi[t,j,k]
      Smj_w2_reg[t,j,k] <- Smj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sma_w2_reg[t,j,k] <- Sma_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_h1_reg[t,j,k] <- Smj_h1[t,j] * mu_psi[t,j,k]
      Sma_h1_reg[t,j,k] <- Sma_h1[t,j] * mu_psi[t,j,k]
      Smj_h2_reg[t,j,k] <- Smj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sma_h2_reg[t,j,k] <- Sma_h2[t,j] * (1 - mu_psi[t,j,k])
    }
    # Average vital rate between the starts of each time period
    refnf1[j,k] <- (nf1[sta3,j,k] + nf1[sta2,j,k]) / 2
    refnf2[j,k] <- (nf2[sta3,j,k] + nf2[sta2,j,k]) / 2
    refnm1[j,k] <- (nm1[sta3,j,k] + nm1[sta2,j,k]) / 2
    refnm2[j,k] <- (nm2[sta3,j,k] + nm2[sta2,j,k]) / 2
    
    refn[1,1,j,1,k] <- refnf1[j,k]
    refn[2,1,j,1,k] <- refnf2[j,k]
    
    refn[3,1,j,1,k] <- refnm1[j,k]
    refn[4,1,j,1,k] <- refnm2[j,k]
    
    for (i in 1:Time){
      refpi_ak[j,i,k] <-   (pi_ak[i+sta3-1,j,k] +   pi_ak[i+sta2-1,j,k]) / 2
      refpi_no[j,i,k] <-   (pi_no[i+sta3-1,j,k] +   pi_no[i+sta2-1,j,k]) / 2
      refpi_pr[j,i,k] <-   (pi_pr[i+sta3-1,j,k] +   pi_pr[i+sta2-1,j,k]) / 2
      
      refF1[j,i,k] <-   (F1[i+sta3-1,j,k] + F1[i+sta2-1,j,k]) / 2
      refF2[j,i,k] <-   (F2[i+sta3-1,j,k] + F2[i+sta2-1,j,k]) / 2
      
      refSfj_w1[j,i,k] <- ((Sfj_w1_reg[i+sta3-1,j,k] + Sfj_w1_reg[i+sta2-1,j,k]) / 2)
      refSfa_w1[j,i,k] <- ((Sfa_w1_reg[i+sta3-1,j,k] + Sfa_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_w2[j,i,k] <- ((Sfj_w2_reg[i+sta3-1,j,k] + Sfj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_w2[j,i,k] <- ((Sfa_w2_reg[i+sta3-1,j,k] + Sfa_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSfj_s[j,i,k]    <- (Sfj_s[i+sta3-1,j,k] +  Sfj_s[i+sta2-1,j,k]) / 2
      refSfa_s[j,i,k]    <- (Sfa_s[i+sta3-1,j,k] +  Sfa_s[i+sta2-1,j,k]) / 2
      
      refSfj_h1[j,i,k] <- ((Sfj_h1_reg[i+sta3-1,j,k] + Sfj_h1_reg[i+sta2-1,j,k]) / 2)
      refSfa_h1[j,i,k] <- ((Sfa_h1_reg[i+sta3-1,j,k] + Sfa_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_h2[j,i,k] <- ((Sfj_h2_reg[i+sta3-1,j,k] + Sfj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_h2[j,i,k] <- ((Sfa_h2_reg[i+sta3-1,j,k] + Sfa_h2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_w1[j,i,k] <- ((Smj_w1_reg[i+sta3-1,j,k] + Smj_w1_reg[i+sta2-1,j,k]) / 2)
      refSma_w1[j,i,k] <- ((Sma_w1_reg[i+sta3-1,j,k] + Sma_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_w2[j,i,k] <- ((Smj_w2_reg[i+sta3-1,j,k] + Smj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSma_w2[j,i,k] <- ((Sma_w2_reg[i+sta3-1,j,k] + Sma_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_s[j,i,k] <-    (Smj_s[i+sta3-1,j,k] +  Smj_s[i+sta2-1,j,k]) / 2
      refSma_s[j,i,k] <-    (Sma_s[i+sta3-1,j,k] +  Sma_s[i+sta2-1,j,k]) / 2
      
      refSmj_h1[j,i,k] <- ((Smj_h1_reg[i+sta3-1,j,k] + Smj_h1_reg[i+sta2-1,j,k]) / 2)
      refSma_h1[j,i,k] <- ((Sma_h1_reg[i+sta3-1,j,k] + Sma_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_h2[j,i,k] <- ((Smj_h2_reg[i+sta3-1,j,k] + Smj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSma_h2[j,i,k] <- ((Sma_h2_reg[i+sta3-1,j,k] + Sma_h2_reg[i+sta2-1,j,k]) / 2) 
      
      # Demographic projection matrix for each region
      A_AK <- matrix(c(
        0.5*refF1[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),0,0,
        
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),0,0,
        
        0.5*refF1[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),0,0,
        
        0,0,
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1]),
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1])
      ), nrow=4, byrow=TRUE)
      
      A_NO <- matrix(c(
        0.5*refF1[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 0,0,
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),0,0,
        
        0.5*refF1[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 0,0,
        
        0,0,
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2]),
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2])
      ), nrow=4, byrow=TRUE)
      
      A_PR <- matrix(c(
        0.5*refF1[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 0,0,
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),0,0,
        
        0.5*refF1[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 0,0,
        
        0,0,
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3]),
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3])
      ), nrow=4, byrow=TRUE)
      
      n_ak <- A_AK %*% refn[,,j,i,1]
      n_no <- A_NO %*% refn[,,j,i,2]
      n_pr <- A_PR %*% refn[,,j,i,3]
      
      lam_realref[j,i,1] <- sum( n_ak)
      lam_realref[j,i,2] <- sum( n_no)
      lam_realref[j,i,3] <- sum( n_pr)
      
      refn[,1,j,i+1,1] <-  n_ak/sum( n_ak) #store the proportionate abundances
      refn[,1,j,i+1,2] <-  n_no/sum( n_no) #store the proportionate abundances
      refn[,1,j,i+1,3] <-  n_pr/sum( n_pr) #store the proportionate abundances
    }
  }
}

# temporal means of the lower-level vital rates
refF1mu     <- apply(refF1 ,c(1,3),mean)
refF2mu     <- apply(refF2 ,c(1,3),mean)
refSfjmu_w1 <- apply(refSfj_w1,c(1,3),mean)
refSfamu_w1 <- apply(refSfa_w1,c(1,3),mean)
refSfjmu_w2 <- apply(refSfj_w2,c(1,3),mean)
refSfamu_w2 <- apply(refSfa_w2,c(1,3),mean)
refSfjmu_h1 <- apply(refSfj_h1,c(1,3),mean)
refSfamu_h1 <- apply(refSfa_h1,c(1,3),mean)
refSfjmu_h2 <- apply(refSfj_h2,c(1,3),mean)
refSfamu_h2 <- apply(refSfa_h2,c(1,3),mean)
refSfjmu_s  <- apply(refSfj_s,c(1,3),mean)
refSfamu_s  <- apply(refSfa_s,c(1,3),mean)
refSmjmu_w1 <- apply(refSmj_w1,c(1,3),mean)
refSmamu_w1 <- apply(refSma_w1,c(1,3),mean)
refSmjmu_w2 <- apply(refSmj_w2,c(1,3),mean)
refSmamu_w2 <- apply(refSma_w2,c(1,3),mean)
refSmjmu_h1 <- apply(refSmj_h1,c(1,3),mean)
refSmamu_h1 <- apply(refSma_h1,c(1,3),mean)
refSmjmu_h2 <- apply(refSmj_h2,c(1,3),mean)
refSmamu_h2 <- apply(refSma_h2,c(1,3),mean)
refSmjmu_s  <- apply(refSmj_s,c(1,3),mean)
refSmamu_s  <- apply(refSma_s,c(1,3),mean)

logF1mudiff      <- matrix(NA,samples,3)
logF2mudiff      <- matrix(NA,samples,3)
logSfj1_wmudiff  <- matrix(NA,samples,3)
logSfa1_wmudiff  <- matrix(NA,samples,3)
logSfj1_hmudiff  <- matrix(NA,samples,3)
logSfa1_hmudiff  <- matrix(NA,samples,3)
logSfj2_wmudiff  <- matrix(NA,samples,3)
logSfa2_wmudiff  <- matrix(NA,samples,3)
logSfj2_hmudiff  <- matrix(NA,samples,3)
logSfa2_hmudiff  <- matrix(NA,samples,3)
logSfj_smudiff   <- matrix(NA,samples,3)
logSfa_smudiff   <- matrix(NA,samples,3)

logSmj1_wmudiff  <- matrix(NA,samples,3)
logSma1_wmudiff  <- matrix(NA,samples,3)
logSmj1_hmudiff  <- matrix(NA,samples,3)
logSma1_hmudiff  <- matrix(NA,samples,3)
logSmj2_wmudiff  <- matrix(NA,samples,3)
logSma2_wmudiff  <- matrix(NA,samples,3)
logSmj2_hmudiff  <- matrix(NA,samples,3)
logSma2_hmudiff  <- matrix(NA,samples,3)
logSmj_smudiff   <- matrix(NA,samples,3)
logSma_smudiff   <- matrix(NA,samples,3)

logF1sigdiff     <- matrix(NA,samples,3)
logF2sigdiff     <- matrix(NA,samples,3)
logSfj1_wsigdiff <- matrix(NA,samples,3)
logSfa1_wsigdiff <- matrix(NA,samples,3)
logSfj1_hsigdiff <- matrix(NA,samples,3)
logSfa1_hsigdiff <- matrix(NA,samples,3)
logSfj2_wsigdiff <- matrix(NA,samples,3)
logSfa2_wsigdiff <- matrix(NA,samples,3)
logSfj2_hsigdiff <- matrix(NA,samples,3)
logSfa2_hsigdiff <- matrix(NA,samples,3)
logSfj_ssigdiff  <- matrix(NA,samples,3)
logSfa_ssigdiff  <- matrix(NA,samples,3)

logSmj1_wsigdiff <- matrix(NA,samples,3)
logSma1_wsigdiff <- matrix(NA,samples,3)
logSmj1_hsigdiff <- matrix(NA,samples,3)
logSma1_hsigdiff <- matrix(NA,samples,3)
logSmj2_wsigdiff <- matrix(NA,samples,3)
logSma2_wsigdiff <- matrix(NA,samples,3)
logSmj2_hsigdiff <- matrix(NA,samples,3)
logSma2_hsigdiff <- matrix(NA,samples,3)
logSmj_ssigdiff  <- matrix(NA,samples,3)
logSma_ssigdiff  <- matrix(NA,samples,3)

######################################################################################
# Step 7: Calculate differences on log scale in lower-level vital rate means 
# and standard deviations between time periods.
#######################################################################################

for (j in 1:samples){
  for(k in 1:n.region){      
    # Equation 3 Koons et al. 2017, log u_a - log u_b
    logF1mudiff[j,k]     <-        log(mean(F1[sta3:end3,j,k])) -        log(mean(F1[sta2:end2,j,k]))
    logF2mudiff[j,k]     <-        log(mean(F2[sta3:end3,j,k])) -        log(mean(F2[sta2:end2,j,k]))
    logSfj1_wmudiff[j,k] <-      log(mean(Sfj_w1_reg[sta3:end3,j,k]))-  log(mean(Sfj_w1_reg[sta2:end2,j,k])) 
    logSfa1_wmudiff[j,k] <-      log(mean(Sfa_w1_reg[sta3:end3,j,k]))-  log(mean(Sfa_w1_reg[sta2:end2,j,k])) 
    logSfj1_hmudiff[j,k] <-      log(mean(Sfj_h1_reg[sta3:end3,j,k]))-  log(mean(Sfj_h1_reg[sta2:end2,j,k]))
    logSfa1_hmudiff[j,k] <-      log(mean(Sfa_h1_reg[sta3:end3,j,k]))-  log(mean(Sfa_h1_reg[sta2:end2,j,k]))
    logSfj2_wmudiff[j,k] <-      log(mean(Sfj_w2_reg[sta3:end3,j,k]))-  log(mean(Sfj_w2_reg[sta2:end2,j,k])) 
    logSfa2_wmudiff[j,k] <-      log(mean(Sfa_w2_reg[sta3:end3,j,k]))-  log(mean(Sfa_w2_reg[sta2:end2,j,k])) 
    logSfj2_hmudiff[j,k] <-      log(mean(Sfj_h2_reg[sta3:end3,j,k]))-  log(mean(Sfj_h2_reg[sta2:end2,j,k]))
    logSfa2_hmudiff[j,k] <-      log(mean(Sfa_h2_reg[sta3:end3,j,k]))-  log(mean(Sfa_h2_reg[sta2:end2,j,k]))
    logSfj_smudiff[j,k]  <-      log(mean(Sfj2[sta3:end3,j,k])) -      log(mean(Sfj2[sta2:end2,j,k]))
    logSfa_smudiff[j,k]  <-      log(mean(Sfa2[sta3:end3,j,k])) -      log(mean(Sfa2[sta2:end2,j,k]))
    
    logSmj1_wmudiff[j,k] <-      log(mean(Smj_w1_reg[sta3:end3,j,k]))-  log(mean(Smj_w1_reg[sta2:end2,j,k])) 
    logSma1_wmudiff[j,k] <-      log(mean(Sma_w1_reg[sta3:end3,j,k]))-  log(mean(Sma_w1_reg[sta2:end2,j,k])) 
    logSmj1_hmudiff[j,k] <-      log(mean(Smj_h1_reg[sta3:end3,j,k]))-  log(mean(Smj_h1_reg[sta2:end2,j,k]))
    logSma1_hmudiff[j,k] <-      log(mean(Sma_h1_reg[sta3:end3,j,k]))-  log(mean(Sma_h1_reg[sta2:end2,j,k]))
    logSmj2_wmudiff[j,k] <-      log(mean(Smj_w2_reg[sta3:end3,j,k]))-  log(mean(Smj_w2_reg[sta2:end2,j,k])) 
    logSma2_wmudiff[j,k] <-      log(mean(Sma_w2_reg[sta3:end3,j,k]))-  log(mean(Sma_w2_reg[sta2:end2,j,k])) 
    logSmj2_hmudiff[j,k] <-      log(mean(Smj_h2_reg[sta3:end3,j,k]))-  log(mean(Smj_h2_reg[sta2:end2,j,k]))
    logSma2_hmudiff[j,k] <-      log(mean(Sma_h2_reg[sta3:end3,j,k]))-  log(mean(Sma_h2_reg[sta2:end2,j,k]))
    logSmj_smudiff[j,k]  <-      log(mean(Smj2[sta3:end3,j,k])) -      log(mean(Smj2[sta2:end2,j,k]))
    logSma_smudiff[j,k]  <-      log(mean(Sma2[sta3:end3,j,k])) -      log(mean(Sma2[sta2:end2,j,k]))
    
    # Equation 3 Koons et al. 2017, log sig_a - log sig_b
    logF1sigdiff[j,k]     <-   log(sqrt(var(F1[sta3:end3,j,k]))) -   log(sqrt(var(F1[sta2:end2,j,k])))
    logF2sigdiff[j,k]     <-   log(sqrt(var(F2[sta3:end3,j,k]))) -   log(sqrt(var(F2[sta2:end2,j,k])))
    logSfj_ssigdiff[j,k]  <-   log(sqrt(var(Sfj2[sta3:end3,j,k]))) - log(sqrt(var(Sfj2[sta2:end2,j,k])))
    logSfa_ssigdiff[j,k]  <-   log(sqrt(var(Sfa2[sta3:end3,j,k]))) - log(sqrt(var(Sfa2[sta2:end2,j,k])))
    logSfj1_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_w1_reg[sta2:end2,j,k])))
    logSfa1_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_w1_reg[sta2:end2,j,k])))
    logSfj1_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_h1_reg[sta2:end2,j,k])))
    logSfa1_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_h1_reg[sta2:end2,j,k])))
    logSfj2_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_w2_reg[sta2:end2,j,k])))
    logSfa2_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_w2_reg[sta2:end2,j,k])))
    logSfj2_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_h2_reg[sta2:end2,j,k])))
    logSfa2_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_h2_reg[sta2:end2,j,k])))
    
    logSmj_ssigdiff[j,k] <- log(sqrt(var(Smj2[sta3:end3,j,k]))) - log(sqrt(var(Smj2[sta2:end2,j,k])))
    logSma_ssigdiff[j,k] <- log(sqrt(var(Sma2[sta3:end3,j,k]))) - log(sqrt(var(Sma2[sta2:end2,j,k])))
    logSmj1_wsigdiff[j,k] <-   log(sqrt(var(Smj_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_w1_reg[sta2:end2,j,k])))
    logSma1_wsigdiff[j,k] <-   log(sqrt(var(Sma_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_w1_reg[sta2:end2,j,k])))
    logSmj1_hsigdiff[j,k] <-   log(sqrt(var(Smj_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_h1_reg[sta2:end2,j,k])))
    logSma1_hsigdiff[j,k] <-   log(sqrt(var(Sma_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_h1_reg[sta2:end2,j,k])))
    logSmj2_wsigdiff[j,k] <-   log(sqrt(var(Smj_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_w2_reg[sta2:end2,j,k])))
    logSma2_wsigdiff[j,k] <-   log(sqrt(var(Sma_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_w2_reg[sta2:end2,j,k])))
    logSmj2_hsigdiff[j,k] <-   log(sqrt(var(Smj_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_h2_reg[sta2:end2,j,k])))
    logSma2_hsigdiff[j,k] <-   log(sqrt(var(Sma_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_h2_reg[sta2:end2,j,k])))
  }
}

# Step 8: Compute real-time elasticities, evaluated at the reference mean         
# Real-time elasticities for the direct effects of change in the lower-level vital rates.

S <- 4  # dimension of projection matrix
sp = 1  # Region 

eAF1mu  <- eAF2mu <- eASfjmu_w1 <- eASfjmu_w2 <- eASfjmu_s <- eASfjmu_h1 <- eASfjmu_h2 <- eASfamu_h1 <- eASfamu_h2 <- eASfamu_w1 <- eASfamu_w2 <- eASfamu_s <- 
  eASmjmu_w1 <- eASmjmu_w2 <- eASmjmu_s <- eASmjmu_h1 <- eASmjmu_h2 <- eASmamu_h1 <- eASmamu_h2 <- eASmamu_w1 <- eASmamu_w2 <- eASmamu_s <- 
  eAF1sd  <- eAF2sd <- eASfjsd_w1 <- eASfjsd_w2 <- eASfjsd_s <- eASfjsd_h1 <- eASfjsd_h2 <- eASfasd_h1 <- eASfasd_h2 <- eASfasd_w1 <- eASfasd_w2 <- eASfasd_s <- 
  eASmjsd_w1 <- eASmjsd_w2 <- eASmjsd_s <- eASmjsd_h1 <- eASmjsd_h2 <- eASmasd_h1 <- eASmasd_h2 <- eASmasd_w1 <- eASmasd_w2 <- eASmasd_s <-array(NA,dim=c(S,S,samples,Time))

tot_eAF1mu  <- tot_eAF2mu <- tot_eASfjmu_w1 <- tot_eASfjmu_w2 <- tot_eASfjmu_s <- tot_eASfjmu_h1 <- tot_eASfjmu_h2 <- tot_eASfamu_h1 <- tot_eASfamu_h2 <- tot_eASfamu_w1 <- tot_eASfamu_w2 <- tot_eASfamu_s <- 
  tot_eASmjmu_w1 <- tot_eASmjmu_w2 <- tot_eASmjmu_s <- tot_eASmjmu_h1 <- tot_eASmjmu_h2 <- tot_eASmamu_h1 <- tot_eASmamu_h2 <- tot_eASmamu_w1 <- tot_eASmamu_w2 <- tot_eASmamu_s <-
  tot_eAF1sd  <- tot_eAF2sd <- tot_eASfjsd_w1 <- tot_eASfjsd_w2 <- tot_eASfjsd_s <- tot_eASfjsd_h1 <- tot_eASfjsd_h2 <- tot_eASfasd_h1 <- tot_eASfasd_h2 <- tot_eASfasd_w1 <- tot_eASfasd_w2 <- tot_eASfasd_s  <-
  tot_eASmjsd_w1 <- tot_eASmjsd_w2 <- tot_eASmjsd_s <- tot_eASmjsd_h1 <- tot_eASmjsd_h2 <- tot_eASmasd_h1 <- tot_eASmasd_h2 <- tot_eASmasd_w1 <- tot_eASmasd_w2 <- tot_eASmasd_s  <-matrix(NA,samples,Time)


for (j in 1:samples){
  for (i in 1:Time){
    for(k in sp){ # manually change region
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s = refSfj_s[j,i,k],
        Sfa_s = refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s = refSmj_s[j,i,k],
        Sma_s = refSma_s[j,i,k],
        
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
    
      for (m in 1:S){
        for (n in 1:S){
          # Equation 3 Koons et al. 2017, e^A_mu
          ##########################################################
          # Means
          eAF1mu[m,n,j,i] <- refF1mu[j,k] * dA_dF1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2mu[m,n,j,i] <- refF2mu[j,k] * dA_dF2[m,n] * refn[n,1,j,i,k] /  lam_realref[j,i,k]
          
          tot_eAF2mu[j,i] <- sum(sum(eAF2mu[,,j,i])) 
          tot_eAF1mu[j,i] <- sum(sum(eAF1mu[,,j,i])) 
          
          eASfjmu_w1[m,n,j,i] <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w1[m,n,j,i] <- refSfamu_w1[j,k] * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_w2[m,n,j,i] <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w2[m,n,j,i] <- refSfamu_w2[j,k] * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w1[m,n,j,i] <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w1[m,n,j,i] <- refSmamu_w1[j,k] * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w2[m,n,j,i] <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w2[m,n,j,i] <- refSmamu_w2[j,k] * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_w1[j,i] <-sum(sum(eASfjmu_w1[,,j,i]))
          tot_eASfamu_w1[j,i] <-sum(sum(eASfamu_w1[,,j,i]))
          tot_eASfjmu_w2[j,i] <-sum(sum(eASfjmu_w2[,,j,i]))
          tot_eASfamu_w2[j,i] <-sum(sum(eASfamu_w2[,,j,i]))
          tot_eASmjmu_w1[j,i] <-sum(sum(eASmjmu_w1[,,j,i]))
          tot_eASmamu_w1[j,i] <-sum(sum(eASmamu_w1[,,j,i]))
          tot_eASmjmu_w2[j,i] <-sum(sum(eASmjmu_w2[,,j,i]))
          tot_eASmamu_w2[j,i] <-sum(sum(eASmamu_w2[,,j,i]))
          
          eASfjmu_h1[m,n,j,i] <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h1[m,n,j,i] <- refSfamu_h1[j,k] * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_h2[m,n,j,i] <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h2[m,n,j,i] <- refSfamu_h2[j,k] * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h1[m,n,j,i] <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h1[m,n,j,i] <- refSmamu_h1[j,k] * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h2[m,n,j,i] <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h2[m,n,j,i] <- refSmamu_h2[j,k] * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k] 
          
          tot_eASfjmu_h1[j,i] <-sum(sum(eASfjmu_h1[,,j,i]))
          tot_eASfamu_h1[j,i] <-sum(sum(eASfamu_h1[,,j,i]))
          tot_eASfjmu_h2[j,i] <-sum(sum(eASfjmu_h2[,,j,i]))
          tot_eASfamu_h2[j,i] <-sum(sum(eASfamu_h2[,,j,i]))
          tot_eASmjmu_h1[j,i] <-sum(sum(eASmjmu_h1[,,j,i]))
          tot_eASmamu_h1[j,i] <-sum(sum(eASmamu_h1[,,j,i]))
          tot_eASmjmu_h2[j,i] <-sum(sum(eASmjmu_h2[,,j,i]))
          tot_eASmamu_h2[j,i] <-sum(sum(eASmamu_h2[,,j,i]))
          
          eASfjmu_s[m,n,j,i] <- refSfjmu_s[j,k] * dA_dSfjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_s[m,n,j,i] <- refSfamu_s[j,k] * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_s[m,n,j,i] <- refSmjmu_s[j,k] * dA_dSmjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_s[m,n,j,i] <- refSmamu_s[j,k] * dA_dSmas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_s[j,i] <- sum(sum(eASfjmu_s[,,j,i])) 
          tot_eASfamu_s[j,i] <- sum(sum(eASfamu_s[,,j,i])) 
          tot_eASmjmu_s[j,i] <- sum(sum(eASmjmu_s[,,j,i])) 
          tot_eASmamu_s[j,i] <- sum(sum(eASmamu_s[,,j,i])) 
          ##################################################################################### 
          # Variance
          # Equation 3 Koons et al. 2017, e^A_sd
          eAF1sd[m,n,j,i] <- (refF1[j,i,k] - refF1mu[j,k]) * dA_dF1[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2sd[m,n,j,i] <- (refF2[j,i,k] - refF2mu[j,k]) * dA_dF2[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eAF1sd[j,i] <- sum(sum(eAF1sd[,,j,i]))
          tot_eAF2sd[j,i] <- sum(sum(eAF2sd[,,j,i]))
          
          eASfjsd_w1[m,n,j,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w1[m,n,j,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_w2[m,n,j,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w2[m,n,j,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h1[m,n,j,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h1[m,n,j,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h2[m,n,j,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h2[m,n,j,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_s [m,n,j,i] <- (refSfj_s[j,i,k]   - refSfjmu_s[j,k]) * dA_dSfjs[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_s [m,n,j,i] <- (refSfa_s[j,i,k]   - refSfamu_s[j,k]) * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          eASmjsd_w1[m,n,j,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w1[m,n,j,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_w2[m,n,j,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w2[m,n,j,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h1[m,n,j,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h1[m,n,j,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h2[m,n,j,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h2[m,n,j,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_s [m,n,j,i] <- (refSmj_s[j,i,k]  - refSmjmu_s[j,k]) * dA_dSmjs[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_s [m,n,j,i] <- (refSma_s[j,i,k]  - refSmamu_s[j,k]) * dA_dSmas[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjsd_w1[j,i] <- sum(sum(eASfjsd_w1[,,j,i])) 
          tot_eASfasd_w1[j,i] <- sum(sum(eASfasd_w1[,,j,i])) 
          tot_eASfjsd_w2[j,i] <- sum(sum(eASfjsd_w2[,,j,i])) 
          tot_eASfasd_w2[j,i] <- sum(sum(eASfasd_w2[,,j,i])) 
          tot_eASfjsd_h1[j,i] <- sum(sum(eASfjsd_h1[,,j,i])) 
          tot_eASfasd_h1[j,i] <- sum(sum(eASfasd_h1[,,j,i])) 
          tot_eASfjsd_h2[j,i] <- sum(sum(eASfjsd_h2[,,j,i])) 
          tot_eASfasd_h2[j,i] <- sum(sum(eASfasd_h2[,,j,i])) 
          tot_eASfjsd_s [j,i] <- sum(sum(eASfjsd_s[,,j,i])) 
          tot_eASfasd_s [j,i] <- sum(sum(eASfasd_s[,,j,i])) 
          
          tot_eASmjsd_w1[j,i] <- sum(sum(eASmjsd_w1[,,j,i])) 
          tot_eASmasd_w1[j,i] <- sum(sum(eASmasd_w1[,,j,i])) 
          tot_eASmjsd_w2[j,i] <- sum(sum(eASmjsd_w2[,,j,i])) 
          tot_eASmasd_w2[j,i] <- sum(sum(eASmasd_w2[,,j,i])) 
          tot_eASmjsd_h1[j,i] <- sum(sum(eASmjsd_h1[,,j,i])) 
          tot_eASmasd_h1[j,i] <- sum(sum(eASmasd_h1[,,j,i])) 
          tot_eASmjsd_h2[j,i] <- sum(sum(eASmjsd_h2[,,j,i])) 
          tot_eASmasd_h2[j,i] <- sum(sum(eASmasd_h2[,,j,i])) 
          tot_eASmjsd_s [j,i] <- sum(sum(eASmjsd_s[,,j,i])) 
          tot_eASmasd_s [j,i] <- sum(sum(eASmasd_s[,,j,i])) 
        }
      }
    }
  }
}

avg_eAF1mu    <- rowMeans(tot_eAF1mu  )
avg_eAF2mu    <- rowMeans(tot_eAF2mu )
avg_eASfjmu_w1 <- rowMeans(tot_eASfjmu_w1 )
avg_eASfjmu_w2 <- rowMeans(tot_eASfjmu_w2 )
avg_eASfjmu_s  <- rowMeans(tot_eASfjmu_s )
avg_eASfjmu_h1 <- rowMeans(tot_eASfjmu_h1 )
avg_eASfjmu_h2 <- rowMeans(tot_eASfjmu_h2)
avg_eASfamu_h1 <- rowMeans( tot_eASfamu_h1)
avg_eASfamu_h2 <- rowMeans( tot_eASfamu_h2 )
avg_eASfamu_w1 <- rowMeans(tot_eASfamu_w1 )
avg_eASfamu_w2 <- rowMeans(tot_eASfamu_w2 )
avg_eASfamu_s  <- rowMeans(tot_eASfamu_s )

avg_eASmjmu_w1 <- rowMeans(tot_eASmjmu_w1 )
avg_eASmjmu_w2 <- rowMeans(tot_eASmjmu_w2 )
avg_eASmjmu_s  <- rowMeans(tot_eASmjmu_s )
avg_eASmjmu_h1 <- rowMeans(tot_eASmjmu_h1 )
avg_eASmjmu_h2 <- rowMeans(tot_eASmjmu_h2)
avg_eASmamu_h1 <- rowMeans(tot_eASmamu_h1)
avg_eASmamu_h2 <- rowMeans(tot_eASmamu_h2 )
avg_eASmamu_w1 <- rowMeans(tot_eASmamu_w1 )
avg_eASmamu_w2 <- rowMeans(tot_eASmamu_w2 )
avg_eASmamu_s  <- rowMeans(tot_eASmamu_s )

avg_eAF1sd    <-  rowMeans(tot_eAF1sd  )
avg_eAF2sd    <-  rowMeans(tot_eAF2sd )
avg_eASfjsd_w1 <-  rowMeans(tot_eASfjsd_w1 )
avg_eASfjsd_w2 <-  rowMeans(tot_eASfjsd_w2 )
avg_eASfjsd_s  <-  rowMeans(tot_eASfjsd_s )
avg_eASfjsd_h1 <-  rowMeans(tot_eASfjsd_h1 )
avg_eASfjsd_h2 <-  rowMeans(tot_eASfjsd_h2)
avg_eASfasd_h1 <- rowMeans( tot_eASfasd_h1)
avg_eASfasd_h2 <- rowMeans( tot_eASfasd_h2 )
avg_eASfasd_w1 <-  rowMeans(tot_eASfasd_w1 )
avg_eASfasd_w2 <-  rowMeans(tot_eASfasd_w2 )
avg_eASfasd_s  <-  rowMeans(tot_eASfasd_s )

avg_eASmjsd_w1 <-  rowMeans(tot_eASmjsd_w1 )
avg_eASmjsd_w2 <-  rowMeans(tot_eASmjsd_w2 )
avg_eASmjsd_s  <-  rowMeans(tot_eASmjsd_s )
avg_eASmjsd_h1 <-  rowMeans(tot_eASmjsd_h1 )
avg_eASmjsd_h2 <-  rowMeans(tot_eASmjsd_h2)
avg_eASmasd_h1 <-  rowMeans(tot_eASmasd_h1)
avg_eASmasd_h2 <-  rowMeans(tot_eASmasd_h2 )
avg_eASmasd_w1 <-  rowMeans(tot_eASmasd_w1 )
avg_eASmasd_w2 <-  rowMeans(tot_eASmasd_w2 )
avg_eASmasd_s  <-  rowMeans(tot_eASmasd_s )

# Compute real-time elasticities for the indirect effects of past change in  
# the lower-level vital rates that are channeled through perturbations to   
# stage structure.
I <- diag(S)             # Identity matrix
e <- matrix(1,S,1)       # vector of 1's
# indirect elasticities
enF1mu <- enF2mu <- enSfjwmu1 <- enSfjwmu2 <- enSfawmu1 <- enSfawmu2 <- enSfjhmu1 <- enSfjhmu2 <- enSfahmu1 <- enSfahmu2 <- enSfasmu <- enSfjsmu  <- 
  enF1sd <- enF2sd <- enSfjwsd1 <- enSfjwsd2 <- enSfawsd1 <- enSfawsd2 <- enSfjhsd1 <- enSfjhsd2 <- enSfahsd1 <- enSfahsd2 <- enSfassd <- enSfjssd  <- 
  enSmjwmu1 <- enSmjwmu2 <- enSmawmu1 <- enSmawmu2 <- enSmjhmu1 <- enSmjhmu2 <- enSmahmu1 <- enSmahmu2 <- enSmasmu <- enSmjsmu  <- 
  enSmjwsd1 <- enSmjwsd2 <- enSmawsd1 <- enSmawsd2 <- enSmjhsd1 <- enSmjhsd2 <- enSmahsd1 <- enSmahsd2 <- enSmassd <- enSmjssd  <- array(0,dim=c(S,S,samples,Time))


tot_enF1mu <- tot_enF2mu <- tot_enSfjwmu1 <- tot_enSfjwmu2 <- tot_enSfawmu1 <- tot_enSfawmu2 <- tot_enSfjhmu1 <- tot_enSfjhmu2 <- tot_enSfahmu1 <- tot_enSfahmu2 <- tot_enSfasmu <- tot_enSfjsmu  <- 
  tot_enF1sd <- tot_enF2sd <- tot_enSfjwsd1 <- tot_enSfjwsd2 <- tot_enSfawsd1 <- tot_enSfawsd2 <- tot_enSfjhsd1 <- tot_enSfjhsd2 <- tot_enSfahsd1 <- tot_enSfahsd2 <- tot_enSfassd <- tot_enSfjssd  <-
  tot_enSmjwmu1 <- tot_enSmjwmu2 <- tot_enSmawmu1 <- tot_enSmawmu2 <- tot_enSmjhmu1 <- tot_enSmjhmu2 <- tot_enSmahmu1 <- tot_enSmahmu2 <- tot_enSmasmu <- tot_enSmjsmu  <- 
  tot_enSmjwsd1 <- tot_enSmjwsd2 <- tot_enSmawsd1 <- tot_enSmawsd2 <- tot_enSmjhsd1 <- tot_enSmjhsd2 <- tot_enSmahsd1 <- tot_enSmahsd2 <- tot_enSmassd <- tot_enSmjssd  <-matrix(0,samples,Time)


for (j in 1:samples){
  # perturbation matrices
  C2F1 <- C2F2 <- C2Sfjw1 <- C2Sfjw2 <- C2Sfaw1 <- C2Sfaw2 <- C2Sfjh1 <- C2Sfjh2 <- C2Sfah1 <- C2Sfah2 <- C2Sfas <- C2Sfjs  <-C3F1 <- C3F2 <- C3Sfjw1 <- C3Sfjw2 <- C3Sfaw1 <- C3Sfaw2 <- C3Sfjh1 <- C3Sfjh2 <- C3Sfah1 <- C3Sfah2 <- C3Sfas <- C3Sfjs <-
    C2Smjw1 <- C2Smjw2 <- C2Smaw1 <- C2Smaw2 <- C2Smjh1 <- C2Smjh2 <- C2Smah1 <- C2Smah2 <- C2Smas <- C2Smjs                 <- C3Smjw1 <- C3Smjw2 <- C3Smaw1 <- C3Smaw2 <- C3Smjh1 <- C3Smjh2 <- C3Smah1 <- C3Smah2 <- C3Smas <- C3Smjs<-array(0,dim=c(S^2,S^2,Time)) 
  # perturbation to stage structure
  w_mu_F1 <- w_mu_F2 <- w_mu_Sfjw1 <- w_mu_Sfjw2 <- w_mu_Sfaw1 <- w_mu_Sfaw2 <- w_mu_Sfjh1 <- w_mu_Sfjh2 <- w_mu_Sfah1 <- w_mu_Sfah2 <- w_mu_Sfas <- w_mu_Sfjs  <-w_sd_F1 <- w_sd_F2 <- w_sd_Sfjw1 <- w_sd_Sfjw2 <- w_sd_Sfaw1 <- w_sd_Sfaw2 <- w_sd_Sfjh1 <- w_sd_Sfjh2 <- w_sd_Sfah1 <- w_sd_Sfah2 <- w_sd_Sfas <- w_sd_Sfjs  <- 
    w_mu_Smjw1 <- w_mu_Smjw2 <- w_mu_Smaw1 <- w_mu_Smaw2 <- w_mu_Smjh1 <- w_mu_Smjh2 <- w_mu_Smah1 <- w_mu_Smah2 <- w_mu_Smas <- w_mu_Smjs                       <- w_sd_Smjw1 <- w_sd_Smjw2 <- w_sd_Smaw1 <- w_sd_Smaw2 <- w_sd_Smjh1 <- w_sd_Smjh2 <- w_sd_Smah1 <- w_sd_Smah2 <- w_sd_Smas <- w_sd_Smjs  <- array(0,dim=c(S,S,S,Time+1)) 
  for (i in 1:Time){
    for(k in sp){ # manually change species
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s =  refSfj_s[j,i,k],
        Sfa_s =  refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s =  refSmj_s[j,i,k],
        Sma_s =  refSma_s[j,i,k],
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      mat_elements <- sapply(matrix.elements,eval,vr_list)
      A <- matrix(as.numeric(mat_elements[]),nrow=4,byrow=T)
      
      for (m in 1:S){
        for (n in 1:S){
          C2F1[(S+1)*m-S,(S+1)*n-S,i]   <- refF1mu[j,k]     * dA_dF1[m,n]
          C2F2[(S+1)*m-S,(S+1)*n-S,i]   <- refF2mu[j,k]     * dA_dF2[m,n]
          C2Sfjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n]
          C2Sfjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n]
          C2Sfaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w1[j,k] * dA_dSfaw1[m,n]
          C2Sfaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w2[j,k] * dA_dSfaw2[m,n]
          C2Sfjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n]
          C2Sfjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n]
          C2Sfah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h1[j,k] * dA_dSfah1[m,n]
          C2Sfah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h2[j,k] * dA_dSfah2[m,n]
          C2Sfas[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_s[j,k]  * dA_dSfas[m,n]
          C2Sfjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_s[j,k]  * dA_dSfjs[m,n]
          
          C3F1[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF1[j,i,k]     - refF1mu[j,k]    ) * dA_dF1[m,n]
          C3F2[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF2[j,i,k]     - refF2mu[j,k]    ) * dA_dF2[m,n]
          C3Sfjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n]
          C3Sfjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n]
          C3Sfaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n]
          C3Sfaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n]
          C3Sfjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n]
          C3Sfjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n]
          C3Sfah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n]
          C3Sfah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n]
          C3Sfas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfa_s[j,i,k]  - refSfamu_s[j,k] ) * dA_dSfas[m,n]
          C3Sfjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfj_s[j,i,k]  - refSfjmu_s[j,k] ) * dA_dSfjs[m,n]
          
          C2Smjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n]
          C2Smjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n]
          C2Smaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w1[j,k] * dA_dSmaw1[m,n]
          C2Smaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w2[j,k] * dA_dSmaw2[m,n]
          C2Smjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n]
          C2Smjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n]
          C2Smah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h1[j,k] * dA_dSmah1[m,n]
          C2Smah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h2[j,k] * dA_dSmah2[m,n]
          C2Smas[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_s[j,k]  * dA_dSmas[m,n]
          C2Smjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_s[j,k]  * dA_dSmjs[m,n]
          
          C3Smjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n]
          C3Smjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n]
          C3Smaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n]
          C3Smaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n]
          C3Smjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n]
          C3Smjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n]
          C3Smah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n]
          C3Smah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n]
          C3Smas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSma_s[j,i,k]  - refSmamu_s[j,k] ) * dA_dSmas[m,n]
          C3Smjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSmj_s[j,i,k]  - refSmjmu_s[j,k] ) * dA_dSmjs[m,n]
          
          
          K <- I - refn[,1,j,i+1,k]%*%t(e)  # intermediate steps
          B <- K %*% A / lam_realref[j,i,k]
          
          gF1_mu <-  K %*%     C2F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_mu <-  K %*%     C2F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_mu <-  K %*%   C2Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_mu <-  K %*%   C2Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_mu <-  K %*%   C2Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_mu <-  K %*%   C2Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_mu <-  K %*%   C2Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_mu <-  K %*%   C2Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_mu <-  K %*%   C2Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_mu <-  K %*%   C2Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_mu <-  K %*%    C2Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_mu <-  K %*%    C2Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gF1_sig <-  K %*%     C3F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_sig <-  K %*%     C3F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_sig <-  K %*%   C3Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_sig <-  K %*%   C3Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_sig <-  K %*%   C3Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_sig <-  K %*%   C3Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_sig <-  K %*%   C3Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_sig <-  K %*%   C3Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_sig <-  K %*%   C3Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_sig <-  K %*%   C3Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_sig <-  K %*%    C3Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_sig <-  K %*%    C3Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_mu <-  K %*%   C2Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_mu <-  K %*%   C2Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_mu <-  K %*%   C2Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_mu <-  K %*%   C2Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_mu <-  K %*%   C2Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_mu <-  K %*%   C2Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_mu <-  K %*%   C2Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_mu <-  K %*%   C2Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_mu <-  K %*%    C2Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_mu <-  K %*%    C2Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_sig <-  K %*%   C3Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_sig <-  K %*%   C3Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_sig <-  K %*%   C3Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_sig <-  K %*%   C3Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_sig <-  K %*%   C3Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_sig <-  K %*%   C3Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_sig <-  K %*%   C3Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_sig <-  K %*%   C3Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_sig <-  K %*%    C3Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_sig <-  K %*%    C3Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          w_mu_F1[,m,n,i+1]  <- B %*%  w_mu_F1[,m,n,i] +    gF1_mu  
          w_mu_F2[,m,n,i+1]  <- B %*%  w_mu_F2[,m,n,i] +    gF2_mu  
          w_mu_Sfjw1[,m,n,i+1]  <- B %*% w_mu_Sfjw1[,m,n,i] +  gSfjw1_mu  
          w_mu_Sfjw2[,m,n,i+1]  <- B %*% w_mu_Sfjw2[,m,n,i] +  gSfjw2_mu  
          w_mu_Sfaw1[,m,n,i+1]  <- B %*% w_mu_Sfaw1[,m,n,i] +  gSfaw1_mu  
          w_mu_Sfaw2[,m,n,i+1]  <- B %*% w_mu_Sfaw2[,m,n,i] +  gSfaw2_mu  
          w_mu_Sfjh1[,m,n,i+1]  <- B %*% w_mu_Sfjh1[,m,n,i] +  gSfjh1_mu  
          w_mu_Sfjh2[,m,n,i+1]  <- B %*% w_mu_Sfjh2[,m,n,i] +  gSfjh2_mu  
          w_mu_Sfah1[,m,n,i+1]  <- B %*% w_mu_Sfah1[,m,n,i] +  gSfah1_mu  
          w_mu_Sfah2[,m,n,i+1]  <- B %*% w_mu_Sfah2[,m,n,i] +  gSfah2_mu  
          w_mu_Sfas[,m,n,i+1]  <- B %*% w_mu_Sfas[,m,n,i] +   gSfas_mu  
          w_mu_Sfjs[,m,n,i+1]  <- B %*% w_mu_Sfjs[,m,n,i] +   gSfjs_mu  
          
          w_sd_F1[,m,n,i+1]   <- B %*%  w_sd_F1[,m,n,i] +    gF1_sig  
          w_sd_F2[,m,n,i+1]   <- B %*%  w_sd_F2[,m,n,i] +    gF2_sig  
          w_sd_Sfjw1[,m,n,i+1]  <- B %*% w_sd_Sfjw1[,m,n,i] +  gSfjw1_sig  
          w_sd_Sfjw2[,m,n,i+1]  <- B %*% w_sd_Sfjw2[,m,n,i] +  gSfjw2_sig  
          w_sd_Sfaw1[,m,n,i+1]  <- B %*% w_sd_Sfaw1[,m,n,i] +  gSfaw1_sig  
          w_sd_Sfaw2[,m,n,i+1]  <- B %*% w_sd_Sfaw2[,m,n,i] +  gSfaw2_sig  
          w_sd_Sfjh1[,m,n,i+1]  <- B %*% w_sd_Sfjh1[,m,n,i] +  gSfjh1_sig  
          w_sd_Sfjh2[,m,n,i+1]  <- B %*% w_sd_Sfjh2[,m,n,i] +  gSfjh2_sig  
          w_sd_Sfah1[,m,n,i+1]  <- B %*% w_sd_Sfah1[,m,n,i] +  gSfah1_sig  
          w_sd_Sfah2[,m,n,i+1]  <- B %*% w_sd_Sfah2[,m,n,i] +  gSfah2_sig  
          w_sd_Sfas[,m,n,i+1]   <- B %*% w_sd_Sfas[,m,n,i] +   gSfas_sig  
          w_sd_Sfjs[,m,n,i+1]   <- B %*% w_sd_Sfjs[,m,n,i] +   gSfjs_sig  
          
          w_mu_Smjw1[,m,n,i+1]  <- B %*% w_mu_Smjw1[,m,n,i] +  gSmjw1_mu  
          w_mu_Smjw2[,m,n,i+1]  <- B %*% w_mu_Smjw2[,m,n,i] +  gSmjw2_mu  
          w_mu_Smaw1[,m,n,i+1]  <- B %*% w_mu_Smaw1[,m,n,i] +  gSmaw1_mu  
          w_mu_Smaw2[,m,n,i+1]  <- B %*% w_mu_Smaw2[,m,n,i] +  gSmaw2_mu  
          w_mu_Smjh1[,m,n,i+1]  <- B %*% w_mu_Smjh1[,m,n,i] +  gSmjh1_mu  
          w_mu_Smjh2[,m,n,i+1]  <- B %*% w_mu_Smjh2[,m,n,i] +  gSmjh2_mu  
          w_mu_Smah1[,m,n,i+1]  <- B %*% w_mu_Smah1[,m,n,i] +  gSmah1_mu  
          w_mu_Smah2[,m,n,i+1]  <- B %*% w_mu_Smah2[,m,n,i] +  gSmah2_mu  
          w_mu_Smas[,m,n,i+1]  <- B %*% w_mu_Smas[,m,n,i] +   gSmas_mu  
          w_mu_Smjs[,m,n,i+1]  <- B %*% w_mu_Smjs[,m,n,i] +   gSmjs_mu  
          
          w_sd_Smjw1[,m,n,i+1]  <- B %*% w_sd_Smjw1[,m,n,i] +  gSmjw1_sig  
          w_sd_Smjw2[,m,n,i+1]  <- B %*% w_sd_Smjw2[,m,n,i] +  gSmjw2_sig  
          w_sd_Smaw1[,m,n,i+1]  <- B %*% w_sd_Smaw1[,m,n,i] +  gSmaw1_sig  
          w_sd_Smaw2[,m,n,i+1]  <- B %*% w_sd_Smaw2[,m,n,i] +  gSmaw2_sig  
          w_sd_Smjh1[,m,n,i+1]  <- B %*% w_sd_Smjh1[,m,n,i] +  gSmjh1_sig  
          w_sd_Smjh2[,m,n,i+1]  <- B %*% w_sd_Smjh2[,m,n,i] +  gSmjh2_sig  
          w_sd_Smah1[,m,n,i+1]  <- B %*% w_sd_Smah1[,m,n,i] +  gSmah1_sig  
          w_sd_Smah2[,m,n,i+1]  <- B %*% w_sd_Smah2[,m,n,i] +  gSmah2_sig  
          w_sd_Smas[,m,n,i+1]   <- B %*% w_sd_Smas[,m,n,i] +   gSmas_sig  
          w_sd_Smjs[,m,n,i+1]   <- B %*% w_sd_Smjs[,m,n,i] +   gSmjs_sig  
          
          # Equation 3 Koons et al. 2017, e^n_mu
          enF1mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1mu [j,i] <-  sum(sum(enF1mu [,,j,i]))
          tot_enF2mu [j,i] <-  sum(sum(enF2mu [,,j,i]))
          tot_enSfjwmu1[j,i] <- sum(sum(enSfjwmu1[,,j,i]))
          tot_enSfjwmu2[j,i] <- sum(sum(enSfjwmu2[,,j,i]))
          tot_enSfawmu1[j,i] <- sum(sum(enSfawmu1[,,j,i]))
          tot_enSfawmu2[j,i] <- sum(sum(enSfawmu2[,,j,i]))
          tot_enSfjhmu1[j,i] <- sum(sum(enSfjhmu1[,,j,i]))
          tot_enSfjhmu2[j,i] <- sum(sum(enSfjhmu2[,,j,i]))
          tot_enSfahmu1[j,i] <- sum(sum(enSfahmu1[,,j,i]))
          tot_enSfahmu2[j,i] <- sum(sum(enSfahmu2[,,j,i]))
          tot_enSfasmu[j,i] <-  sum(sum(enSfasmu[,,j,i]))
          
          enSmjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwmu1[j,i] <- sum(sum(enSmjwmu1[,,j,i]))
          tot_enSmjwmu2[j,i] <- sum(sum(enSmjwmu2[,,j,i]))
          tot_enSmawmu1[j,i] <- sum(sum(enSmawmu1[,,j,i]))
          tot_enSmawmu2[j,i] <- sum(sum(enSmawmu2[,,j,i]))
          tot_enSmjhmu1[j,i] <- sum(sum(enSmjhmu1[,,j,i]))
          tot_enSmjhmu2[j,i] <- sum(sum(enSmjhmu2[,,j,i]))
          tot_enSmahmu1[j,i] <- sum(sum(enSmahmu1[,,j,i]))
          tot_enSmahmu2[j,i] <- sum(sum(enSmahmu2[,,j,i]))
          tot_enSmasmu[j,i] <-  sum(sum(enSmasmu[,,j,i]))
          
          
          # Equation 3 Koons et al. 2017, e^n_sd
          enF1sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1sd [j,i] <-  sum(sum(enF1sd [,,j,i]))
          tot_enF2sd [j,i] <-  sum(sum(enF2sd [,,j,i]))
          tot_enSfjwsd1[j,i] <- sum(sum(enSfjwsd1[,,j,i]))
          tot_enSfjwsd2[j,i] <- sum(sum(enSfjwsd2[,,j,i]))
          tot_enSfawsd1[j,i] <- sum(sum(enSfawsd1[,,j,i]))
          tot_enSfawsd2[j,i] <- sum(sum(enSfawsd2[,,j,i]))
          tot_enSfjhsd1[j,i] <- sum(sum(enSfjhsd1[,,j,i]))
          tot_enSfjhsd2[j,i] <- sum(sum(enSfjhsd2[,,j,i]))
          tot_enSfahsd1[j,i] <- sum(sum(enSfahsd1[,,j,i]))
          tot_enSfahsd2[j,i] <- sum(sum(enSfahsd2[,,j,i]))
          tot_enSfassd[j,i] <-  sum(sum(enSfassd[,,j,i]))
          tot_enSfjssd[j,i] <-  sum(sum(enSfjssd[,,j,i]))
          
          enSmjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwsd1[j,i] <- sum(sum(enSmjwsd1[,,j,i]))
          tot_enSmjwsd2[j,i] <- sum(sum(enSmjwsd2[,,j,i]))
          tot_enSmawsd1[j,i] <- sum(sum(enSmawsd1[,,j,i]))
          tot_enSmawsd2[j,i] <- sum(sum(enSmawsd2[,,j,i]))
          tot_enSmjhsd1[j,i] <- sum(sum(enSmjhsd1[,,j,i]))
          tot_enSmjhsd2[j,i] <- sum(sum(enSmjhsd2[,,j,i]))
          tot_enSmahsd1[j,i] <- sum(sum(enSmahsd1[,,j,i]))
          tot_enSmahsd2[j,i] <- sum(sum(enSmahsd2[,,j,i]))
          tot_enSmassd[j,i] <-  sum(sum(enSmassd[,,j,i]))
          tot_enSmjssd[j,i] <-  sum(sum(enSmjssd[,,j,i]))
          
        }
      }
    }
  }
}



avg_enF1mu  <- rowMeans( tot_enF1mu )
avg_enF2mu  <- rowMeans( tot_enF2mu )
avg_enSfjwmu1 <- rowMeans(tot_enSfjwmu1)
avg_enSfjwmu2 <- rowMeans(tot_enSfjwmu2)
avg_enSfawmu1 <- rowMeans(tot_enSfawmu1)
avg_enSfawmu2 <- rowMeans(tot_enSfawmu2)
avg_enSfjhmu1 <- rowMeans(tot_enSfjhmu1)
avg_enSfjhmu2 <- rowMeans(tot_enSfjhmu2)
avg_enSfahmu1 <- rowMeans(tot_enSfahmu1)
avg_enSfahmu2 <- rowMeans(tot_enSfahmu2)
avg_enSfasmu <- rowMeans( tot_enSfasmu)
avg_enSfjsmu <- rowMeans( tot_enSfjsmu)
avg_enSmjwmu1 <- rowMeans(tot_enSmjwmu1)
avg_enSmjwmu2 <- rowMeans(tot_enSmjwmu2)
avg_enSmawmu1 <- rowMeans(tot_enSmawmu1)
avg_enSmawmu2 <- rowMeans(tot_enSmawmu2)
avg_enSmjhmu1 <- rowMeans(tot_enSmjhmu1)
avg_enSmjhmu2 <- rowMeans(tot_enSmjhmu2)
avg_enSmahmu1 <- rowMeans(tot_enSmahmu1)
avg_enSmahmu2 <- rowMeans(tot_enSmahmu2)
avg_enSmasmu <- rowMeans( tot_enSmasmu)
avg_enSmjsmu <- rowMeans( tot_enSmjsmu)

avg_enF1sd  <-  rowMeans( tot_enF1sd )

avg_enF2sd  <-  rowMeans( tot_enF2sd )
avg_enSfjwsd1 <- rowMeans(tot_enSfjwsd1)
avg_enSfjwsd2 <- rowMeans(tot_enSfjwsd2)
avg_enSfawsd1 <- rowMeans(tot_enSfawsd1)
avg_enSfawsd2 <- rowMeans(tot_enSfawsd2)
avg_enSfjhsd1 <- rowMeans(tot_enSfjhsd1)
avg_enSfjhsd2 <- rowMeans(tot_enSfjhsd2)
avg_enSfahsd1 <- rowMeans(tot_enSfahsd1)
avg_enSfahsd2 <- rowMeans(tot_enSfahsd2)
avg_enSfassd <- rowMeans( tot_enSfassd)
avg_enSfjssd <- rowMeans( tot_enSfjssd)

avg_enSmjwsd1 <- rowMeans(tot_enSmjwsd1)
avg_enSmjwsd2 <- rowMeans(tot_enSmjwsd2)
avg_enSmawsd1 <- rowMeans(tot_enSmawsd1)
avg_enSmawsd2 <- rowMeans(tot_enSmawsd2)
avg_enSmjhsd1 <- rowMeans(tot_enSmjhsd1)
avg_enSmjhsd2 <- rowMeans(tot_enSmjhsd2)
avg_enSmahsd1 <- rowMeans(tot_enSmahsd1)
avg_enSmahsd2 <- rowMeans(tot_enSmahsd2)
avg_enSmassd <- rowMeans( tot_enSmassd)
avg_enSmjssd <- rowMeans( tot_enSmjssd)

# Step 9: Calculate vital rate contributions to the difference in geometric mean rates of population growth between time periods. This is a function of 
# logged differences in mean of vital rates, logged differences in s.d. of  vital rates, as channeled through direct effects of perturbations to the   
# moments and indirect effects of perturbations to these moments channeled through changes in population structure over time.
cont_A_F1mu  <- cont_A_F2mu <- cont_A_Sfjmu_w1 <- cont_A_Sfjmu_w2 <- cont_A_Sfjmu_s <- cont_A_Sfjmu_h1 <- cont_A_Sfjmu_h2 <- cont_A_Sfamu_h1 <- cont_A_Sfamu_h2 <- cont_A_Sfamu_w1 <- cont_A_Sfamu_w2 <- cont_A_Sfamu_s <- 
  cont_A_F1sd  <- cont_A_F2sd <- cont_A_Sfjsd_w1 <- cont_A_Sfjsd_w2 <- cont_A_Sfjsd_s <- cont_A_Sfjsd_h1 <- cont_A_Sfjsd_h2 <- cont_A_Sfasd_h1 <- cont_A_Sfasd_h2 <- cont_A_Sfasd_w1 <- cont_A_Sfasd_w2 <- cont_A_Sfasd_s <-
  cont_n_F1mu  <- cont_n_F2mu <- cont_n_Sfjmu_w1 <- cont_n_Sfjmu_w2 <- cont_n_Sfjmu_s <- cont_n_Sfjmu_h1 <- cont_n_Sfjmu_h2 <- cont_n_Sfamu_h1 <- cont_n_Sfamu_h2 <- cont_n_Sfamu_w1 <- cont_n_Sfamu_w2 <- cont_n_Sfamu_s <- 
  cont_n_F1sd  <- cont_n_F2sd <- cont_n_Sfjsd_w1 <- cont_n_Sfjsd_w2 <- cont_n_Sfjsd_s <- cont_n_Sfjsd_h1 <- cont_n_Sfjsd_h2 <- cont_n_Sfasd_h1 <- cont_n_Sfasd_h2 <- cont_n_Sfasd_w1 <- cont_n_Sfasd_w2 <- cont_n_Sfasd_s <- 
  cont_A_Smjmu_w1 <- cont_A_Smjmu_w2 <- cont_A_Smjmu_s <- cont_A_Smjmu_h1 <- cont_A_Smjmu_h2 <- cont_A_Smamu_h1 <- cont_A_Smamu_h2 <- cont_A_Smamu_w1 <- cont_A_Smamu_w2 <- cont_A_Smamu_s <- 
  cont_A_Smjsd_w1 <- cont_A_Smjsd_w2 <- cont_A_Smjsd_s <- cont_A_Smjsd_h1 <- cont_A_Smjsd_h2 <- cont_A_Smasd_h1 <- cont_A_Smasd_h2 <- cont_A_Smasd_w1 <- cont_A_Smasd_w2 <- cont_A_Smasd_s <-
  cont_n_Smjmu_w1 <- cont_n_Smjmu_w2 <- cont_n_Smjmu_s <- cont_n_Smjmu_h1 <- cont_n_Smjmu_h2 <- cont_n_Smamu_h1 <- cont_n_Smamu_h2 <- cont_n_Smamu_w1 <- cont_n_Smamu_w2 <- cont_n_Smamu_s <- 
  cont_n_Smjsd_w1 <- cont_n_Smjsd_w2 <- cont_n_Smjsd_s <- cont_n_Smjsd_h1 <- cont_n_Smjsd_h2 <- cont_n_Smasd_h1 <- cont_n_Smasd_h2 <- cont_n_Smasd_w1 <- cont_n_Smasd_w2 <- cont_n_Smasd_s <- matrix(NA,samples,1)

# Equation 3; Koons et al. 2017
for (j in 1:samples){
  for(k in sp){
    
    cont_A_F1mu[j] <-         logF1mudiff[j,k] *      avg_eAF1mu[j]       
    cont_A_F2mu[j] <-         logF2mudiff[j,k] *      avg_eAF2mu[j]       
    cont_A_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *  avg_eASfjmu_w1[j] 
    cont_A_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *  avg_eASfamu_w1[j] 
    cont_A_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *  avg_eASfjmu_h1[j]  
    cont_A_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *  avg_eASfamu_h1[j] 
    cont_A_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *  avg_eASfjmu_w2[j] 
    cont_A_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *  avg_eASfamu_w2[j] 
    cont_A_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *  avg_eASfjmu_h2[j] 
    cont_A_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *  avg_eASfamu_h2[j] 
    cont_A_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *   avg_eASfjmu_s[j] 
    cont_A_Sfamu_s[j] <-      logSfa_smudiff[j,k] *   avg_eASfamu_s[j]  
    
    cont_A_F1sd[j] <-            logF1sigdiff[j,k] *      avg_eAF1sd[j]       
    cont_A_F2sd[j] <-            logF2sigdiff[j,k] *      avg_eAF2sd[j]       
    cont_A_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_eASfjsd_w1[j] 
    cont_A_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_eASfasd_w1[j] 
    cont_A_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_eASfjsd_h1[j]  
    cont_A_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_eASfasd_h1[j] 
    cont_A_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_eASfjsd_w2[j] 
    cont_A_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_eASfasd_w2[j] 
    cont_A_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_eASfjsd_h2[j] 
    cont_A_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_eASfasd_h2[j] 
    cont_A_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *   avg_eASfjsd_s[j] 
    cont_A_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *   avg_eASfasd_s[j]  
    
    
    cont_n_F1mu[j] <-         logF1mudiff[j,k] *       avg_enF1mu  [j]   
    cont_n_F2mu[j] <-         logF2mudiff[j,k] *       avg_enF2mu  [j]   
    cont_n_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *   avg_enSfjwmu1[j] 
    cont_n_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *   avg_enSfjwmu2[j] 
    cont_n_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *   avg_enSfawmu1[j]  
    cont_n_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *   avg_enSfawmu2[j] 
    cont_n_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *   avg_enSfjhmu1[j] 
    cont_n_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *   avg_enSfjhmu2[j] 
    cont_n_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *   avg_enSfahmu1[j] 
    cont_n_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *   avg_enSfahmu2[j] 
    cont_n_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *    avg_enSfasmu [j]
    cont_n_Sfamu_s[j] <-      logSfa_smudiff[j,k] *    avg_enSfjsmu [j] 
    
    cont_n_F1sd[j] <-            logF1sigdiff[j,k] *   avg_enF1sd  [j]
    cont_n_F2sd[j] <-            logF2sigdiff[j,k] *   avg_enF2sd  [j]
    cont_n_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_enSfjwsd1[j]
    cont_n_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_enSfjwsd2[j]
    cont_n_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_enSfawsd1[j]
    cont_n_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_enSfawsd2[j]
    cont_n_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_enSfjhsd1[j]
    cont_n_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_enSfjhsd2[j]
    cont_n_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_enSfahsd1[j]
    cont_n_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_enSfahsd2[j]
    cont_n_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *  avg_enSfassd [j]
    cont_n_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *  avg_enSfjssd [j]
    ###
    
    cont_A_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *  avg_eASmjmu_w1[j] 
    cont_A_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *  avg_eASmamu_w1[j] 
    cont_A_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *  avg_eASmjmu_h1[j]  
    cont_A_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *  avg_eASmamu_h1[j] 
    cont_A_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *  avg_eASmjmu_w2[j] 
    cont_A_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *  avg_eASmamu_w2[j] 
    cont_A_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *  avg_eASmjmu_h2[j] 
    cont_A_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *  avg_eASmamu_h2[j] 
    cont_A_Smjmu_s[j] <-      logSmj_smudiff[j,k] *   avg_eASmjmu_s[j] 
    cont_A_Smamu_s[j] <-      logSma_smudiff[j,k] *   avg_eASmamu_s[j]  
    
    cont_A_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_eASmjsd_w1[j] 
    cont_A_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_eASmasd_w1[j] 
    cont_A_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_eASmjsd_h1[j]  
    cont_A_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_eASmasd_h1[j] 
    cont_A_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_eASmjsd_w2[j] 
    cont_A_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_eASmasd_w2[j] 
    cont_A_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_eASmjsd_h2[j] 
    cont_A_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_eASmasd_h2[j] 
    cont_A_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *   avg_eASmjsd_s[j] 
    cont_A_Smasd_s[j] <-       logSma_ssigdiff[j,k] *   avg_eASmasd_s[j]  
    
    cont_n_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *   avg_enSmjwmu1[j] 
    cont_n_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *   avg_enSmjwmu2[j] 
    cont_n_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *   avg_enSmawmu1[j]  
    cont_n_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *   avg_enSmawmu2[j] 
    cont_n_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *   avg_enSmjhmu1[j] 
    cont_n_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *   avg_enSmjhmu2[j] 
    cont_n_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *   avg_enSmahmu1[j] 
    cont_n_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *   avg_enSmahmu2[j] 
    cont_n_Smjmu_s[j] <-      logSmj_smudiff[j,k] *    avg_enSmasmu [j]
    cont_n_Smamu_s[j] <-      logSma_smudiff[j,k] *    avg_enSmjsmu [j] 
    
    cont_n_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_enSmjwsd1[j]
    cont_n_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_enSmjwsd2[j]
    cont_n_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_enSmawsd1[j]
    cont_n_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_enSmawsd2[j]
    cont_n_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_enSmjhsd1[j]
    cont_n_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_enSmjhsd2[j]
    cont_n_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_enSmahsd1[j]
    cont_n_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_enSmahsd2[j]
    cont_n_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *  avg_enSmassd [j]
    cont_n_Smasd_s[j] <-       logSma_ssigdiff[j,k] *  avg_enSmjssd [j]
  }
}

# Total effect of shifts in the mean vital rate (A_mu), its variance [A_sd], or the indirect effects of demographic rates channeled through shifts in the mean (n_mu) or variance (n_sd) population structure
totF1 <- cont_A_F1mu + cont_A_F1sd + cont_n_F1mu + cont_n_F1sd
totF2 <- cont_A_F2mu + cont_A_F2sd + cont_n_F2mu + cont_n_F2sd
totF  <- totF1 + totF2

tot_Sf_w_j_1 <- cont_A_Sfjmu_w1 + cont_A_Sfjsd_w1 + cont_n_Sfjmu_w1 + cont_n_Sfjsd_w1 
tot_Sf_w_j_2 <- cont_A_Sfjmu_w2 + cont_A_Sfjsd_w2 + cont_n_Sfjmu_w2 + cont_n_Sfjsd_w2
tot_Sf_2_j_1 <- cont_A_Sfjmu_s + cont_A_Sfjsd_s + cont_n_Sfjmu_s + cont_n_Sfjsd_s
tot_Sf_h_j_1 <- cont_A_Sfjmu_h1 + cont_A_Sfjsd_h1 + cont_n_Sfjmu_h1 + cont_n_Sfjsd_h1
tot_Sf_h_j_2 <- cont_A_Sfjmu_h2 + cont_A_Sfjsd_h2 + cont_n_Sfjmu_h2 + cont_n_Sfjsd_h2
tot_Sf_h_a_1 <- cont_A_Sfamu_h1 + cont_A_Sfasd_h1 + cont_n_Sfamu_h1 + cont_n_Sfasd_h1
tot_Sf_h_a_2 <- cont_A_Sfamu_h2 + cont_A_Sfasd_h2 + cont_n_Sfamu_h2 + cont_n_Sfasd_h2
tot_Sf_w_a_1 <- cont_A_Sfamu_w1 + cont_A_Sfasd_w1 + cont_n_Sfamu_w1 + cont_n_Sfasd_w1
tot_Sf_w_a_2 <- cont_A_Sfamu_w2 + cont_A_Sfasd_w2 + cont_n_Sfamu_w2 + cont_n_Sfasd_w2
tot_Sf_2_2_1 <- cont_A_Sfamu_s + cont_A_Sfasd_s + cont_n_Sfamu_s + cont_n_Sfasd_s

tot_Sm_w_j_1 <- cont_A_Smjmu_w1 + cont_A_Smjsd_w1 + cont_n_Smjmu_w1 + cont_n_Smjsd_w1 
tot_Sm_w_j_2 <- cont_A_Smjmu_w2 + cont_A_Smjsd_w2 + cont_n_Smjmu_w2 + cont_n_Smjsd_w2
tot_Sm_2_j_1 <- cont_A_Smjmu_s + cont_A_Smjsd_s + cont_n_Smjmu_s + cont_n_Smjsd_s
tot_Sm_h_j_1 <- cont_A_Smjmu_h1 + cont_A_Smjsd_h1 + cont_n_Smjmu_h1 + cont_n_Smjsd_h1
tot_Sm_h_j_2 <- cont_A_Smjmu_h2 + cont_A_Smjsd_h2 + cont_n_Smjmu_h2 + cont_n_Smjsd_h2
tot_Sm_h_a_1 <- cont_A_Smamu_h1 + cont_A_Smasd_h1 + cont_n_Smamu_h1 + cont_n_Smasd_h1
tot_Sm_h_a_2 <- cont_A_Smamu_h2 + cont_A_Smasd_h2 + cont_n_Smamu_h2 + cont_n_Smasd_h2
tot_Sm_w_a_1 <- cont_A_Smamu_w1 + cont_A_Smasd_w1 + cont_n_Smamu_w1 + cont_n_Smasd_w1
tot_Sm_w_a_2 <- cont_A_Smamu_w2 + cont_A_Smasd_w2 + cont_n_Smamu_w2 + cont_n_Smasd_w2
tot_Sm_2_2_1 <- cont_A_Smamu_s + cont_A_Smasd_s + cont_n_Smamu_s + cont_n_Smasd_s

cont_time_alaska_2 <- rbind.data.frame(
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'Total', value = 'Total', mean = mean(totF1      ), lower = quantile(totF1      ,probs = 0.05),upper = quantile(totF1      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'Total', value = 'Total', mean = mean(totF2      ), lower = quantile(totF2      ,probs = 0.05),upper = quantile(totF2      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_1), lower = quantile(tot_Sf_w_j_1,probs = 0.05),upper = quantile(tot_Sf_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_1), lower = quantile(tot_Sf_w_a_1,probs = 0.05),upper = quantile(tot_Sf_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_1), lower = quantile(tot_Sf_h_j_1,probs = 0.05),upper = quantile(tot_Sf_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_1), lower = quantile(tot_Sf_h_a_1,probs = 0.05),upper = quantile(tot_Sf_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_2), lower = quantile(tot_Sf_w_j_2,probs = 0.05),upper = quantile(tot_Sf_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_2), lower = quantile(tot_Sf_w_a_2,probs = 0.05),upper = quantile(tot_Sf_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_2), lower = quantile(tot_Sf_h_j_2,probs = 0.05),upper = quantile(tot_Sf_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_2), lower = quantile(tot_Sf_h_a_2,probs = 0.05),upper = quantile(tot_Sf_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_j_1), lower = quantile(tot_Sf_2_j_1,probs = 0.05),upper = quantile(tot_Sf_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_2_1), lower = quantile(tot_Sf_2_2_1,probs = 0.05),upper = quantile(tot_Sf_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'mu', mean = mean(cont_A_F1mu    ), lower = quantile(cont_A_F1mu    ,probs = 0.05),upper = quantile(cont_A_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'mu', mean = mean(cont_A_F2mu    ), lower = quantile(cont_A_F2mu    ,probs = 0.05),upper = quantile(cont_A_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w1), lower = quantile(cont_A_Sfjmu_w1,probs = 0.05),upper = quantile(cont_A_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w1), lower = quantile(cont_A_Sfamu_w1,probs = 0.05),upper = quantile(cont_A_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h1), lower = quantile(cont_A_Sfjmu_h1,probs = 0.05),upper = quantile(cont_A_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h1), lower = quantile(cont_A_Sfamu_h1,probs = 0.05),upper = quantile(cont_A_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w2), lower = quantile(cont_A_Sfjmu_w2,probs = 0.05),upper = quantile(cont_A_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w2), lower = quantile(cont_A_Sfamu_w2,probs = 0.05),upper = quantile(cont_A_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h2), lower = quantile(cont_A_Sfjmu_h2,probs = 0.05),upper = quantile(cont_A_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h2), lower = quantile(cont_A_Sfamu_h2,probs = 0.05),upper = quantile(cont_A_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_s ), lower = quantile(cont_A_Sfjmu_s ,probs = 0.05),upper = quantile(cont_A_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_s ), lower = quantile(cont_A_Sfamu_s ,probs = 0.05),upper = quantile(cont_A_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'sd', mean = mean(cont_A_F1sd    ), lower = quantile(cont_A_F1sd    ,probs = 0.05),upper = quantile(cont_A_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'sd', mean = mean(cont_A_F2sd    ), lower = quantile(cont_A_F2sd    ,probs = 0.05),upper = quantile(cont_A_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w1), lower = quantile(cont_A_Sfjsd_w1,probs = 0.05),upper = quantile(cont_A_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w1), lower = quantile(cont_A_Sfasd_w1,probs = 0.05),upper = quantile(cont_A_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h1), lower = quantile(cont_A_Sfjsd_h1,probs = 0.05),upper = quantile(cont_A_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h1), lower = quantile(cont_A_Sfasd_h1,probs = 0.05),upper = quantile(cont_A_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w2), lower = quantile(cont_A_Sfjsd_w2,probs = 0.05),upper = quantile(cont_A_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w2), lower = quantile(cont_A_Sfasd_w2,probs = 0.05),upper = quantile(cont_A_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h2), lower = quantile(cont_A_Sfjsd_h2,probs = 0.05),upper = quantile(cont_A_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h2), lower = quantile(cont_A_Sfasd_h2,probs = 0.05),upper = quantile(cont_A_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_s ), lower = quantile(cont_A_Sfjsd_s ,probs = 0.05),upper = quantile(cont_A_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_s ), lower = quantile(cont_A_Sfasd_s ,probs = 0.05),upper = quantile(cont_A_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'mu', mean = mean(cont_n_F1mu    ), lower = quantile(cont_n_F1mu    ,probs = 0.05),upper = quantile(cont_n_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'mu', mean = mean(cont_n_F2mu    ), lower = quantile(cont_n_F2mu    ,probs = 0.05),upper = quantile(cont_n_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w1), lower = quantile(cont_n_Sfjmu_w1,probs = 0.05),upper = quantile(cont_n_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w1), lower = quantile(cont_n_Sfamu_w1,probs = 0.05),upper = quantile(cont_n_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h1), lower = quantile(cont_n_Sfjmu_h1,probs = 0.05),upper = quantile(cont_n_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h1), lower = quantile(cont_n_Sfamu_h1,probs = 0.05),upper = quantile(cont_n_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w2), lower = quantile(cont_n_Sfjmu_w2,probs = 0.05),upper = quantile(cont_n_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w2), lower = quantile(cont_n_Sfamu_w2,probs = 0.05),upper = quantile(cont_n_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h2), lower = quantile(cont_n_Sfjmu_h2,probs = 0.05),upper = quantile(cont_n_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h2), lower = quantile(cont_n_Sfamu_h2,probs = 0.05),upper = quantile(cont_n_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_s ), lower = quantile(cont_n_Sfjmu_s ,probs = 0.05),upper = quantile(cont_n_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_s ), lower = quantile(cont_n_Sfamu_s ,probs = 0.05),upper = quantile(cont_n_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'sd', mean = mean(cont_n_F1sd    ), lower = quantile(cont_n_F1sd    ,probs = 0.05),upper = quantile(cont_n_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'sd', mean = mean(cont_n_F2sd    ), lower = quantile(cont_n_F2sd    ,probs = 0.05),upper = quantile(cont_n_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w1), lower = quantile(cont_n_Sfjsd_w1,probs = 0.05),upper = quantile(cont_n_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w1), lower = quantile(cont_n_Sfasd_w1,probs = 0.05),upper = quantile(cont_n_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h1), lower = quantile(cont_n_Sfjsd_h1,probs = 0.05),upper = quantile(cont_n_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h1), lower = quantile(cont_n_Sfasd_h1,probs = 0.05),upper = quantile(cont_n_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w2), lower = quantile(cont_n_Sfjsd_w2,probs = 0.05),upper = quantile(cont_n_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w2), lower = quantile(cont_n_Sfasd_w2,probs = 0.05),upper = quantile(cont_n_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h2), lower = quantile(cont_n_Sfjsd_h2,probs = 0.05),upper = quantile(cont_n_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h2), lower = quantile(cont_n_Sfasd_h2,probs = 0.05),upper = quantile(cont_n_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_s ), lower = quantile(cont_n_Sfjsd_s ,probs = 0.05),upper = quantile(cont_n_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_s ), lower = quantile(cont_n_Sfasd_s ,probs = 0.05),upper = quantile(cont_n_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_1), lower = quantile(tot_Sm_w_j_1,probs = 0.05),upper = quantile(tot_Sm_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_1), lower = quantile(tot_Sm_w_a_1,probs = 0.05),upper = quantile(tot_Sm_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_1), lower = quantile(tot_Sm_h_j_1,probs = 0.05),upper = quantile(tot_Sm_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_1), lower = quantile(tot_Sm_h_a_1,probs = 0.05),upper = quantile(tot_Sm_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_2), lower = quantile(tot_Sm_w_j_2,probs = 0.05),upper = quantile(tot_Sm_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_2), lower = quantile(tot_Sm_w_a_2,probs = 0.05),upper = quantile(tot_Sm_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_2), lower = quantile(tot_Sm_h_j_2,probs = 0.05),upper = quantile(tot_Sm_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_2), lower = quantile(tot_Sm_h_a_2,probs = 0.05),upper = quantile(tot_Sm_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_j_1), lower = quantile(tot_Sm_2_j_1,probs = 0.05),upper = quantile(tot_Sm_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_2_1), lower = quantile(tot_Sm_2_2_1,probs = 0.05),upper = quantile(tot_Sm_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w1), lower = quantile(cont_A_Smjmu_w1,probs = 0.05),upper = quantile(cont_A_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w1), lower = quantile(cont_A_Smamu_w1,probs = 0.05),upper = quantile(cont_A_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h1), lower = quantile(cont_A_Smjmu_h1,probs = 0.05),upper = quantile(cont_A_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h1), lower = quantile(cont_A_Smamu_h1,probs = 0.05),upper = quantile(cont_A_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w2), lower = quantile(cont_A_Smjmu_w2,probs = 0.05),upper = quantile(cont_A_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w2), lower = quantile(cont_A_Smamu_w2,probs = 0.05),upper = quantile(cont_A_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h2), lower = quantile(cont_A_Smjmu_h2,probs = 0.05),upper = quantile(cont_A_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h2), lower = quantile(cont_A_Smamu_h2,probs = 0.05),upper = quantile(cont_A_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_s ), lower = quantile(cont_A_Smjmu_s ,probs = 0.05),upper = quantile(cont_A_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_s ), lower = quantile(cont_A_Smamu_s ,probs = 0.05),upper = quantile(cont_A_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w1), lower = quantile(cont_A_Smjsd_w1,probs = 0.05),upper = quantile(cont_A_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w1), lower = quantile(cont_A_Smasd_w1,probs = 0.05),upper = quantile(cont_A_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h1), lower = quantile(cont_A_Smjsd_h1,probs = 0.05),upper = quantile(cont_A_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h1), lower = quantile(cont_A_Smasd_h1,probs = 0.05),upper = quantile(cont_A_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w2), lower = quantile(cont_A_Smjsd_w2,probs = 0.05),upper = quantile(cont_A_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w2), lower = quantile(cont_A_Smasd_w2,probs = 0.05),upper = quantile(cont_A_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h2), lower = quantile(cont_A_Smjsd_h2,probs = 0.05),upper = quantile(cont_A_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h2), lower = quantile(cont_A_Smasd_h2,probs = 0.05),upper = quantile(cont_A_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_s ), lower = quantile(cont_A_Smjsd_s ,probs = 0.05),upper = quantile(cont_A_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_s ), lower = quantile(cont_A_Smasd_s ,probs = 0.05),upper = quantile(cont_A_Smasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w1), lower = quantile(cont_n_Smjmu_w1,probs = 0.05),upper = quantile(cont_n_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w1), lower = quantile(cont_n_Smamu_w1,probs = 0.05),upper = quantile(cont_n_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h1), lower = quantile(cont_n_Smjmu_h1,probs = 0.05),upper = quantile(cont_n_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h1), lower = quantile(cont_n_Smamu_h1,probs = 0.05),upper = quantile(cont_n_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w2), lower = quantile(cont_n_Smjmu_w2,probs = 0.05),upper = quantile(cont_n_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w2), lower = quantile(cont_n_Smamu_w2,probs = 0.05),upper = quantile(cont_n_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h2), lower = quantile(cont_n_Smjmu_h2,probs = 0.05),upper = quantile(cont_n_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h2), lower = quantile(cont_n_Smamu_h2,probs = 0.05),upper = quantile(cont_n_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_s ), lower = quantile(cont_n_Smjmu_s ,probs = 0.05),upper = quantile(cont_n_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_s ), lower = quantile(cont_n_Smamu_s ,probs = 0.05),upper = quantile(cont_n_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w1), lower = quantile(cont_n_Smjsd_w1,probs = 0.05),upper = quantile(cont_n_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w1), lower = quantile(cont_n_Smasd_w1,probs = 0.05),upper = quantile(cont_n_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h1), lower = quantile(cont_n_Smjsd_h1,probs = 0.05),upper = quantile(cont_n_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h1), lower = quantile(cont_n_Smasd_h1,probs = 0.05),upper = quantile(cont_n_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w2), lower = quantile(cont_n_Smjsd_w2,probs = 0.05),upper = quantile(cont_n_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w2), lower = quantile(cont_n_Smasd_w2,probs = 0.05),upper = quantile(cont_n_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h2), lower = quantile(cont_n_Smjsd_h2,probs = 0.05),upper = quantile(cont_n_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h2), lower = quantile(cont_n_Smasd_h2,probs = 0.05),upper = quantile(cont_n_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_s ), lower = quantile(cont_n_Smjsd_s ,probs = 0.05),upper = quantile(cont_n_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_s ), lower = quantile(cont_n_Smasd_s ,probs = 0.05),upper = quantile(cont_n_Smasd_s ,probs = 0.95))
  
)

tot_fec <- totF
tot_fwhy <- tot_Sf_w_j_1 + tot_Sf_w_j_2
tot_fwah <- tot_Sf_w_a_1 + tot_Sf_w_a_2
tot_fssy <- tot_Sf_2_j_1
tot_fsas <- tot_Sf_2_2_1
tot_fhhy <- tot_Sf_h_j_1 + tot_Sf_h_j_2
tot_fhah <- tot_Sf_h_a_1 + tot_Sf_h_a_2
tot_mwhy <- tot_Sm_w_j_1 + tot_Sm_w_j_2
tot_mwah <- tot_Sm_w_a_1 + tot_Sm_w_a_2
tot_mssy <- tot_Sm_2_j_1
tot_msas <- tot_Sm_2_2_1
tot_mhhy <- tot_Sm_h_j_1 + tot_Sm_h_j_2
tot_mhah <- tot_Sm_h_a_1 + tot_Sm_h_a_2

cont_total_alaska_2 <- rbind.data.frame(
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'FEC', statistic = 'Total', value = 'Total', mean = mean(tot_fec), lower = quantile(tot_fec,probs = 0.05),upper = quantile(tot_fec,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_fwhy), lower = quantile(tot_fwhy,probs = 0.05),upper = quantile(tot_fwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_fwah), lower = quantile(tot_fwah,probs = 0.05),upper = quantile(tot_fwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_fssy), lower = quantile(tot_fssy,probs = 0.05),upper = quantile(tot_fssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_fsas), lower = quantile(tot_fsas,probs = 0.05),upper = quantile(tot_fsas,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_fhhy), lower = quantile(tot_fhhy,probs = 0.05),upper = quantile(tot_fhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_fhah), lower = quantile(tot_fhah,probs = 0.05),upper = quantile(tot_fhah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_mwhy), lower = quantile(tot_mwhy,probs = 0.05),upper = quantile(tot_mwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_mwah), lower = quantile(tot_mwah,probs = 0.05),upper = quantile(tot_mwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_mssy), lower = quantile(tot_mssy,probs = 0.05),upper = quantile(tot_mssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_msas), lower = quantile(tot_msas,probs = 0.05),upper = quantile(tot_msas,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_mhhy), lower = quantile(tot_mhhy,probs = 0.05),upper = quantile(tot_mhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_mhah), lower = quantile(tot_mhah,probs = 0.05),upper = quantile(tot_mhah,probs = 0.95))
)

###################################################################
#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#
###################################################################

# Region North, Comparison 1
Time <- 20
refpi_ak <- refpi_no <- refpi_pr <- refF1 <- refF2 <- refSfj_w1 <- refSfa_w1 <- refSfj_w2 <- refSfa_w2  <- refSfj_s <- refSfa_s <- refSfj_h1 <- refSfa_h1 <- refSfj_h2 <- refSfa_h2  <- refSmj_w1 <- refSma_w1 <- refSmj_w2 <- refSma_w2  <- refSmj_s <- refSma_s <- refSmj_h1 <- refSma_h1 <- refSmj_h2 <- refSma_h2  <- lam_realref <- array(NA,dim = c(samples,Time,3))
refnf1   <- refnf2 <-refnm1 <- refnm2 <- matrix(NA,samples, 3)
refn     <- array(NA,dim=c(4,1,samples,Time+1,3))
Sfj_w1_reg <- Sfj_w2_reg <- Sfj_h1_reg <- Sfj_h2_reg <- Sfa_w1_reg <- Sfa_w2_reg <- Sfa_h1_reg <- Sfa_h2_reg <-Smj_w1_reg <- Smj_w2_reg <- Smj_h1_reg <- Smj_h2_reg <- Sma_w1_reg <- Sma_w2_reg <- Sma_h1_reg <- Sma_h2_reg <- array(NA,dim=c(60,samples,3))

# Annual vital rates
for (j in 1:samples){
  for(k in 1:n.region){
    for(t in 1:60){
      Sfj_w1_reg[t,j,k] <- Sfj_w1[t,j] * mu_psi[t,j,k]
      Sfa_w1_reg[t,j,k] <- Sfa_w1[t,j] * mu_psi[t,j,k]
      Sfj_w2_reg[t,j,k] <- Sfj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_w2_reg[t,j,k] <- Sfa_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Sfj_h1_reg[t,j,k] <- Sfj_h1[t,j] * mu_psi[t,j,k]
      Sfa_h1_reg[t,j,k] <- Sfa_h1[t,j] * mu_psi[t,j,k]
      Sfj_h2_reg[t,j,k] <- Sfj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_h2_reg[t,j,k] <- Sfa_h2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_w1_reg[t,j,k] <- Smj_w1[t,j] * mu_psi[t,j,k]
      Sma_w1_reg[t,j,k] <- Sma_w1[t,j] * mu_psi[t,j,k]
      Smj_w2_reg[t,j,k] <- Smj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sma_w2_reg[t,j,k] <- Sma_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_h1_reg[t,j,k] <- Smj_h1[t,j] * mu_psi[t,j,k]
      Sma_h1_reg[t,j,k] <- Sma_h1[t,j] * mu_psi[t,j,k]
      Smj_h2_reg[t,j,k] <- Smj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sma_h2_reg[t,j,k] <- Sma_h2[t,j] * (1 - mu_psi[t,j,k])
    }
    # Average vital rate between the starts of each time period
    refnf1[j,k] <- (nf1[sta1,j,k] + nf1[sta2,j,k]) / 2
    refnf2[j,k] <- (nf2[sta1,j,k] + nf2[sta2,j,k]) / 2
    refnm1[j,k] <- (nm1[sta1,j,k] + nm1[sta2,j,k]) / 2
    refnm2[j,k] <- (nm2[sta1,j,k] + nm2[sta2,j,k]) / 2
    
    refn[1,1,j,1,k] <- refnf1[j,k]
    refn[2,1,j,1,k] <- refnf2[j,k]
    
    refn[3,1,j,1,k] <- refnm1[j,k]
    refn[4,1,j,1,k] <- refnm2[j,k]
    
    for (i in 1:Time){
      refpi_ak[j,i,k] <-   (pi_ak[i+sta1-1,j,k] +   pi_ak[i+sta2-1,j,k]) / 2
      refpi_no[j,i,k] <-   (pi_no[i+sta1-1,j,k] +   pi_no[i+sta2-1,j,k]) / 2
      refpi_pr[j,i,k] <-   (pi_pr[i+sta1-1,j,k] +   pi_pr[i+sta2-1,j,k]) / 2
      
      refF1[j,i,k] <-   (F1[i+sta1-1,j,k] + F1[i+sta2-1,j,k]) / 2
      refF2[j,i,k] <-   (F2[i+sta1-1,j,k] + F2[i+sta2-1,j,k]) / 2
      
      refSfj_w1[j,i,k] <- ((Sfj_w1_reg[i+sta1-1,j,k] + Sfj_w1_reg[i+sta2-1,j,k]) / 2)
      refSfa_w1[j,i,k] <- ((Sfa_w1_reg[i+sta1-1,j,k] + Sfa_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_w2[j,i,k] <- ((Sfj_w2_reg[i+sta1-1,j,k] + Sfj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_w2[j,i,k] <- ((Sfa_w2_reg[i+sta1-1,j,k] + Sfa_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSfj_s[j,i,k]    <- (Sfj_s[i+sta1-1,j,k] +  Sfj_s[i+sta2-1,j,k]) / 2
      refSfa_s[j,i,k]    <- (Sfa_s[i+sta1-1,j,k] +  Sfa_s[i+sta2-1,j,k]) / 2
      
      refSfj_h1[j,i,k] <- ((Sfj_h1_reg[i+sta1-1,j,k] + Sfj_h1_reg[i+sta2-1,j,k]) / 2)
      refSfa_h1[j,i,k] <- ((Sfa_h1_reg[i+sta1-1,j,k] + Sfa_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_h2[j,i,k] <- ((Sfj_h2_reg[i+sta1-1,j,k] + Sfj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_h2[j,i,k] <- ((Sfa_h2_reg[i+sta1-1,j,k] + Sfa_h2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_w1[j,i,k] <- ((Smj_w1_reg[i+sta1-1,j,k] + Smj_w1_reg[i+sta2-1,j,k]) / 2)
      refSma_w1[j,i,k] <- ((Sma_w1_reg[i+sta1-1,j,k] + Sma_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_w2[j,i,k] <- ((Smj_w2_reg[i+sta1-1,j,k] + Smj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSma_w2[j,i,k] <- ((Sma_w2_reg[i+sta1-1,j,k] + Sma_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_s[j,i,k] <-    (Smj_s[i+sta1-1,j,k] +  Smj_s[i+sta2-1,j,k]) / 2
      refSma_s[j,i,k] <-    (Sma_s[i+sta1-1,j,k] +  Sma_s[i+sta2-1,j,k]) / 2
      
      refSmj_h1[j,i,k] <- ((Smj_h1_reg[i+sta1-1,j,k] + Smj_h1_reg[i+sta2-1,j,k]) / 2)
      refSma_h1[j,i,k] <- ((Sma_h1_reg[i+sta1-1,j,k] + Sma_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_h2[j,i,k] <- ((Smj_h2_reg[i+sta1-1,j,k] + Smj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSma_h2[j,i,k] <- ((Sma_h2_reg[i+sta1-1,j,k] + Sma_h2_reg[i+sta2-1,j,k]) / 2) 
      
      # Demographic projection matrix for each region
      A_AK <- matrix(c(
        0.5*refF1[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),0,0,
        
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),0,0,
        
        0.5*refF1[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),0,0,
        
        0,0,
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1]),
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1])
      ), nrow=4, byrow=TRUE)
      
      A_NO <- matrix(c(
        0.5*refF1[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 0,0,
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),0,0,
        
        0.5*refF1[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 0,0,
        
        0,0,
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2]),
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2])
      ), nrow=4, byrow=TRUE)
      
      A_PR <- matrix(c(
        0.5*refF1[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 0,0,
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),0,0,
        
        0.5*refF1[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 0,0,
        
        0,0,
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3]),
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3])
      ), nrow=4, byrow=TRUE)
      
      n_ak <- A_AK %*% refn[,,j,i,1]
      n_no <- A_NO %*% refn[,,j,i,2]
      n_pr <- A_PR %*% refn[,,j,i,3]
      
      lam_realref[j,i,1] <- sum( n_ak)
      lam_realref[j,i,2] <- sum( n_no)
      lam_realref[j,i,3] <- sum( n_pr)
      
      refn[,1,j,i+1,1] <-  n_ak/sum( n_ak) #store the proportionate abundances
      refn[,1,j,i+1,2] <-  n_no/sum( n_no) #store the proportionate abundances
      refn[,1,j,i+1,3] <-  n_pr/sum( n_pr) #store the proportionate abundances
    }
  }
}

# temporal means of the lower-level vital rates
refF1mu     <- apply(refF1 ,c(1,3),mean)
refF2mu     <- apply(refF2 ,c(1,3),mean)
refSfjmu_w1 <- apply(refSfj_w1,c(1,3),mean)
refSfamu_w1 <- apply(refSfa_w1,c(1,3),mean)
refSfjmu_w2 <- apply(refSfj_w2,c(1,3),mean)
refSfamu_w2 <- apply(refSfa_w2,c(1,3),mean)
refSfjmu_h1 <- apply(refSfj_h1,c(1,3),mean)
refSfamu_h1 <- apply(refSfa_h1,c(1,3),mean)
refSfjmu_h2 <- apply(refSfj_h2,c(1,3),mean)
refSfamu_h2 <- apply(refSfa_h2,c(1,3),mean)
refSfjmu_s  <- apply(refSfj_s,c(1,3),mean)
refSfamu_s  <- apply(refSfa_s,c(1,3),mean)
refSmjmu_w1 <- apply(refSmj_w1,c(1,3),mean)
refSmamu_w1 <- apply(refSma_w1,c(1,3),mean)
refSmjmu_w2 <- apply(refSmj_w2,c(1,3),mean)
refSmamu_w2 <- apply(refSma_w2,c(1,3),mean)
refSmjmu_h1 <- apply(refSmj_h1,c(1,3),mean)
refSmamu_h1 <- apply(refSma_h1,c(1,3),mean)
refSmjmu_h2 <- apply(refSmj_h2,c(1,3),mean)
refSmamu_h2 <- apply(refSma_h2,c(1,3),mean)
refSmjmu_s  <- apply(refSmj_s,c(1,3),mean)
refSmamu_s  <- apply(refSma_s,c(1,3),mean)

logF1mudiff      <- matrix(NA,samples,3)
logF2mudiff      <- matrix(NA,samples,3)
logSfj1_wmudiff  <- matrix(NA,samples,3)
logSfa1_wmudiff  <- matrix(NA,samples,3)
logSfj1_hmudiff  <- matrix(NA,samples,3)
logSfa1_hmudiff  <- matrix(NA,samples,3)
logSfj2_wmudiff  <- matrix(NA,samples,3)
logSfa2_wmudiff  <- matrix(NA,samples,3)
logSfj2_hmudiff  <- matrix(NA,samples,3)
logSfa2_hmudiff  <- matrix(NA,samples,3)
logSfj_smudiff   <- matrix(NA,samples,3)
logSfa_smudiff   <- matrix(NA,samples,3)

logSmj1_wmudiff  <- matrix(NA,samples,3)
logSma1_wmudiff  <- matrix(NA,samples,3)
logSmj1_hmudiff  <- matrix(NA,samples,3)
logSma1_hmudiff  <- matrix(NA,samples,3)
logSmj2_wmudiff  <- matrix(NA,samples,3)
logSma2_wmudiff  <- matrix(NA,samples,3)
logSmj2_hmudiff  <- matrix(NA,samples,3)
logSma2_hmudiff  <- matrix(NA,samples,3)
logSmj_smudiff   <- matrix(NA,samples,3)
logSma_smudiff   <- matrix(NA,samples,3)

logF1sigdiff     <- matrix(NA,samples,3)
logF2sigdiff     <- matrix(NA,samples,3)
logSfj1_wsigdiff <- matrix(NA,samples,3)
logSfa1_wsigdiff <- matrix(NA,samples,3)
logSfj1_hsigdiff <- matrix(NA,samples,3)
logSfa1_hsigdiff <- matrix(NA,samples,3)
logSfj2_wsigdiff <- matrix(NA,samples,3)
logSfa2_wsigdiff <- matrix(NA,samples,3)
logSfj2_hsigdiff <- matrix(NA,samples,3)
logSfa2_hsigdiff <- matrix(NA,samples,3)
logSfj_ssigdiff  <- matrix(NA,samples,3)
logSfa_ssigdiff  <- matrix(NA,samples,3)

logSmj1_wsigdiff <- matrix(NA,samples,3)
logSma1_wsigdiff <- matrix(NA,samples,3)
logSmj1_hsigdiff <- matrix(NA,samples,3)
logSma1_hsigdiff <- matrix(NA,samples,3)
logSmj2_wsigdiff <- matrix(NA,samples,3)
logSma2_wsigdiff <- matrix(NA,samples,3)
logSmj2_hsigdiff <- matrix(NA,samples,3)
logSma2_hsigdiff <- matrix(NA,samples,3)
logSmj_ssigdiff  <- matrix(NA,samples,3)
logSma_ssigdiff  <- matrix(NA,samples,3)

######################################################################################
# Step 7: Calculate differences on log scale in lower-level vital rate means 
# and standard deviations between time periods.
#######################################################################################

for (j in 1:samples){
  for(k in 1:n.region){      
    # Equation 3 Koons et al. 2017, log u_a - log u_b
    logF1mudiff[j,k]     <-        log(mean(F1[sta1:end1,j,k])) -        log(mean(F1[sta2:end2,j,k]))
    logF2mudiff[j,k]     <-        log(mean(F2[sta1:end1,j,k])) -        log(mean(F2[sta2:end2,j,k]))
    logSfj1_wmudiff[j,k] <-      log(mean(Sfj_w1_reg[sta1:end1,j,k]))-  log(mean(Sfj_w1_reg[sta2:end2,j,k])) 
    logSfa1_wmudiff[j,k] <-      log(mean(Sfa_w1_reg[sta1:end1,j,k]))-  log(mean(Sfa_w1_reg[sta2:end2,j,k])) 
    logSfj1_hmudiff[j,k] <-      log(mean(Sfj_h1_reg[sta1:end1,j,k]))-  log(mean(Sfj_h1_reg[sta2:end2,j,k]))
    logSfa1_hmudiff[j,k] <-      log(mean(Sfa_h1_reg[sta1:end1,j,k]))-  log(mean(Sfa_h1_reg[sta2:end2,j,k]))
    logSfj2_wmudiff[j,k] <-      log(mean(Sfj_w2_reg[sta1:end1,j,k]))-  log(mean(Sfj_w2_reg[sta2:end2,j,k])) 
    logSfa2_wmudiff[j,k] <-      log(mean(Sfa_w2_reg[sta1:end1,j,k]))-  log(mean(Sfa_w2_reg[sta2:end2,j,k])) 
    logSfj2_hmudiff[j,k] <-      log(mean(Sfj_h2_reg[sta1:end1,j,k]))-  log(mean(Sfj_h2_reg[sta2:end2,j,k]))
    logSfa2_hmudiff[j,k] <-      log(mean(Sfa_h2_reg[sta1:end1,j,k]))-  log(mean(Sfa_h2_reg[sta2:end2,j,k]))
    logSfj_smudiff[j,k]  <-      log(mean(Sfj2[sta1:end1,j,k])) -      log(mean(Sfj2[sta2:end2,j,k]))
    logSfa_smudiff[j,k]  <-      log(mean(Sfa2[sta1:end1,j,k])) -      log(mean(Sfa2[sta2:end2,j,k]))
    
    logSmj1_wmudiff[j,k] <-      log(mean(Smj_w1_reg[sta1:end1,j,k]))-  log(mean(Smj_w1_reg[sta2:end2,j,k])) 
    logSma1_wmudiff[j,k] <-      log(mean(Sma_w1_reg[sta1:end1,j,k]))-  log(mean(Sma_w1_reg[sta2:end2,j,k])) 
    logSmj1_hmudiff[j,k] <-      log(mean(Smj_h1_reg[sta1:end1,j,k]))-  log(mean(Smj_h1_reg[sta2:end2,j,k]))
    logSma1_hmudiff[j,k] <-      log(mean(Sma_h1_reg[sta1:end1,j,k]))-  log(mean(Sma_h1_reg[sta2:end2,j,k]))
    logSmj2_wmudiff[j,k] <-      log(mean(Smj_w2_reg[sta1:end1,j,k]))-  log(mean(Smj_w2_reg[sta2:end2,j,k])) 
    logSma2_wmudiff[j,k] <-      log(mean(Sma_w2_reg[sta1:end1,j,k]))-  log(mean(Sma_w2_reg[sta2:end2,j,k])) 
    logSmj2_hmudiff[j,k] <-      log(mean(Smj_h2_reg[sta1:end1,j,k]))-  log(mean(Smj_h2_reg[sta2:end2,j,k]))
    logSma2_hmudiff[j,k] <-      log(mean(Sma_h2_reg[sta1:end1,j,k]))-  log(mean(Sma_h2_reg[sta2:end2,j,k]))
    logSmj_smudiff[j,k]  <-      log(mean(Smj2[sta1:end1,j,k])) -      log(mean(Smj2[sta2:end2,j,k]))
    logSma_smudiff[j,k]  <-      log(mean(Sma2[sta1:end1,j,k])) -      log(mean(Sma2[sta2:end2,j,k]))
    
    # Equation 3 Koons et al. 2017, log sig_a - log sig_b
    logF1sigdiff[j,k]     <-   log(sqrt(var(F1[sta1:end1,j,k]))) -   log(sqrt(var(F1[sta2:end2,j,k])))
    logF2sigdiff[j,k]     <-   log(sqrt(var(F2[sta1:end1,j,k]))) -   log(sqrt(var(F2[sta2:end2,j,k])))
    logSfj_ssigdiff[j,k]  <-   log(sqrt(var(Sfj2[sta1:end1,j,k]))) - log(sqrt(var(Sfj2[sta2:end2,j,k])))
    logSfa_ssigdiff[j,k]  <-   log(sqrt(var(Sfa2[sta1:end1,j,k]))) - log(sqrt(var(Sfa2[sta2:end2,j,k])))
    logSfj1_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_w1_reg[sta2:end2,j,k])))
    logSfa1_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_w1_reg[sta2:end2,j,k])))
    logSfj1_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_h1_reg[sta2:end2,j,k])))
    logSfa1_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_h1_reg[sta2:end2,j,k])))
    logSfj2_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_w2_reg[sta2:end2,j,k])))
    logSfa2_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_w2_reg[sta2:end2,j,k])))
    logSfj2_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_h2_reg[sta2:end2,j,k])))
    logSfa2_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_h2_reg[sta2:end2,j,k])))
    
    logSmj_ssigdiff[j,k] <- log(sqrt(var(Smj2[sta1:end1,j,k]))) - log(sqrt(var(Smj2[sta2:end2,j,k])))
    logSma_ssigdiff[j,k] <- log(sqrt(var(Sma2[sta1:end1,j,k]))) - log(sqrt(var(Sma2[sta2:end2,j,k])))
    logSmj1_wsigdiff[j,k] <-   log(sqrt(var(Smj_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_w1_reg[sta2:end2,j,k])))
    logSma1_wsigdiff[j,k] <-   log(sqrt(var(Sma_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_w1_reg[sta2:end2,j,k])))
    logSmj1_hsigdiff[j,k] <-   log(sqrt(var(Smj_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_h1_reg[sta2:end2,j,k])))
    logSma1_hsigdiff[j,k] <-   log(sqrt(var(Sma_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_h1_reg[sta2:end2,j,k])))
    logSmj2_wsigdiff[j,k] <-   log(sqrt(var(Smj_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_w2_reg[sta2:end2,j,k])))
    logSma2_wsigdiff[j,k] <-   log(sqrt(var(Sma_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_w2_reg[sta2:end2,j,k])))
    logSmj2_hsigdiff[j,k] <-   log(sqrt(var(Smj_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_h2_reg[sta2:end2,j,k])))
    logSma2_hsigdiff[j,k] <-   log(sqrt(var(Sma_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_h2_reg[sta2:end2,j,k])))
  }
}

# Step 8: Compute real-time elasticities, evaluated at the reference mean         
# Real-time elasticities for the direct effects of change in the lower-level vital rates.

S <- 4  # dimension of projection matrix
sp = 2  

eAF1mu  <- eAF2mu <- eASfjmu_w1 <- eASfjmu_w2 <- eASfjmu_s <- eASfjmu_h1 <- eASfjmu_h2 <- eASfamu_h1 <- eASfamu_h2 <- eASfamu_w1 <- eASfamu_w2 <- eASfamu_s <- 
  eASmjmu_w1 <- eASmjmu_w2 <- eASmjmu_s <- eASmjmu_h1 <- eASmjmu_h2 <- eASmamu_h1 <- eASmamu_h2 <- eASmamu_w1 <- eASmamu_w2 <- eASmamu_s <- 
  eAF1sd  <- eAF2sd <- eASfjsd_w1 <- eASfjsd_w2 <- eASfjsd_s <- eASfjsd_h1 <- eASfjsd_h2 <- eASfasd_h1 <- eASfasd_h2 <- eASfasd_w1 <- eASfasd_w2 <- eASfasd_s <- 
  eASmjsd_w1 <- eASmjsd_w2 <- eASmjsd_s <- eASmjsd_h1 <- eASmjsd_h2 <- eASmasd_h1 <- eASmasd_h2 <- eASmasd_w1 <- eASmasd_w2 <- eASmasd_s <-array(NA,dim=c(S,S,samples,Time))

tot_eAF1mu  <- tot_eAF2mu <- tot_eASfjmu_w1 <- tot_eASfjmu_w2 <- tot_eASfjmu_s <- tot_eASfjmu_h1 <- tot_eASfjmu_h2 <- tot_eASfamu_h1 <- tot_eASfamu_h2 <- tot_eASfamu_w1 <- tot_eASfamu_w2 <- tot_eASfamu_s <- 
  tot_eASmjmu_w1 <- tot_eASmjmu_w2 <- tot_eASmjmu_s <- tot_eASmjmu_h1 <- tot_eASmjmu_h2 <- tot_eASmamu_h1 <- tot_eASmamu_h2 <- tot_eASmamu_w1 <- tot_eASmamu_w2 <- tot_eASmamu_s <-
  tot_eAF1sd  <- tot_eAF2sd <- tot_eASfjsd_w1 <- tot_eASfjsd_w2 <- tot_eASfjsd_s <- tot_eASfjsd_h1 <- tot_eASfjsd_h2 <- tot_eASfasd_h1 <- tot_eASfasd_h2 <- tot_eASfasd_w1 <- tot_eASfasd_w2 <- tot_eASfasd_s  <-
  tot_eASmjsd_w1 <- tot_eASmjsd_w2 <- tot_eASmjsd_s <- tot_eASmjsd_h1 <- tot_eASmjsd_h2 <- tot_eASmasd_h1 <- tot_eASmasd_h2 <- tot_eASmasd_w1 <- tot_eASmasd_w2 <- tot_eASmasd_s  <-matrix(NA,samples,Time)


for (j in 1:samples){
  for (i in 1:Time){
    for(k in sp){ # manually change region
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s = refSfj_s[j,i,k],
        Sfa_s = refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s = refSmj_s[j,i,k],
        Sma_s = refSma_s[j,i,k],
        
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      for (m in 1:S){
        for (n in 1:S){
          # Equation 3 Koons et al. 2017, e^A_mu
          ##########################################################
          # Means
          eAF1mu[m,n,j,i] <- refF1mu[j,k] * dA_dF1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2mu[m,n,j,i] <- refF2mu[j,k] * dA_dF2[m,n] * refn[n,1,j,i,k] /  lam_realref[j,i,k]
          
          tot_eAF2mu[j,i] <- sum(sum(eAF2mu[,,j,i])) 
          tot_eAF1mu[j,i] <- sum(sum(eAF1mu[,,j,i])) 
          
          eASfjmu_w1[m,n,j,i] <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w1[m,n,j,i] <- refSfamu_w1[j,k] * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_w2[m,n,j,i] <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w2[m,n,j,i] <- refSfamu_w2[j,k] * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w1[m,n,j,i] <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w1[m,n,j,i] <- refSmamu_w1[j,k] * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w2[m,n,j,i] <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w2[m,n,j,i] <- refSmamu_w2[j,k] * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_w1[j,i] <-sum(sum(eASfjmu_w1[,,j,i]))
          tot_eASfamu_w1[j,i] <-sum(sum(eASfamu_w1[,,j,i]))
          tot_eASfjmu_w2[j,i] <-sum(sum(eASfjmu_w2[,,j,i]))
          tot_eASfamu_w2[j,i] <-sum(sum(eASfamu_w2[,,j,i]))
          tot_eASmjmu_w1[j,i] <-sum(sum(eASmjmu_w1[,,j,i]))
          tot_eASmamu_w1[j,i] <-sum(sum(eASmamu_w1[,,j,i]))
          tot_eASmjmu_w2[j,i] <-sum(sum(eASmjmu_w2[,,j,i]))
          tot_eASmamu_w2[j,i] <-sum(sum(eASmamu_w2[,,j,i]))
          
          eASfjmu_h1[m,n,j,i] <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h1[m,n,j,i] <- refSfamu_h1[j,k] * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_h2[m,n,j,i] <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h2[m,n,j,i] <- refSfamu_h2[j,k] * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h1[m,n,j,i] <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h1[m,n,j,i] <- refSmamu_h1[j,k] * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h2[m,n,j,i] <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h2[m,n,j,i] <- refSmamu_h2[j,k] * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k] 
          
          tot_eASfjmu_h1[j,i] <-sum(sum(eASfjmu_h1[,,j,i]))
          tot_eASfamu_h1[j,i] <-sum(sum(eASfamu_h1[,,j,i]))
          tot_eASfjmu_h2[j,i] <-sum(sum(eASfjmu_h2[,,j,i]))
          tot_eASfamu_h2[j,i] <-sum(sum(eASfamu_h2[,,j,i]))
          tot_eASmjmu_h1[j,i] <-sum(sum(eASmjmu_h1[,,j,i]))
          tot_eASmamu_h1[j,i] <-sum(sum(eASmamu_h1[,,j,i]))
          tot_eASmjmu_h2[j,i] <-sum(sum(eASmjmu_h2[,,j,i]))
          tot_eASmamu_h2[j,i] <-sum(sum(eASmamu_h2[,,j,i]))
          
          eASfjmu_s[m,n,j,i] <- refSfjmu_s[j,k] * dA_dSfjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_s[m,n,j,i] <- refSfamu_s[j,k] * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_s[m,n,j,i] <- refSmjmu_s[j,k] * dA_dSmjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_s[m,n,j,i] <- refSmamu_s[j,k] * dA_dSmas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_s[j,i] <- sum(sum(eASfjmu_s[,,j,i])) 
          tot_eASfamu_s[j,i] <- sum(sum(eASfamu_s[,,j,i])) 
          tot_eASmjmu_s[j,i] <- sum(sum(eASmjmu_s[,,j,i])) 
          tot_eASmamu_s[j,i] <- sum(sum(eASmamu_s[,,j,i])) 
          ##################################################################################### 
          # Variance
          # Equation 3 Koons et al. 2017, e^A_sd
          eAF1sd[m,n,j,i] <- (refF1[j,i,k] - refF1mu[j,k]) * dA_dF1[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2sd[m,n,j,i] <- (refF2[j,i,k] - refF2mu[j,k]) * dA_dF2[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eAF1sd[j,i] <- sum(sum(eAF1sd[,,j,i]))
          tot_eAF2sd[j,i] <- sum(sum(eAF2sd[,,j,i]))
          
          eASfjsd_w1[m,n,j,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w1[m,n,j,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_w2[m,n,j,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w2[m,n,j,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h1[m,n,j,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h1[m,n,j,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h2[m,n,j,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h2[m,n,j,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_s [m,n,j,i] <- (refSfj_s[j,i,k]   - refSfjmu_s[j,k]) * dA_dSfjs[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_s [m,n,j,i] <- (refSfa_s[j,i,k]   - refSfamu_s[j,k]) * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          eASmjsd_w1[m,n,j,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w1[m,n,j,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_w2[m,n,j,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w2[m,n,j,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h1[m,n,j,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h1[m,n,j,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h2[m,n,j,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h2[m,n,j,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_s [m,n,j,i] <- (refSmj_s[j,i,k]  - refSmjmu_s[j,k]) * dA_dSmjs[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_s [m,n,j,i] <- (refSma_s[j,i,k]  - refSmamu_s[j,k]) * dA_dSmas[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjsd_w1[j,i] <- sum(sum(eASfjsd_w1[,,j,i])) 
          tot_eASfasd_w1[j,i] <- sum(sum(eASfasd_w1[,,j,i])) 
          tot_eASfjsd_w2[j,i] <- sum(sum(eASfjsd_w2[,,j,i])) 
          tot_eASfasd_w2[j,i] <- sum(sum(eASfasd_w2[,,j,i])) 
          tot_eASfjsd_h1[j,i] <- sum(sum(eASfjsd_h1[,,j,i])) 
          tot_eASfasd_h1[j,i] <- sum(sum(eASfasd_h1[,,j,i])) 
          tot_eASfjsd_h2[j,i] <- sum(sum(eASfjsd_h2[,,j,i])) 
          tot_eASfasd_h2[j,i] <- sum(sum(eASfasd_h2[,,j,i])) 
          tot_eASfjsd_s [j,i] <- sum(sum(eASfjsd_s[,,j,i])) 
          tot_eASfasd_s [j,i] <- sum(sum(eASfasd_s[,,j,i])) 
          
          tot_eASmjsd_w1[j,i] <- sum(sum(eASmjsd_w1[,,j,i])) 
          tot_eASmasd_w1[j,i] <- sum(sum(eASmasd_w1[,,j,i])) 
          tot_eASmjsd_w2[j,i] <- sum(sum(eASmjsd_w2[,,j,i])) 
          tot_eASmasd_w2[j,i] <- sum(sum(eASmasd_w2[,,j,i])) 
          tot_eASmjsd_h1[j,i] <- sum(sum(eASmjsd_h1[,,j,i])) 
          tot_eASmasd_h1[j,i] <- sum(sum(eASmasd_h1[,,j,i])) 
          tot_eASmjsd_h2[j,i] <- sum(sum(eASmjsd_h2[,,j,i])) 
          tot_eASmasd_h2[j,i] <- sum(sum(eASmasd_h2[,,j,i])) 
          tot_eASmjsd_s [j,i] <- sum(sum(eASmjsd_s[,,j,i])) 
          tot_eASmasd_s [j,i] <- sum(sum(eASmasd_s[,,j,i])) 
        }
      }
    }
  }
}

avg_eAF1mu    <- rowMeans(tot_eAF1mu  )
avg_eAF2mu    <- rowMeans(tot_eAF2mu )
avg_eASfjmu_w1 <- rowMeans(tot_eASfjmu_w1 )
avg_eASfjmu_w2 <- rowMeans(tot_eASfjmu_w2 )
avg_eASfjmu_s  <- rowMeans(tot_eASfjmu_s )
avg_eASfjmu_h1 <- rowMeans(tot_eASfjmu_h1 )
avg_eASfjmu_h2 <- rowMeans(tot_eASfjmu_h2)
avg_eASfamu_h1 <- rowMeans( tot_eASfamu_h1)
avg_eASfamu_h2 <- rowMeans( tot_eASfamu_h2 )
avg_eASfamu_w1 <- rowMeans(tot_eASfamu_w1 )
avg_eASfamu_w2 <- rowMeans(tot_eASfamu_w2 )
avg_eASfamu_s  <- rowMeans(tot_eASfamu_s )

avg_eASmjmu_w1 <- rowMeans(tot_eASmjmu_w1 )
avg_eASmjmu_w2 <- rowMeans(tot_eASmjmu_w2 )
avg_eASmjmu_s  <- rowMeans(tot_eASmjmu_s )
avg_eASmjmu_h1 <- rowMeans(tot_eASmjmu_h1 )
avg_eASmjmu_h2 <- rowMeans(tot_eASmjmu_h2)
avg_eASmamu_h1 <- rowMeans(tot_eASmamu_h1)
avg_eASmamu_h2 <- rowMeans(tot_eASmamu_h2 )
avg_eASmamu_w1 <- rowMeans(tot_eASmamu_w1 )
avg_eASmamu_w2 <- rowMeans(tot_eASmamu_w2 )
avg_eASmamu_s  <- rowMeans(tot_eASmamu_s )

avg_eAF1sd    <-  rowMeans(tot_eAF1sd  )
avg_eAF2sd    <-  rowMeans(tot_eAF2sd )
avg_eASfjsd_w1 <-  rowMeans(tot_eASfjsd_w1 )
avg_eASfjsd_w2 <-  rowMeans(tot_eASfjsd_w2 )
avg_eASfjsd_s  <-  rowMeans(tot_eASfjsd_s )
avg_eASfjsd_h1 <-  rowMeans(tot_eASfjsd_h1 )
avg_eASfjsd_h2 <-  rowMeans(tot_eASfjsd_h2)
avg_eASfasd_h1 <- rowMeans( tot_eASfasd_h1)
avg_eASfasd_h2 <- rowMeans( tot_eASfasd_h2 )
avg_eASfasd_w1 <-  rowMeans(tot_eASfasd_w1 )
avg_eASfasd_w2 <-  rowMeans(tot_eASfasd_w2 )
avg_eASfasd_s  <-  rowMeans(tot_eASfasd_s )

avg_eASmjsd_w1 <-  rowMeans(tot_eASmjsd_w1 )
avg_eASmjsd_w2 <-  rowMeans(tot_eASmjsd_w2 )
avg_eASmjsd_s  <-  rowMeans(tot_eASmjsd_s )
avg_eASmjsd_h1 <-  rowMeans(tot_eASmjsd_h1 )
avg_eASmjsd_h2 <-  rowMeans(tot_eASmjsd_h2)
avg_eASmasd_h1 <-  rowMeans(tot_eASmasd_h1)
avg_eASmasd_h2 <-  rowMeans(tot_eASmasd_h2 )
avg_eASmasd_w1 <-  rowMeans(tot_eASmasd_w1 )
avg_eASmasd_w2 <-  rowMeans(tot_eASmasd_w2 )
avg_eASmasd_s  <-  rowMeans(tot_eASmasd_s )

# Compute real-time elasticities for the indirect effects of past change in  
# the lower-level vital rates that are channeled through perturbations to   
# stage structure.
I <- diag(S)             # Identity matrix
e <- matrix(1,S,1)       # vector of 1's
# indirect elasticities
enF1mu <- enF2mu <- enSfjwmu1 <- enSfjwmu2 <- enSfawmu1 <- enSfawmu2 <- enSfjhmu1 <- enSfjhmu2 <- enSfahmu1 <- enSfahmu2 <- enSfasmu <- enSfjsmu  <- 
  enF1sd <- enF2sd <- enSfjwsd1 <- enSfjwsd2 <- enSfawsd1 <- enSfawsd2 <- enSfjhsd1 <- enSfjhsd2 <- enSfahsd1 <- enSfahsd2 <- enSfassd <- enSfjssd  <- 
  enSmjwmu1 <- enSmjwmu2 <- enSmawmu1 <- enSmawmu2 <- enSmjhmu1 <- enSmjhmu2 <- enSmahmu1 <- enSmahmu2 <- enSmasmu <- enSmjsmu  <- 
  enSmjwsd1 <- enSmjwsd2 <- enSmawsd1 <- enSmawsd2 <- enSmjhsd1 <- enSmjhsd2 <- enSmahsd1 <- enSmahsd2 <- enSmassd <- enSmjssd  <- array(0,dim=c(S,S,samples,Time))


tot_enF1mu <- tot_enF2mu <- tot_enSfjwmu1 <- tot_enSfjwmu2 <- tot_enSfawmu1 <- tot_enSfawmu2 <- tot_enSfjhmu1 <- tot_enSfjhmu2 <- tot_enSfahmu1 <- tot_enSfahmu2 <- tot_enSfasmu <- tot_enSfjsmu  <- 
  tot_enF1sd <- tot_enF2sd <- tot_enSfjwsd1 <- tot_enSfjwsd2 <- tot_enSfawsd1 <- tot_enSfawsd2 <- tot_enSfjhsd1 <- tot_enSfjhsd2 <- tot_enSfahsd1 <- tot_enSfahsd2 <- tot_enSfassd <- tot_enSfjssd  <-
  tot_enSmjwmu1 <- tot_enSmjwmu2 <- tot_enSmawmu1 <- tot_enSmawmu2 <- tot_enSmjhmu1 <- tot_enSmjhmu2 <- tot_enSmahmu1 <- tot_enSmahmu2 <- tot_enSmasmu <- tot_enSmjsmu  <- 
  tot_enSmjwsd1 <- tot_enSmjwsd2 <- tot_enSmawsd1 <- tot_enSmawsd2 <- tot_enSmjhsd1 <- tot_enSmjhsd2 <- tot_enSmahsd1 <- tot_enSmahsd2 <- tot_enSmassd <- tot_enSmjssd  <-matrix(0,samples,Time)


for (j in 1:samples){
  # perturbation matrices
  C2F1 <- C2F2 <- C2Sfjw1 <- C2Sfjw2 <- C2Sfaw1 <- C2Sfaw2 <- C2Sfjh1 <- C2Sfjh2 <- C2Sfah1 <- C2Sfah2 <- C2Sfas <- C2Sfjs  <-C3F1 <- C3F2 <- C3Sfjw1 <- C3Sfjw2 <- C3Sfaw1 <- C3Sfaw2 <- C3Sfjh1 <- C3Sfjh2 <- C3Sfah1 <- C3Sfah2 <- C3Sfas <- C3Sfjs <-
    C2Smjw1 <- C2Smjw2 <- C2Smaw1 <- C2Smaw2 <- C2Smjh1 <- C2Smjh2 <- C2Smah1 <- C2Smah2 <- C2Smas <- C2Smjs                 <- C3Smjw1 <- C3Smjw2 <- C3Smaw1 <- C3Smaw2 <- C3Smjh1 <- C3Smjh2 <- C3Smah1 <- C3Smah2 <- C3Smas <- C3Smjs<-array(0,dim=c(S^2,S^2,Time)) 
  # perturbation to stage structure
  w_mu_F1 <- w_mu_F2 <- w_mu_Sfjw1 <- w_mu_Sfjw2 <- w_mu_Sfaw1 <- w_mu_Sfaw2 <- w_mu_Sfjh1 <- w_mu_Sfjh2 <- w_mu_Sfah1 <- w_mu_Sfah2 <- w_mu_Sfas <- w_mu_Sfjs  <-w_sd_F1 <- w_sd_F2 <- w_sd_Sfjw1 <- w_sd_Sfjw2 <- w_sd_Sfaw1 <- w_sd_Sfaw2 <- w_sd_Sfjh1 <- w_sd_Sfjh2 <- w_sd_Sfah1 <- w_sd_Sfah2 <- w_sd_Sfas <- w_sd_Sfjs  <- 
    w_mu_Smjw1 <- w_mu_Smjw2 <- w_mu_Smaw1 <- w_mu_Smaw2 <- w_mu_Smjh1 <- w_mu_Smjh2 <- w_mu_Smah1 <- w_mu_Smah2 <- w_mu_Smas <- w_mu_Smjs                       <- w_sd_Smjw1 <- w_sd_Smjw2 <- w_sd_Smaw1 <- w_sd_Smaw2 <- w_sd_Smjh1 <- w_sd_Smjh2 <- w_sd_Smah1 <- w_sd_Smah2 <- w_sd_Smas <- w_sd_Smjs  <- array(0,dim=c(S,S,S,Time+1)) 
  for (i in 1:Time){
    for(k in sp){ # manually change species
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s =  refSfj_s[j,i,k],
        Sfa_s =  refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s =  refSmj_s[j,i,k],
        Sma_s =  refSma_s[j,i,k],
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      mat_elements <- sapply(matrix.elements,eval,vr_list)
      A <- matrix(as.numeric(mat_elements[]),nrow=4,byrow=T)
      
      for (m in 1:S){
        for (n in 1:S){
          C2F1[(S+1)*m-S,(S+1)*n-S,i]   <- refF1mu[j,k]     * dA_dF1[m,n]
          C2F2[(S+1)*m-S,(S+1)*n-S,i]   <- refF2mu[j,k]     * dA_dF2[m,n]
          C2Sfjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n]
          C2Sfjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n]
          C2Sfaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w1[j,k] * dA_dSfaw1[m,n]
          C2Sfaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w2[j,k] * dA_dSfaw2[m,n]
          C2Sfjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n]
          C2Sfjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n]
          C2Sfah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h1[j,k] * dA_dSfah1[m,n]
          C2Sfah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h2[j,k] * dA_dSfah2[m,n]
          C2Sfas[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_s[j,k]  * dA_dSfas[m,n]
          C2Sfjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_s[j,k]  * dA_dSfjs[m,n]
          
          C3F1[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF1[j,i,k]     - refF1mu[j,k]    ) * dA_dF1[m,n]
          C3F2[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF2[j,i,k]     - refF2mu[j,k]    ) * dA_dF2[m,n]
          C3Sfjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n]
          C3Sfjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n]
          C3Sfaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n]
          C3Sfaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n]
          C3Sfjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n]
          C3Sfjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n]
          C3Sfah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n]
          C3Sfah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n]
          C3Sfas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfa_s[j,i,k]  - refSfamu_s[j,k] ) * dA_dSfas[m,n]
          C3Sfjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfj_s[j,i,k]  - refSfjmu_s[j,k] ) * dA_dSfjs[m,n]
          
          C2Smjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n]
          C2Smjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n]
          C2Smaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w1[j,k] * dA_dSmaw1[m,n]
          C2Smaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w2[j,k] * dA_dSmaw2[m,n]
          C2Smjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n]
          C2Smjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n]
          C2Smah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h1[j,k] * dA_dSmah1[m,n]
          C2Smah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h2[j,k] * dA_dSmah2[m,n]
          C2Smas[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_s[j,k]  * dA_dSmas[m,n]
          C2Smjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_s[j,k]  * dA_dSmjs[m,n]
          
          C3Smjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n]
          C3Smjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n]
          C3Smaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n]
          C3Smaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n]
          C3Smjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n]
          C3Smjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n]
          C3Smah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n]
          C3Smah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n]
          C3Smas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSma_s[j,i,k]  - refSmamu_s[j,k] ) * dA_dSmas[m,n]
          C3Smjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSmj_s[j,i,k]  - refSmjmu_s[j,k] ) * dA_dSmjs[m,n]
          
          
          K <- I - refn[,1,j,i+1,k]%*%t(e)  # intermediate steps
          B <- K %*% A / lam_realref[j,i,k]
          
          gF1_mu <-  K %*%     C2F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_mu <-  K %*%     C2F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_mu <-  K %*%   C2Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_mu <-  K %*%   C2Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_mu <-  K %*%   C2Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_mu <-  K %*%   C2Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_mu <-  K %*%   C2Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_mu <-  K %*%   C2Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_mu <-  K %*%   C2Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_mu <-  K %*%   C2Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_mu <-  K %*%    C2Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_mu <-  K %*%    C2Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gF1_sig <-  K %*%     C3F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_sig <-  K %*%     C3F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_sig <-  K %*%   C3Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_sig <-  K %*%   C3Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_sig <-  K %*%   C3Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_sig <-  K %*%   C3Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_sig <-  K %*%   C3Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_sig <-  K %*%   C3Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_sig <-  K %*%   C3Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_sig <-  K %*%   C3Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_sig <-  K %*%    C3Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_sig <-  K %*%    C3Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_mu <-  K %*%   C2Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_mu <-  K %*%   C2Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_mu <-  K %*%   C2Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_mu <-  K %*%   C2Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_mu <-  K %*%   C2Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_mu <-  K %*%   C2Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_mu <-  K %*%   C2Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_mu <-  K %*%   C2Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_mu <-  K %*%    C2Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_mu <-  K %*%    C2Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_sig <-  K %*%   C3Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_sig <-  K %*%   C3Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_sig <-  K %*%   C3Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_sig <-  K %*%   C3Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_sig <-  K %*%   C3Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_sig <-  K %*%   C3Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_sig <-  K %*%   C3Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_sig <-  K %*%   C3Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_sig <-  K %*%    C3Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_sig <-  K %*%    C3Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          w_mu_F1[,m,n,i+1]  <- B %*%  w_mu_F1[,m,n,i] +    gF1_mu  
          w_mu_F2[,m,n,i+1]  <- B %*%  w_mu_F2[,m,n,i] +    gF2_mu  
          w_mu_Sfjw1[,m,n,i+1]  <- B %*% w_mu_Sfjw1[,m,n,i] +  gSfjw1_mu  
          w_mu_Sfjw2[,m,n,i+1]  <- B %*% w_mu_Sfjw2[,m,n,i] +  gSfjw2_mu  
          w_mu_Sfaw1[,m,n,i+1]  <- B %*% w_mu_Sfaw1[,m,n,i] +  gSfaw1_mu  
          w_mu_Sfaw2[,m,n,i+1]  <- B %*% w_mu_Sfaw2[,m,n,i] +  gSfaw2_mu  
          w_mu_Sfjh1[,m,n,i+1]  <- B %*% w_mu_Sfjh1[,m,n,i] +  gSfjh1_mu  
          w_mu_Sfjh2[,m,n,i+1]  <- B %*% w_mu_Sfjh2[,m,n,i] +  gSfjh2_mu  
          w_mu_Sfah1[,m,n,i+1]  <- B %*% w_mu_Sfah1[,m,n,i] +  gSfah1_mu  
          w_mu_Sfah2[,m,n,i+1]  <- B %*% w_mu_Sfah2[,m,n,i] +  gSfah2_mu  
          w_mu_Sfas[,m,n,i+1]  <- B %*% w_mu_Sfas[,m,n,i] +   gSfas_mu  
          w_mu_Sfjs[,m,n,i+1]  <- B %*% w_mu_Sfjs[,m,n,i] +   gSfjs_mu  
          
          w_sd_F1[,m,n,i+1]   <- B %*%  w_sd_F1[,m,n,i] +    gF1_sig  
          w_sd_F2[,m,n,i+1]   <- B %*%  w_sd_F2[,m,n,i] +    gF2_sig  
          w_sd_Sfjw1[,m,n,i+1]  <- B %*% w_sd_Sfjw1[,m,n,i] +  gSfjw1_sig  
          w_sd_Sfjw2[,m,n,i+1]  <- B %*% w_sd_Sfjw2[,m,n,i] +  gSfjw2_sig  
          w_sd_Sfaw1[,m,n,i+1]  <- B %*% w_sd_Sfaw1[,m,n,i] +  gSfaw1_sig  
          w_sd_Sfaw2[,m,n,i+1]  <- B %*% w_sd_Sfaw2[,m,n,i] +  gSfaw2_sig  
          w_sd_Sfjh1[,m,n,i+1]  <- B %*% w_sd_Sfjh1[,m,n,i] +  gSfjh1_sig  
          w_sd_Sfjh2[,m,n,i+1]  <- B %*% w_sd_Sfjh2[,m,n,i] +  gSfjh2_sig  
          w_sd_Sfah1[,m,n,i+1]  <- B %*% w_sd_Sfah1[,m,n,i] +  gSfah1_sig  
          w_sd_Sfah2[,m,n,i+1]  <- B %*% w_sd_Sfah2[,m,n,i] +  gSfah2_sig  
          w_sd_Sfas[,m,n,i+1]   <- B %*% w_sd_Sfas[,m,n,i] +   gSfas_sig  
          w_sd_Sfjs[,m,n,i+1]   <- B %*% w_sd_Sfjs[,m,n,i] +   gSfjs_sig  
          
          w_mu_Smjw1[,m,n,i+1]  <- B %*% w_mu_Smjw1[,m,n,i] +  gSmjw1_mu  
          w_mu_Smjw2[,m,n,i+1]  <- B %*% w_mu_Smjw2[,m,n,i] +  gSmjw2_mu  
          w_mu_Smaw1[,m,n,i+1]  <- B %*% w_mu_Smaw1[,m,n,i] +  gSmaw1_mu  
          w_mu_Smaw2[,m,n,i+1]  <- B %*% w_mu_Smaw2[,m,n,i] +  gSmaw2_mu  
          w_mu_Smjh1[,m,n,i+1]  <- B %*% w_mu_Smjh1[,m,n,i] +  gSmjh1_mu  
          w_mu_Smjh2[,m,n,i+1]  <- B %*% w_mu_Smjh2[,m,n,i] +  gSmjh2_mu  
          w_mu_Smah1[,m,n,i+1]  <- B %*% w_mu_Smah1[,m,n,i] +  gSmah1_mu  
          w_mu_Smah2[,m,n,i+1]  <- B %*% w_mu_Smah2[,m,n,i] +  gSmah2_mu  
          w_mu_Smas[,m,n,i+1]  <- B %*% w_mu_Smas[,m,n,i] +   gSmas_mu  
          w_mu_Smjs[,m,n,i+1]  <- B %*% w_mu_Smjs[,m,n,i] +   gSmjs_mu  
          
          w_sd_Smjw1[,m,n,i+1]  <- B %*% w_sd_Smjw1[,m,n,i] +  gSmjw1_sig  
          w_sd_Smjw2[,m,n,i+1]  <- B %*% w_sd_Smjw2[,m,n,i] +  gSmjw2_sig  
          w_sd_Smaw1[,m,n,i+1]  <- B %*% w_sd_Smaw1[,m,n,i] +  gSmaw1_sig  
          w_sd_Smaw2[,m,n,i+1]  <- B %*% w_sd_Smaw2[,m,n,i] +  gSmaw2_sig  
          w_sd_Smjh1[,m,n,i+1]  <- B %*% w_sd_Smjh1[,m,n,i] +  gSmjh1_sig  
          w_sd_Smjh2[,m,n,i+1]  <- B %*% w_sd_Smjh2[,m,n,i] +  gSmjh2_sig  
          w_sd_Smah1[,m,n,i+1]  <- B %*% w_sd_Smah1[,m,n,i] +  gSmah1_sig  
          w_sd_Smah2[,m,n,i+1]  <- B %*% w_sd_Smah2[,m,n,i] +  gSmah2_sig  
          w_sd_Smas[,m,n,i+1]   <- B %*% w_sd_Smas[,m,n,i] +   gSmas_sig  
          w_sd_Smjs[,m,n,i+1]   <- B %*% w_sd_Smjs[,m,n,i] +   gSmjs_sig  
          
          # Equation 3 Koons et al. 2017, e^n_mu
          enF1mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1mu [j,i] <-  sum(sum(enF1mu [,,j,i]))
          tot_enF2mu [j,i] <-  sum(sum(enF2mu [,,j,i]))
          tot_enSfjwmu1[j,i] <- sum(sum(enSfjwmu1[,,j,i]))
          tot_enSfjwmu2[j,i] <- sum(sum(enSfjwmu2[,,j,i]))
          tot_enSfawmu1[j,i] <- sum(sum(enSfawmu1[,,j,i]))
          tot_enSfawmu2[j,i] <- sum(sum(enSfawmu2[,,j,i]))
          tot_enSfjhmu1[j,i] <- sum(sum(enSfjhmu1[,,j,i]))
          tot_enSfjhmu2[j,i] <- sum(sum(enSfjhmu2[,,j,i]))
          tot_enSfahmu1[j,i] <- sum(sum(enSfahmu1[,,j,i]))
          tot_enSfahmu2[j,i] <- sum(sum(enSfahmu2[,,j,i]))
          tot_enSfasmu[j,i] <-  sum(sum(enSfasmu[,,j,i]))
          
          enSmjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwmu1[j,i] <- sum(sum(enSmjwmu1[,,j,i]))
          tot_enSmjwmu2[j,i] <- sum(sum(enSmjwmu2[,,j,i]))
          tot_enSmawmu1[j,i] <- sum(sum(enSmawmu1[,,j,i]))
          tot_enSmawmu2[j,i] <- sum(sum(enSmawmu2[,,j,i]))
          tot_enSmjhmu1[j,i] <- sum(sum(enSmjhmu1[,,j,i]))
          tot_enSmjhmu2[j,i] <- sum(sum(enSmjhmu2[,,j,i]))
          tot_enSmahmu1[j,i] <- sum(sum(enSmahmu1[,,j,i]))
          tot_enSmahmu2[j,i] <- sum(sum(enSmahmu2[,,j,i]))
          tot_enSmasmu[j,i] <-  sum(sum(enSmasmu[,,j,i]))
          
          
          # Equation 3 Koons et al. 2017, e^n_sd
          enF1sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1sd [j,i] <-  sum(sum(enF1sd [,,j,i]))
          tot_enF2sd [j,i] <-  sum(sum(enF2sd [,,j,i]))
          tot_enSfjwsd1[j,i] <- sum(sum(enSfjwsd1[,,j,i]))
          tot_enSfjwsd2[j,i] <- sum(sum(enSfjwsd2[,,j,i]))
          tot_enSfawsd1[j,i] <- sum(sum(enSfawsd1[,,j,i]))
          tot_enSfawsd2[j,i] <- sum(sum(enSfawsd2[,,j,i]))
          tot_enSfjhsd1[j,i] <- sum(sum(enSfjhsd1[,,j,i]))
          tot_enSfjhsd2[j,i] <- sum(sum(enSfjhsd2[,,j,i]))
          tot_enSfahsd1[j,i] <- sum(sum(enSfahsd1[,,j,i]))
          tot_enSfahsd2[j,i] <- sum(sum(enSfahsd2[,,j,i]))
          tot_enSfassd[j,i] <-  sum(sum(enSfassd[,,j,i]))
          tot_enSfjssd[j,i] <-  sum(sum(enSfjssd[,,j,i]))
          
          enSmjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwsd1[j,i] <- sum(sum(enSmjwsd1[,,j,i]))
          tot_enSmjwsd2[j,i] <- sum(sum(enSmjwsd2[,,j,i]))
          tot_enSmawsd1[j,i] <- sum(sum(enSmawsd1[,,j,i]))
          tot_enSmawsd2[j,i] <- sum(sum(enSmawsd2[,,j,i]))
          tot_enSmjhsd1[j,i] <- sum(sum(enSmjhsd1[,,j,i]))
          tot_enSmjhsd2[j,i] <- sum(sum(enSmjhsd2[,,j,i]))
          tot_enSmahsd1[j,i] <- sum(sum(enSmahsd1[,,j,i]))
          tot_enSmahsd2[j,i] <- sum(sum(enSmahsd2[,,j,i]))
          tot_enSmassd[j,i] <-  sum(sum(enSmassd[,,j,i]))
          tot_enSmjssd[j,i] <-  sum(sum(enSmjssd[,,j,i]))
          
        }
      }
    }
  }
}



avg_enF1mu  <- rowMeans( tot_enF1mu )
avg_enF2mu  <- rowMeans( tot_enF2mu )
avg_enSfjwmu1 <- rowMeans(tot_enSfjwmu1)
avg_enSfjwmu2 <- rowMeans(tot_enSfjwmu2)
avg_enSfawmu1 <- rowMeans(tot_enSfawmu1)
avg_enSfawmu2 <- rowMeans(tot_enSfawmu2)
avg_enSfjhmu1 <- rowMeans(tot_enSfjhmu1)
avg_enSfjhmu2 <- rowMeans(tot_enSfjhmu2)
avg_enSfahmu1 <- rowMeans(tot_enSfahmu1)
avg_enSfahmu2 <- rowMeans(tot_enSfahmu2)
avg_enSfasmu <- rowMeans( tot_enSfasmu)
avg_enSfjsmu <- rowMeans( tot_enSfjsmu)
avg_enSmjwmu1 <- rowMeans(tot_enSmjwmu1)
avg_enSmjwmu2 <- rowMeans(tot_enSmjwmu2)
avg_enSmawmu1 <- rowMeans(tot_enSmawmu1)
avg_enSmawmu2 <- rowMeans(tot_enSmawmu2)
avg_enSmjhmu1 <- rowMeans(tot_enSmjhmu1)
avg_enSmjhmu2 <- rowMeans(tot_enSmjhmu2)
avg_enSmahmu1 <- rowMeans(tot_enSmahmu1)
avg_enSmahmu2 <- rowMeans(tot_enSmahmu2)
avg_enSmasmu <- rowMeans( tot_enSmasmu)
avg_enSmjsmu <- rowMeans( tot_enSmjsmu)

avg_enF1sd  <-  rowMeans( tot_enF1sd )

avg_enF2sd  <-  rowMeans( tot_enF2sd )
avg_enSfjwsd1 <- rowMeans(tot_enSfjwsd1)
avg_enSfjwsd2 <- rowMeans(tot_enSfjwsd2)
avg_enSfawsd1 <- rowMeans(tot_enSfawsd1)
avg_enSfawsd2 <- rowMeans(tot_enSfawsd2)
avg_enSfjhsd1 <- rowMeans(tot_enSfjhsd1)
avg_enSfjhsd2 <- rowMeans(tot_enSfjhsd2)
avg_enSfahsd1 <- rowMeans(tot_enSfahsd1)
avg_enSfahsd2 <- rowMeans(tot_enSfahsd2)
avg_enSfassd <- rowMeans( tot_enSfassd)
avg_enSfjssd <- rowMeans( tot_enSfjssd)

avg_enSmjwsd1 <- rowMeans(tot_enSmjwsd1)
avg_enSmjwsd2 <- rowMeans(tot_enSmjwsd2)
avg_enSmawsd1 <- rowMeans(tot_enSmawsd1)
avg_enSmawsd2 <- rowMeans(tot_enSmawsd2)
avg_enSmjhsd1 <- rowMeans(tot_enSmjhsd1)
avg_enSmjhsd2 <- rowMeans(tot_enSmjhsd2)
avg_enSmahsd1 <- rowMeans(tot_enSmahsd1)
avg_enSmahsd2 <- rowMeans(tot_enSmahsd2)
avg_enSmassd <- rowMeans( tot_enSmassd)
avg_enSmjssd <- rowMeans( tot_enSmjssd)

# Step 9: Calculate vital rate contributions to the difference in geometric mean rates of population growth between time periods. This is a function of 
# logged differences in mean of vital rates, logged differences in s.d. of  vital rates, as channeled through direct effects of perturbations to the   
# moments and indirect effects of perturbations to these moments channeled through changes in population structure over time.
cont_A_F1mu  <- cont_A_F2mu <- cont_A_Sfjmu_w1 <- cont_A_Sfjmu_w2 <- cont_A_Sfjmu_s <- cont_A_Sfjmu_h1 <- cont_A_Sfjmu_h2 <- cont_A_Sfamu_h1 <- cont_A_Sfamu_h2 <- cont_A_Sfamu_w1 <- cont_A_Sfamu_w2 <- cont_A_Sfamu_s <- 
  cont_A_F1sd  <- cont_A_F2sd <- cont_A_Sfjsd_w1 <- cont_A_Sfjsd_w2 <- cont_A_Sfjsd_s <- cont_A_Sfjsd_h1 <- cont_A_Sfjsd_h2 <- cont_A_Sfasd_h1 <- cont_A_Sfasd_h2 <- cont_A_Sfasd_w1 <- cont_A_Sfasd_w2 <- cont_A_Sfasd_s <-
  cont_n_F1mu  <- cont_n_F2mu <- cont_n_Sfjmu_w1 <- cont_n_Sfjmu_w2 <- cont_n_Sfjmu_s <- cont_n_Sfjmu_h1 <- cont_n_Sfjmu_h2 <- cont_n_Sfamu_h1 <- cont_n_Sfamu_h2 <- cont_n_Sfamu_w1 <- cont_n_Sfamu_w2 <- cont_n_Sfamu_s <- 
  cont_n_F1sd  <- cont_n_F2sd <- cont_n_Sfjsd_w1 <- cont_n_Sfjsd_w2 <- cont_n_Sfjsd_s <- cont_n_Sfjsd_h1 <- cont_n_Sfjsd_h2 <- cont_n_Sfasd_h1 <- cont_n_Sfasd_h2 <- cont_n_Sfasd_w1 <- cont_n_Sfasd_w2 <- cont_n_Sfasd_s <- 
  cont_A_Smjmu_w1 <- cont_A_Smjmu_w2 <- cont_A_Smjmu_s <- cont_A_Smjmu_h1 <- cont_A_Smjmu_h2 <- cont_A_Smamu_h1 <- cont_A_Smamu_h2 <- cont_A_Smamu_w1 <- cont_A_Smamu_w2 <- cont_A_Smamu_s <- 
  cont_A_Smjsd_w1 <- cont_A_Smjsd_w2 <- cont_A_Smjsd_s <- cont_A_Smjsd_h1 <- cont_A_Smjsd_h2 <- cont_A_Smasd_h1 <- cont_A_Smasd_h2 <- cont_A_Smasd_w1 <- cont_A_Smasd_w2 <- cont_A_Smasd_s <-
  cont_n_Smjmu_w1 <- cont_n_Smjmu_w2 <- cont_n_Smjmu_s <- cont_n_Smjmu_h1 <- cont_n_Smjmu_h2 <- cont_n_Smamu_h1 <- cont_n_Smamu_h2 <- cont_n_Smamu_w1 <- cont_n_Smamu_w2 <- cont_n_Smamu_s <- 
  cont_n_Smjsd_w1 <- cont_n_Smjsd_w2 <- cont_n_Smjsd_s <- cont_n_Smjsd_h1 <- cont_n_Smjsd_h2 <- cont_n_Smasd_h1 <- cont_n_Smasd_h2 <- cont_n_Smasd_w1 <- cont_n_Smasd_w2 <- cont_n_Smasd_s <- matrix(NA,samples,1)

# Equation 3; Koons et al. 2017
for (j in 1:samples){
  for(k in sp){
    
    cont_A_F1mu[j] <-         logF1mudiff[j,k] *      avg_eAF1mu[j]       
    cont_A_F2mu[j] <-         logF2mudiff[j,k] *      avg_eAF2mu[j]       
    cont_A_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *  avg_eASfjmu_w1[j] 
    cont_A_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *  avg_eASfamu_w1[j] 
    cont_A_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *  avg_eASfjmu_h1[j]  
    cont_A_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *  avg_eASfamu_h1[j] 
    cont_A_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *  avg_eASfjmu_w2[j] 
    cont_A_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *  avg_eASfamu_w2[j] 
    cont_A_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *  avg_eASfjmu_h2[j] 
    cont_A_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *  avg_eASfamu_h2[j] 
    cont_A_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *   avg_eASfjmu_s[j] 
    cont_A_Sfamu_s[j] <-      logSfa_smudiff[j,k] *   avg_eASfamu_s[j]  
    
    cont_A_F1sd[j] <-            logF1sigdiff[j,k] *      avg_eAF1sd[j]       
    cont_A_F2sd[j] <-            logF2sigdiff[j,k] *      avg_eAF2sd[j]       
    cont_A_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_eASfjsd_w1[j] 
    cont_A_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_eASfasd_w1[j] 
    cont_A_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_eASfjsd_h1[j]  
    cont_A_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_eASfasd_h1[j] 
    cont_A_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_eASfjsd_w2[j] 
    cont_A_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_eASfasd_w2[j] 
    cont_A_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_eASfjsd_h2[j] 
    cont_A_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_eASfasd_h2[j] 
    cont_A_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *   avg_eASfjsd_s[j] 
    cont_A_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *   avg_eASfasd_s[j]  
    
    
    cont_n_F1mu[j] <-         logF1mudiff[j,k] *       avg_enF1mu  [j]   
    cont_n_F2mu[j] <-         logF2mudiff[j,k] *       avg_enF2mu  [j]   
    cont_n_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *   avg_enSfjwmu1[j] 
    cont_n_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *   avg_enSfjwmu2[j] 
    cont_n_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *   avg_enSfawmu1[j]  
    cont_n_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *   avg_enSfawmu2[j] 
    cont_n_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *   avg_enSfjhmu1[j] 
    cont_n_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *   avg_enSfjhmu2[j] 
    cont_n_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *   avg_enSfahmu1[j] 
    cont_n_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *   avg_enSfahmu2[j] 
    cont_n_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *    avg_enSfasmu [j]
    cont_n_Sfamu_s[j] <-      logSfa_smudiff[j,k] *    avg_enSfjsmu [j] 
    
    cont_n_F1sd[j] <-            logF1sigdiff[j,k] *   avg_enF1sd  [j]
    cont_n_F2sd[j] <-            logF2sigdiff[j,k] *   avg_enF2sd  [j]
    cont_n_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_enSfjwsd1[j]
    cont_n_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_enSfjwsd2[j]
    cont_n_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_enSfawsd1[j]
    cont_n_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_enSfawsd2[j]
    cont_n_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_enSfjhsd1[j]
    cont_n_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_enSfjhsd2[j]
    cont_n_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_enSfahsd1[j]
    cont_n_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_enSfahsd2[j]
    cont_n_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *  avg_enSfassd [j]
    cont_n_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *  avg_enSfjssd [j]
    ###
    
    cont_A_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *  avg_eASmjmu_w1[j] 
    cont_A_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *  avg_eASmamu_w1[j] 
    cont_A_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *  avg_eASmjmu_h1[j]  
    cont_A_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *  avg_eASmamu_h1[j] 
    cont_A_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *  avg_eASmjmu_w2[j] 
    cont_A_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *  avg_eASmamu_w2[j] 
    cont_A_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *  avg_eASmjmu_h2[j] 
    cont_A_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *  avg_eASmamu_h2[j] 
    cont_A_Smjmu_s[j] <-      logSmj_smudiff[j,k] *   avg_eASmjmu_s[j] 
    cont_A_Smamu_s[j] <-      logSma_smudiff[j,k] *   avg_eASmamu_s[j]  
    
    cont_A_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_eASmjsd_w1[j] 
    cont_A_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_eASmasd_w1[j] 
    cont_A_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_eASmjsd_h1[j]  
    cont_A_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_eASmasd_h1[j] 
    cont_A_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_eASmjsd_w2[j] 
    cont_A_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_eASmasd_w2[j] 
    cont_A_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_eASmjsd_h2[j] 
    cont_A_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_eASmasd_h2[j] 
    cont_A_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *   avg_eASmjsd_s[j] 
    cont_A_Smasd_s[j] <-       logSma_ssigdiff[j,k] *   avg_eASmasd_s[j]  
    
    cont_n_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *   avg_enSmjwmu1[j] 
    cont_n_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *   avg_enSmjwmu2[j] 
    cont_n_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *   avg_enSmawmu1[j]  
    cont_n_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *   avg_enSmawmu2[j] 
    cont_n_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *   avg_enSmjhmu1[j] 
    cont_n_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *   avg_enSmjhmu2[j] 
    cont_n_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *   avg_enSmahmu1[j] 
    cont_n_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *   avg_enSmahmu2[j] 
    cont_n_Smjmu_s[j] <-      logSmj_smudiff[j,k] *    avg_enSmasmu [j]
    cont_n_Smamu_s[j] <-      logSma_smudiff[j,k] *    avg_enSmjsmu [j] 
    
    cont_n_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_enSmjwsd1[j]
    cont_n_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_enSmjwsd2[j]
    cont_n_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_enSmawsd1[j]
    cont_n_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_enSmawsd2[j]
    cont_n_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_enSmjhsd1[j]
    cont_n_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_enSmjhsd2[j]
    cont_n_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_enSmahsd1[j]
    cont_n_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_enSmahsd2[j]
    cont_n_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *  avg_enSmassd [j]
    cont_n_Smasd_s[j] <-       logSma_ssigdiff[j,k] *  avg_enSmjssd [j]
  }
}

# Total effect of shifts in the mean vital rate (A_mu), its variance [A_sd], or the indirect effects of demographic rates channeled through shifts in the mean (n_mu) or variance (n_sd) population structure
totF1 <- cont_A_F1mu + cont_A_F1sd + cont_n_F1mu + cont_n_F1sd
totF2 <- cont_A_F2mu + cont_A_F2sd + cont_n_F2mu + cont_n_F2sd
totF  <- totF1 + totF2

tot_Sf_w_j_1 <- cont_A_Sfjmu_w1 + cont_A_Sfjsd_w1 + cont_n_Sfjmu_w1 + cont_n_Sfjsd_w1 
tot_Sf_w_j_2 <- cont_A_Sfjmu_w2 + cont_A_Sfjsd_w2 + cont_n_Sfjmu_w2 + cont_n_Sfjsd_w2
tot_Sf_2_j_1 <- cont_A_Sfjmu_s + cont_A_Sfjsd_s + cont_n_Sfjmu_s + cont_n_Sfjsd_s
tot_Sf_h_j_1 <- cont_A_Sfjmu_h1 + cont_A_Sfjsd_h1 + cont_n_Sfjmu_h1 + cont_n_Sfjsd_h1
tot_Sf_h_j_2 <- cont_A_Sfjmu_h2 + cont_A_Sfjsd_h2 + cont_n_Sfjmu_h2 + cont_n_Sfjsd_h2
tot_Sf_h_a_1 <- cont_A_Sfamu_h1 + cont_A_Sfasd_h1 + cont_n_Sfamu_h1 + cont_n_Sfasd_h1
tot_Sf_h_a_2 <- cont_A_Sfamu_h2 + cont_A_Sfasd_h2 + cont_n_Sfamu_h2 + cont_n_Sfasd_h2
tot_Sf_w_a_1 <- cont_A_Sfamu_w1 + cont_A_Sfasd_w1 + cont_n_Sfamu_w1 + cont_n_Sfasd_w1
tot_Sf_w_a_2 <- cont_A_Sfamu_w2 + cont_A_Sfasd_w2 + cont_n_Sfamu_w2 + cont_n_Sfasd_w2
tot_Sf_2_2_1 <- cont_A_Sfamu_s + cont_A_Sfasd_s + cont_n_Sfamu_s + cont_n_Sfasd_s

tot_Sm_w_j_1 <- cont_A_Smjmu_w1 + cont_A_Smjsd_w1 + cont_n_Smjmu_w1 + cont_n_Smjsd_w1 
tot_Sm_w_j_2 <- cont_A_Smjmu_w2 + cont_A_Smjsd_w2 + cont_n_Smjmu_w2 + cont_n_Smjsd_w2
tot_Sm_2_j_1 <- cont_A_Smjmu_s + cont_A_Smjsd_s + cont_n_Smjmu_s + cont_n_Smjsd_s
tot_Sm_h_j_1 <- cont_A_Smjmu_h1 + cont_A_Smjsd_h1 + cont_n_Smjmu_h1 + cont_n_Smjsd_h1
tot_Sm_h_j_2 <- cont_A_Smjmu_h2 + cont_A_Smjsd_h2 + cont_n_Smjmu_h2 + cont_n_Smjsd_h2
tot_Sm_h_a_1 <- cont_A_Smamu_h1 + cont_A_Smasd_h1 + cont_n_Smamu_h1 + cont_n_Smasd_h1
tot_Sm_h_a_2 <- cont_A_Smamu_h2 + cont_A_Smasd_h2 + cont_n_Smamu_h2 + cont_n_Smasd_h2
tot_Sm_w_a_1 <- cont_A_Smamu_w1 + cont_A_Smasd_w1 + cont_n_Smamu_w1 + cont_n_Smasd_w1
tot_Sm_w_a_2 <- cont_A_Smamu_w2 + cont_A_Smasd_w2 + cont_n_Smamu_w2 + cont_n_Smasd_w2
tot_Sm_2_2_1 <- cont_A_Smamu_s + cont_A_Smasd_s + cont_n_Smamu_s + cont_n_Smasd_s

cont_time_north_1 <- rbind.data.frame(
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'Total', value = 'Total', mean = mean(totF1      ), lower = quantile(totF1      ,probs = 0.05),upper = quantile(totF1      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'Total', value = 'Total', mean = mean(totF2      ), lower = quantile(totF2      ,probs = 0.05),upper = quantile(totF2      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_1), lower = quantile(tot_Sf_w_j_1,probs = 0.05),upper = quantile(tot_Sf_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_1), lower = quantile(tot_Sf_w_a_1,probs = 0.05),upper = quantile(tot_Sf_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_1), lower = quantile(tot_Sf_h_j_1,probs = 0.05),upper = quantile(tot_Sf_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_1), lower = quantile(tot_Sf_h_a_1,probs = 0.05),upper = quantile(tot_Sf_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_2), lower = quantile(tot_Sf_w_j_2,probs = 0.05),upper = quantile(tot_Sf_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_2), lower = quantile(tot_Sf_w_a_2,probs = 0.05),upper = quantile(tot_Sf_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_2), lower = quantile(tot_Sf_h_j_2,probs = 0.05),upper = quantile(tot_Sf_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_2), lower = quantile(tot_Sf_h_a_2,probs = 0.05),upper = quantile(tot_Sf_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_j_1), lower = quantile(tot_Sf_2_j_1,probs = 0.05),upper = quantile(tot_Sf_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_2_1), lower = quantile(tot_Sf_2_2_1,probs = 0.05),upper = quantile(tot_Sf_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'mu', mean = mean(cont_A_F1mu    ), lower = quantile(cont_A_F1mu    ,probs = 0.05),upper = quantile(cont_A_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'mu', mean = mean(cont_A_F2mu    ), lower = quantile(cont_A_F2mu    ,probs = 0.05),upper = quantile(cont_A_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w1), lower = quantile(cont_A_Sfjmu_w1,probs = 0.05),upper = quantile(cont_A_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w1), lower = quantile(cont_A_Sfamu_w1,probs = 0.05),upper = quantile(cont_A_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h1), lower = quantile(cont_A_Sfjmu_h1,probs = 0.05),upper = quantile(cont_A_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h1), lower = quantile(cont_A_Sfamu_h1,probs = 0.05),upper = quantile(cont_A_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w2), lower = quantile(cont_A_Sfjmu_w2,probs = 0.05),upper = quantile(cont_A_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w2), lower = quantile(cont_A_Sfamu_w2,probs = 0.05),upper = quantile(cont_A_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h2), lower = quantile(cont_A_Sfjmu_h2,probs = 0.05),upper = quantile(cont_A_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h2), lower = quantile(cont_A_Sfamu_h2,probs = 0.05),upper = quantile(cont_A_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_s ), lower = quantile(cont_A_Sfjmu_s ,probs = 0.05),upper = quantile(cont_A_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_s ), lower = quantile(cont_A_Sfamu_s ,probs = 0.05),upper = quantile(cont_A_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'sd', mean = mean(cont_A_F1sd    ), lower = quantile(cont_A_F1sd    ,probs = 0.05),upper = quantile(cont_A_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'sd', mean = mean(cont_A_F2sd    ), lower = quantile(cont_A_F2sd    ,probs = 0.05),upper = quantile(cont_A_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w1), lower = quantile(cont_A_Sfjsd_w1,probs = 0.05),upper = quantile(cont_A_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w1), lower = quantile(cont_A_Sfasd_w1,probs = 0.05),upper = quantile(cont_A_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h1), lower = quantile(cont_A_Sfjsd_h1,probs = 0.05),upper = quantile(cont_A_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h1), lower = quantile(cont_A_Sfasd_h1,probs = 0.05),upper = quantile(cont_A_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w2), lower = quantile(cont_A_Sfjsd_w2,probs = 0.05),upper = quantile(cont_A_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w2), lower = quantile(cont_A_Sfasd_w2,probs = 0.05),upper = quantile(cont_A_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h2), lower = quantile(cont_A_Sfjsd_h2,probs = 0.05),upper = quantile(cont_A_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h2), lower = quantile(cont_A_Sfasd_h2,probs = 0.05),upper = quantile(cont_A_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_s ), lower = quantile(cont_A_Sfjsd_s ,probs = 0.05),upper = quantile(cont_A_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_s ), lower = quantile(cont_A_Sfasd_s ,probs = 0.05),upper = quantile(cont_A_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'mu', mean = mean(cont_n_F1mu    ), lower = quantile(cont_n_F1mu    ,probs = 0.05),upper = quantile(cont_n_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'mu', mean = mean(cont_n_F2mu    ), lower = quantile(cont_n_F2mu    ,probs = 0.05),upper = quantile(cont_n_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w1), lower = quantile(cont_n_Sfjmu_w1,probs = 0.05),upper = quantile(cont_n_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w1), lower = quantile(cont_n_Sfamu_w1,probs = 0.05),upper = quantile(cont_n_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h1), lower = quantile(cont_n_Sfjmu_h1,probs = 0.05),upper = quantile(cont_n_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h1), lower = quantile(cont_n_Sfamu_h1,probs = 0.05),upper = quantile(cont_n_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w2), lower = quantile(cont_n_Sfjmu_w2,probs = 0.05),upper = quantile(cont_n_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w2), lower = quantile(cont_n_Sfamu_w2,probs = 0.05),upper = quantile(cont_n_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h2), lower = quantile(cont_n_Sfjmu_h2,probs = 0.05),upper = quantile(cont_n_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h2), lower = quantile(cont_n_Sfamu_h2,probs = 0.05),upper = quantile(cont_n_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_s ), lower = quantile(cont_n_Sfjmu_s ,probs = 0.05),upper = quantile(cont_n_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_s ), lower = quantile(cont_n_Sfamu_s ,probs = 0.05),upper = quantile(cont_n_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'sd', mean = mean(cont_n_F1sd    ), lower = quantile(cont_n_F1sd    ,probs = 0.05),upper = quantile(cont_n_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'sd', mean = mean(cont_n_F2sd    ), lower = quantile(cont_n_F2sd    ,probs = 0.05),upper = quantile(cont_n_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w1), lower = quantile(cont_n_Sfjsd_w1,probs = 0.05),upper = quantile(cont_n_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w1), lower = quantile(cont_n_Sfasd_w1,probs = 0.05),upper = quantile(cont_n_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h1), lower = quantile(cont_n_Sfjsd_h1,probs = 0.05),upper = quantile(cont_n_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h1), lower = quantile(cont_n_Sfasd_h1,probs = 0.05),upper = quantile(cont_n_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w2), lower = quantile(cont_n_Sfjsd_w2,probs = 0.05),upper = quantile(cont_n_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w2), lower = quantile(cont_n_Sfasd_w2,probs = 0.05),upper = quantile(cont_n_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h2), lower = quantile(cont_n_Sfjsd_h2,probs = 0.05),upper = quantile(cont_n_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h2), lower = quantile(cont_n_Sfasd_h2,probs = 0.05),upper = quantile(cont_n_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_s ), lower = quantile(cont_n_Sfjsd_s ,probs = 0.05),upper = quantile(cont_n_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_s ), lower = quantile(cont_n_Sfasd_s ,probs = 0.05),upper = quantile(cont_n_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_1), lower = quantile(tot_Sm_w_j_1,probs = 0.05),upper = quantile(tot_Sm_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_1), lower = quantile(tot_Sm_w_a_1,probs = 0.05),upper = quantile(tot_Sm_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_1), lower = quantile(tot_Sm_h_j_1,probs = 0.05),upper = quantile(tot_Sm_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_1), lower = quantile(tot_Sm_h_a_1,probs = 0.05),upper = quantile(tot_Sm_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_2), lower = quantile(tot_Sm_w_j_2,probs = 0.05),upper = quantile(tot_Sm_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_2), lower = quantile(tot_Sm_w_a_2,probs = 0.05),upper = quantile(tot_Sm_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_2), lower = quantile(tot_Sm_h_j_2,probs = 0.05),upper = quantile(tot_Sm_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_2), lower = quantile(tot_Sm_h_a_2,probs = 0.05),upper = quantile(tot_Sm_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_j_1), lower = quantile(tot_Sm_2_j_1,probs = 0.05),upper = quantile(tot_Sm_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_2_1), lower = quantile(tot_Sm_2_2_1,probs = 0.05),upper = quantile(tot_Sm_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w1), lower = quantile(cont_A_Smjmu_w1,probs = 0.05),upper = quantile(cont_A_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w1), lower = quantile(cont_A_Smamu_w1,probs = 0.05),upper = quantile(cont_A_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h1), lower = quantile(cont_A_Smjmu_h1,probs = 0.05),upper = quantile(cont_A_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h1), lower = quantile(cont_A_Smamu_h1,probs = 0.05),upper = quantile(cont_A_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w2), lower = quantile(cont_A_Smjmu_w2,probs = 0.05),upper = quantile(cont_A_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w2), lower = quantile(cont_A_Smamu_w2,probs = 0.05),upper = quantile(cont_A_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h2), lower = quantile(cont_A_Smjmu_h2,probs = 0.05),upper = quantile(cont_A_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h2), lower = quantile(cont_A_Smamu_h2,probs = 0.05),upper = quantile(cont_A_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_s ), lower = quantile(cont_A_Smjmu_s ,probs = 0.05),upper = quantile(cont_A_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_s ), lower = quantile(cont_A_Smamu_s ,probs = 0.05),upper = quantile(cont_A_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w1), lower = quantile(cont_A_Smjsd_w1,probs = 0.05),upper = quantile(cont_A_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w1), lower = quantile(cont_A_Smasd_w1,probs = 0.05),upper = quantile(cont_A_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h1), lower = quantile(cont_A_Smjsd_h1,probs = 0.05),upper = quantile(cont_A_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h1), lower = quantile(cont_A_Smasd_h1,probs = 0.05),upper = quantile(cont_A_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w2), lower = quantile(cont_A_Smjsd_w2,probs = 0.05),upper = quantile(cont_A_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w2), lower = quantile(cont_A_Smasd_w2,probs = 0.05),upper = quantile(cont_A_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h2), lower = quantile(cont_A_Smjsd_h2,probs = 0.05),upper = quantile(cont_A_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h2), lower = quantile(cont_A_Smasd_h2,probs = 0.05),upper = quantile(cont_A_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_s ), lower = quantile(cont_A_Smjsd_s ,probs = 0.05),upper = quantile(cont_A_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_s ), lower = quantile(cont_A_Smasd_s ,probs = 0.05),upper = quantile(cont_A_Smasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w1), lower = quantile(cont_n_Smjmu_w1,probs = 0.05),upper = quantile(cont_n_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w1), lower = quantile(cont_n_Smamu_w1,probs = 0.05),upper = quantile(cont_n_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h1), lower = quantile(cont_n_Smjmu_h1,probs = 0.05),upper = quantile(cont_n_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h1), lower = quantile(cont_n_Smamu_h1,probs = 0.05),upper = quantile(cont_n_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w2), lower = quantile(cont_n_Smjmu_w2,probs = 0.05),upper = quantile(cont_n_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w2), lower = quantile(cont_n_Smamu_w2,probs = 0.05),upper = quantile(cont_n_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h2), lower = quantile(cont_n_Smjmu_h2,probs = 0.05),upper = quantile(cont_n_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h2), lower = quantile(cont_n_Smamu_h2,probs = 0.05),upper = quantile(cont_n_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_s ), lower = quantile(cont_n_Smjmu_s ,probs = 0.05),upper = quantile(cont_n_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_s ), lower = quantile(cont_n_Smamu_s ,probs = 0.05),upper = quantile(cont_n_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w1), lower = quantile(cont_n_Smjsd_w1,probs = 0.05),upper = quantile(cont_n_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w1), lower = quantile(cont_n_Smasd_w1,probs = 0.05),upper = quantile(cont_n_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h1), lower = quantile(cont_n_Smjsd_h1,probs = 0.05),upper = quantile(cont_n_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h1), lower = quantile(cont_n_Smasd_h1,probs = 0.05),upper = quantile(cont_n_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w2), lower = quantile(cont_n_Smjsd_w2,probs = 0.05),upper = quantile(cont_n_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w2), lower = quantile(cont_n_Smasd_w2,probs = 0.05),upper = quantile(cont_n_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h2), lower = quantile(cont_n_Smjsd_h2,probs = 0.05),upper = quantile(cont_n_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h2), lower = quantile(cont_n_Smasd_h2,probs = 0.05),upper = quantile(cont_n_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_s ), lower = quantile(cont_n_Smjsd_s ,probs = 0.05),upper = quantile(cont_n_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_s ), lower = quantile(cont_n_Smasd_s ,probs = 0.05),upper = quantile(cont_n_Smasd_s ,probs = 0.95))
  
)

tot_fec <- totF
tot_fwhy <- tot_Sf_w_j_1 + tot_Sf_w_j_2
tot_fwah <- tot_Sf_w_a_1 + tot_Sf_w_a_2
tot_fssy <- tot_Sf_2_j_1
tot_fsas <- tot_Sf_2_2_1
tot_fhhy <- tot_Sf_h_j_1 + tot_Sf_h_j_2
tot_fhah <- tot_Sf_h_a_1 + tot_Sf_h_a_2
tot_mwhy <- tot_Sm_w_j_1 + tot_Sm_w_j_2
tot_mwah <- tot_Sm_w_a_1 + tot_Sm_w_a_2
tot_mssy <- tot_Sm_2_j_1
tot_msas <- tot_Sm_2_2_1
tot_mhhy <- tot_Sm_h_j_1 + tot_Sm_h_j_2
tot_mhah <- tot_Sm_h_a_1 + tot_Sm_h_a_2

cont_total_north_1 <- rbind.data.frame(
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'FEC', statistic = 'Total', value = 'Total', mean = mean(tot_fec), lower = quantile(tot_fec,probs = 0.05),upper = quantile(tot_fec,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_fwhy), lower = quantile(tot_fwhy,probs = 0.05),upper = quantile(tot_fwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_fwah), lower = quantile(tot_fwah,probs = 0.05),upper = quantile(tot_fwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_fssy), lower = quantile(tot_fssy,probs = 0.05),upper = quantile(tot_fssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_fsas), lower = quantile(tot_fsas,probs = 0.05),upper = quantile(tot_fsas,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_fhhy), lower = quantile(tot_fhhy,probs = 0.05),upper = quantile(tot_fhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_fhah), lower = quantile(tot_fhah,probs = 0.05),upper = quantile(tot_fhah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_mwhy), lower = quantile(tot_mwhy,probs = 0.05),upper = quantile(tot_mwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_mwah), lower = quantile(tot_mwah,probs = 0.05),upper = quantile(tot_mwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_mssy), lower = quantile(tot_mssy,probs = 0.05),upper = quantile(tot_mssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_msas), lower = quantile(tot_msas,probs = 0.05),upper = quantile(tot_msas,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_mhhy), lower = quantile(tot_mhhy,probs = 0.05),upper = quantile(tot_mhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_mhah), lower = quantile(tot_mhah,probs = 0.05),upper = quantile(tot_mhah,probs = 0.95))
)

###########################################################################
# Second Comparison: Boreal
############################################################################

Time <- 20
refpi_ak <- refpi_no <- refpi_pr <- refF1 <- refF2 <- refSfj_w1 <- refSfa_w1 <- refSfj_w2 <- refSfa_w2  <- refSfj_s <- refSfa_s <- refSfj_h1 <- refSfa_h1 <- refSfj_h2 <- refSfa_h2  <- refSmj_w1 <- refSma_w1 <- refSmj_w2 <- refSma_w2  <- refSmj_s <- refSma_s <- refSmj_h1 <- refSma_h1 <- refSmj_h2 <- refSma_h2  <- lam_realref <- array(NA,dim = c(samples,Time,3))
refnf1   <- refnf2 <-refnm1 <- refnm2 <- matrix(NA,samples, 3)
refn     <- array(NA,dim=c(4,1,samples,Time+1,3))
Sfj_w1_reg <- Sfj_w2_reg <- Sfj_h1_reg <- Sfj_h2_reg <- Sfa_w1_reg <- Sfa_w2_reg <- Sfa_h1_reg <- Sfa_h2_reg <-Smj_w1_reg <- Smj_w2_reg <- Smj_h1_reg <- Smj_h2_reg <- Sma_w1_reg <- Sma_w2_reg <- Sma_h1_reg <- Sma_h2_reg <- array(NA,dim=c(60,samples,3))

# Annual vital rates
for (j in 1:samples){
  for(k in 1:n.region){
    for(t in 1:60){
      Sfj_w1_reg[t,j,k] <- Sfj_w1[t,j] * mu_psi[t,j,k]
      Sfa_w1_reg[t,j,k] <- Sfa_w1[t,j] * mu_psi[t,j,k]
      Sfj_w2_reg[t,j,k] <- Sfj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_w2_reg[t,j,k] <- Sfa_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Sfj_h1_reg[t,j,k] <- Sfj_h1[t,j] * mu_psi[t,j,k]
      Sfa_h1_reg[t,j,k] <- Sfa_h1[t,j] * mu_psi[t,j,k]
      Sfj_h2_reg[t,j,k] <- Sfj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_h2_reg[t,j,k] <- Sfa_h2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_w1_reg[t,j,k] <- Smj_w1[t,j] * mu_psi[t,j,k]
      Sma_w1_reg[t,j,k] <- Sma_w1[t,j] * mu_psi[t,j,k]
      Smj_w2_reg[t,j,k] <- Smj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sma_w2_reg[t,j,k] <- Sma_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_h1_reg[t,j,k] <- Smj_h1[t,j] * mu_psi[t,j,k]
      Sma_h1_reg[t,j,k] <- Sma_h1[t,j] * mu_psi[t,j,k]
      Smj_h2_reg[t,j,k] <- Smj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sma_h2_reg[t,j,k] <- Sma_h2[t,j] * (1 - mu_psi[t,j,k])
    }
    # Average vital rate between the starts of each time period
    refnf1[j,k] <- (nf1[sta3,j,k] + nf1[sta2,j,k]) / 2
    refnf2[j,k] <- (nf2[sta3,j,k] + nf2[sta2,j,k]) / 2
    refnm1[j,k] <- (nm1[sta3,j,k] + nm1[sta2,j,k]) / 2
    refnm2[j,k] <- (nm2[sta3,j,k] + nm2[sta2,j,k]) / 2
    
    refn[1,1,j,1,k] <- refnf1[j,k]
    refn[2,1,j,1,k] <- refnf2[j,k]
    
    refn[3,1,j,1,k] <- refnm1[j,k]
    refn[4,1,j,1,k] <- refnm2[j,k]
    
    for (i in 1:Time){
      refpi_ak[j,i,k] <-   (pi_ak[i+sta3-1,j,k] +   pi_ak[i+sta2-1,j,k]) / 2
      refpi_no[j,i,k] <-   (pi_no[i+sta3-1,j,k] +   pi_no[i+sta2-1,j,k]) / 2
      refpi_pr[j,i,k] <-   (pi_pr[i+sta3-1,j,k] +   pi_pr[i+sta2-1,j,k]) / 2
      
      refF1[j,i,k] <-   (F1[i+sta3-1,j,k] + F1[i+sta2-1,j,k]) / 2
      refF2[j,i,k] <-   (F2[i+sta3-1,j,k] + F2[i+sta2-1,j,k]) / 2
      
      refSfj_w1[j,i,k] <- ((Sfj_w1_reg[i+sta3-1,j,k] + Sfj_w1_reg[i+sta2-1,j,k]) / 2)
      refSfa_w1[j,i,k] <- ((Sfa_w1_reg[i+sta3-1,j,k] + Sfa_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_w2[j,i,k] <- ((Sfj_w2_reg[i+sta3-1,j,k] + Sfj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_w2[j,i,k] <- ((Sfa_w2_reg[i+sta3-1,j,k] + Sfa_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSfj_s[j,i,k]    <- (Sfj_s[i+sta3-1,j,k] +  Sfj_s[i+sta2-1,j,k]) / 2
      refSfa_s[j,i,k]    <- (Sfa_s[i+sta3-1,j,k] +  Sfa_s[i+sta2-1,j,k]) / 2
      
      refSfj_h1[j,i,k] <- ((Sfj_h1_reg[i+sta3-1,j,k] + Sfj_h1_reg[i+sta2-1,j,k]) / 2)
      refSfa_h1[j,i,k] <- ((Sfa_h1_reg[i+sta3-1,j,k] + Sfa_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_h2[j,i,k] <- ((Sfj_h2_reg[i+sta3-1,j,k] + Sfj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_h2[j,i,k] <- ((Sfa_h2_reg[i+sta3-1,j,k] + Sfa_h2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_w1[j,i,k] <- ((Smj_w1_reg[i+sta3-1,j,k] + Smj_w1_reg[i+sta2-1,j,k]) / 2)
      refSma_w1[j,i,k] <- ((Sma_w1_reg[i+sta3-1,j,k] + Sma_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_w2[j,i,k] <- ((Smj_w2_reg[i+sta3-1,j,k] + Smj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSma_w2[j,i,k] <- ((Sma_w2_reg[i+sta3-1,j,k] + Sma_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_s[j,i,k] <-    (Smj_s[i+sta3-1,j,k] +  Smj_s[i+sta2-1,j,k]) / 2
      refSma_s[j,i,k] <-    (Sma_s[i+sta3-1,j,k] +  Sma_s[i+sta2-1,j,k]) / 2
      
      refSmj_h1[j,i,k] <- ((Smj_h1_reg[i+sta3-1,j,k] + Smj_h1_reg[i+sta2-1,j,k]) / 2)
      refSma_h1[j,i,k] <- ((Sma_h1_reg[i+sta3-1,j,k] + Sma_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_h2[j,i,k] <- ((Smj_h2_reg[i+sta3-1,j,k] + Smj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSma_h2[j,i,k] <- ((Sma_h2_reg[i+sta3-1,j,k] + Sma_h2_reg[i+sta2-1,j,k]) / 2) 
      
      # Demographic projection matrix for each region
      A_AK <- matrix(c(
        0.5*refF1[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),0,0,
        
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),0,0,
        
        0.5*refF1[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),0,0,
        
        0,0,
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1]),
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1])
      ), nrow=4, byrow=TRUE)
      
      A_NO <- matrix(c(
        0.5*refF1[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 0,0,
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),0,0,
        
        0.5*refF1[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 0,0,
        
        0,0,
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2]),
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2])
      ), nrow=4, byrow=TRUE)
      
      A_PR <- matrix(c(
        0.5*refF1[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 0,0,
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),0,0,
        
        0.5*refF1[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 0,0,
        
        0,0,
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3]),
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3])
      ), nrow=4, byrow=TRUE)
      
      n_ak <- A_AK %*% refn[,,j,i,1]
      n_no <- A_NO %*% refn[,,j,i,2]
      n_pr <- A_PR %*% refn[,,j,i,3]
      
      lam_realref[j,i,1] <- sum( n_ak)
      lam_realref[j,i,2] <- sum( n_no)
      lam_realref[j,i,3] <- sum( n_pr)
      
      refn[,1,j,i+1,1] <-  n_ak/sum( n_ak) #store the proportionate abundances
      refn[,1,j,i+1,2] <-  n_no/sum( n_no) #store the proportionate abundances
      refn[,1,j,i+1,3] <-  n_pr/sum( n_pr) #store the proportionate abundances
    }
  }
}

# temporal means of the lower-level vital rates
refF1mu     <- apply(refF1 ,c(1,3),mean)
refF2mu     <- apply(refF2 ,c(1,3),mean)
refSfjmu_w1 <- apply(refSfj_w1,c(1,3),mean)
refSfamu_w1 <- apply(refSfa_w1,c(1,3),mean)
refSfjmu_w2 <- apply(refSfj_w2,c(1,3),mean)
refSfamu_w2 <- apply(refSfa_w2,c(1,3),mean)
refSfjmu_h1 <- apply(refSfj_h1,c(1,3),mean)
refSfamu_h1 <- apply(refSfa_h1,c(1,3),mean)
refSfjmu_h2 <- apply(refSfj_h2,c(1,3),mean)
refSfamu_h2 <- apply(refSfa_h2,c(1,3),mean)
refSfjmu_s  <- apply(refSfj_s,c(1,3),mean)
refSfamu_s  <- apply(refSfa_s,c(1,3),mean)
refSmjmu_w1 <- apply(refSmj_w1,c(1,3),mean)
refSmamu_w1 <- apply(refSma_w1,c(1,3),mean)
refSmjmu_w2 <- apply(refSmj_w2,c(1,3),mean)
refSmamu_w2 <- apply(refSma_w2,c(1,3),mean)
refSmjmu_h1 <- apply(refSmj_h1,c(1,3),mean)
refSmamu_h1 <- apply(refSma_h1,c(1,3),mean)
refSmjmu_h2 <- apply(refSmj_h2,c(1,3),mean)
refSmamu_h2 <- apply(refSma_h2,c(1,3),mean)
refSmjmu_s  <- apply(refSmj_s,c(1,3),mean)
refSmamu_s  <- apply(refSma_s,c(1,3),mean)

logF1mudiff      <- matrix(NA,samples,3)
logF2mudiff      <- matrix(NA,samples,3)
logSfj1_wmudiff  <- matrix(NA,samples,3)
logSfa1_wmudiff  <- matrix(NA,samples,3)
logSfj1_hmudiff  <- matrix(NA,samples,3)
logSfa1_hmudiff  <- matrix(NA,samples,3)
logSfj2_wmudiff  <- matrix(NA,samples,3)
logSfa2_wmudiff  <- matrix(NA,samples,3)
logSfj2_hmudiff  <- matrix(NA,samples,3)
logSfa2_hmudiff  <- matrix(NA,samples,3)
logSfj_smudiff   <- matrix(NA,samples,3)
logSfa_smudiff   <- matrix(NA,samples,3)

logSmj1_wmudiff  <- matrix(NA,samples,3)
logSma1_wmudiff  <- matrix(NA,samples,3)
logSmj1_hmudiff  <- matrix(NA,samples,3)
logSma1_hmudiff  <- matrix(NA,samples,3)
logSmj2_wmudiff  <- matrix(NA,samples,3)
logSma2_wmudiff  <- matrix(NA,samples,3)
logSmj2_hmudiff  <- matrix(NA,samples,3)
logSma2_hmudiff  <- matrix(NA,samples,3)
logSmj_smudiff   <- matrix(NA,samples,3)
logSma_smudiff   <- matrix(NA,samples,3)

logF1sigdiff     <- matrix(NA,samples,3)
logF2sigdiff     <- matrix(NA,samples,3)
logSfj1_wsigdiff <- matrix(NA,samples,3)
logSfa1_wsigdiff <- matrix(NA,samples,3)
logSfj1_hsigdiff <- matrix(NA,samples,3)
logSfa1_hsigdiff <- matrix(NA,samples,3)
logSfj2_wsigdiff <- matrix(NA,samples,3)
logSfa2_wsigdiff <- matrix(NA,samples,3)
logSfj2_hsigdiff <- matrix(NA,samples,3)
logSfa2_hsigdiff <- matrix(NA,samples,3)
logSfj_ssigdiff  <- matrix(NA,samples,3)
logSfa_ssigdiff  <- matrix(NA,samples,3)

logSmj1_wsigdiff <- matrix(NA,samples,3)
logSma1_wsigdiff <- matrix(NA,samples,3)
logSmj1_hsigdiff <- matrix(NA,samples,3)
logSma1_hsigdiff <- matrix(NA,samples,3)
logSmj2_wsigdiff <- matrix(NA,samples,3)
logSma2_wsigdiff <- matrix(NA,samples,3)
logSmj2_hsigdiff <- matrix(NA,samples,3)
logSma2_hsigdiff <- matrix(NA,samples,3)
logSmj_ssigdiff  <- matrix(NA,samples,3)
logSma_ssigdiff  <- matrix(NA,samples,3)

######################################################################################
# Step 7: Calculate differences on log scale in lower-level vital rate means 
# and standard deviations between time periods.
#######################################################################################

for (j in 1:samples){
  for(k in 1:n.region){      
    # Equation 3 Koons et al. 2017, log u_a - log u_b
    logF1mudiff[j,k]     <-        log(mean(F1[sta3:end3,j,k])) -        log(mean(F1[sta2:end2,j,k]))
    logF2mudiff[j,k]     <-        log(mean(F2[sta3:end3,j,k])) -        log(mean(F2[sta2:end2,j,k]))
    logSfj1_wmudiff[j,k] <-      log(mean(Sfj_w1_reg[sta3:end3,j,k]))-  log(mean(Sfj_w1_reg[sta2:end2,j,k])) 
    logSfa1_wmudiff[j,k] <-      log(mean(Sfa_w1_reg[sta3:end3,j,k]))-  log(mean(Sfa_w1_reg[sta2:end2,j,k])) 
    logSfj1_hmudiff[j,k] <-      log(mean(Sfj_h1_reg[sta3:end3,j,k]))-  log(mean(Sfj_h1_reg[sta2:end2,j,k]))
    logSfa1_hmudiff[j,k] <-      log(mean(Sfa_h1_reg[sta3:end3,j,k]))-  log(mean(Sfa_h1_reg[sta2:end2,j,k]))
    logSfj2_wmudiff[j,k] <-      log(mean(Sfj_w2_reg[sta3:end3,j,k]))-  log(mean(Sfj_w2_reg[sta2:end2,j,k])) 
    logSfa2_wmudiff[j,k] <-      log(mean(Sfa_w2_reg[sta3:end3,j,k]))-  log(mean(Sfa_w2_reg[sta2:end2,j,k])) 
    logSfj2_hmudiff[j,k] <-      log(mean(Sfj_h2_reg[sta3:end3,j,k]))-  log(mean(Sfj_h2_reg[sta2:end2,j,k]))
    logSfa2_hmudiff[j,k] <-      log(mean(Sfa_h2_reg[sta3:end3,j,k]))-  log(mean(Sfa_h2_reg[sta2:end2,j,k]))
    logSfj_smudiff[j,k]  <-      log(mean(Sfj2[sta3:end3,j,k])) -      log(mean(Sfj2[sta2:end2,j,k]))
    logSfa_smudiff[j,k]  <-      log(mean(Sfa2[sta3:end3,j,k])) -      log(mean(Sfa2[sta2:end2,j,k]))
    
    logSmj1_wmudiff[j,k] <-      log(mean(Smj_w1_reg[sta3:end3,j,k]))-  log(mean(Smj_w1_reg[sta2:end2,j,k])) 
    logSma1_wmudiff[j,k] <-      log(mean(Sma_w1_reg[sta3:end3,j,k]))-  log(mean(Sma_w1_reg[sta2:end2,j,k])) 
    logSmj1_hmudiff[j,k] <-      log(mean(Smj_h1_reg[sta3:end3,j,k]))-  log(mean(Smj_h1_reg[sta2:end2,j,k]))
    logSma1_hmudiff[j,k] <-      log(mean(Sma_h1_reg[sta3:end3,j,k]))-  log(mean(Sma_h1_reg[sta2:end2,j,k]))
    logSmj2_wmudiff[j,k] <-      log(mean(Smj_w2_reg[sta3:end3,j,k]))-  log(mean(Smj_w2_reg[sta2:end2,j,k])) 
    logSma2_wmudiff[j,k] <-      log(mean(Sma_w2_reg[sta3:end3,j,k]))-  log(mean(Sma_w2_reg[sta2:end2,j,k])) 
    logSmj2_hmudiff[j,k] <-      log(mean(Smj_h2_reg[sta3:end3,j,k]))-  log(mean(Smj_h2_reg[sta2:end2,j,k]))
    logSma2_hmudiff[j,k] <-      log(mean(Sma_h2_reg[sta3:end3,j,k]))-  log(mean(Sma_h2_reg[sta2:end2,j,k]))
    logSmj_smudiff[j,k]  <-      log(mean(Smj2[sta3:end3,j,k])) -      log(mean(Smj2[sta2:end2,j,k]))
    logSma_smudiff[j,k]  <-      log(mean(Sma2[sta3:end3,j,k])) -      log(mean(Sma2[sta2:end2,j,k]))
    
    # Equation 3 Koons et al. 2017, log sig_a - log sig_b
    logF1sigdiff[j,k]     <-   log(sqrt(var(F1[sta3:end3,j,k]))) -   log(sqrt(var(F1[sta2:end2,j,k])))
    logF2sigdiff[j,k]     <-   log(sqrt(var(F2[sta3:end3,j,k]))) -   log(sqrt(var(F2[sta2:end2,j,k])))
    logSfj_ssigdiff[j,k]  <-   log(sqrt(var(Sfj2[sta3:end3,j,k]))) - log(sqrt(var(Sfj2[sta2:end2,j,k])))
    logSfa_ssigdiff[j,k]  <-   log(sqrt(var(Sfa2[sta3:end3,j,k]))) - log(sqrt(var(Sfa2[sta2:end2,j,k])))
    logSfj1_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_w1_reg[sta2:end2,j,k])))
    logSfa1_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_w1_reg[sta2:end2,j,k])))
    logSfj1_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_h1_reg[sta2:end2,j,k])))
    logSfa1_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_h1_reg[sta2:end2,j,k])))
    logSfj2_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_w2_reg[sta2:end2,j,k])))
    logSfa2_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_w2_reg[sta2:end2,j,k])))
    logSfj2_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_h2_reg[sta2:end2,j,k])))
    logSfa2_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_h2_reg[sta2:end2,j,k])))
    
    logSmj_ssigdiff[j,k] <- log(sqrt(var(Smj2[sta3:end3,j,k]))) - log(sqrt(var(Smj2[sta2:end2,j,k])))
    logSma_ssigdiff[j,k] <- log(sqrt(var(Sma2[sta3:end3,j,k]))) - log(sqrt(var(Sma2[sta2:end2,j,k])))
    logSmj1_wsigdiff[j,k] <-   log(sqrt(var(Smj_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_w1_reg[sta2:end2,j,k])))
    logSma1_wsigdiff[j,k] <-   log(sqrt(var(Sma_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_w1_reg[sta2:end2,j,k])))
    logSmj1_hsigdiff[j,k] <-   log(sqrt(var(Smj_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_h1_reg[sta2:end2,j,k])))
    logSma1_hsigdiff[j,k] <-   log(sqrt(var(Sma_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_h1_reg[sta2:end2,j,k])))
    logSmj2_wsigdiff[j,k] <-   log(sqrt(var(Smj_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_w2_reg[sta2:end2,j,k])))
    logSma2_wsigdiff[j,k] <-   log(sqrt(var(Sma_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_w2_reg[sta2:end2,j,k])))
    logSmj2_hsigdiff[j,k] <-   log(sqrt(var(Smj_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_h2_reg[sta2:end2,j,k])))
    logSma2_hsigdiff[j,k] <-   log(sqrt(var(Sma_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_h2_reg[sta2:end2,j,k])))
  }
}

# Step 8: Compute real-time elasticities, evaluated at the reference mean         
# Real-time elasticities for the direct effects of change in the lower-level vital rates.

S <- 4  # dimension of projection matrix
sp = 2  # Region 

eAF1mu  <- eAF2mu <- eASfjmu_w1 <- eASfjmu_w2 <- eASfjmu_s <- eASfjmu_h1 <- eASfjmu_h2 <- eASfamu_h1 <- eASfamu_h2 <- eASfamu_w1 <- eASfamu_w2 <- eASfamu_s <- 
  eASmjmu_w1 <- eASmjmu_w2 <- eASmjmu_s <- eASmjmu_h1 <- eASmjmu_h2 <- eASmamu_h1 <- eASmamu_h2 <- eASmamu_w1 <- eASmamu_w2 <- eASmamu_s <- 
  eAF1sd  <- eAF2sd <- eASfjsd_w1 <- eASfjsd_w2 <- eASfjsd_s <- eASfjsd_h1 <- eASfjsd_h2 <- eASfasd_h1 <- eASfasd_h2 <- eASfasd_w1 <- eASfasd_w2 <- eASfasd_s <- 
  eASmjsd_w1 <- eASmjsd_w2 <- eASmjsd_s <- eASmjsd_h1 <- eASmjsd_h2 <- eASmasd_h1 <- eASmasd_h2 <- eASmasd_w1 <- eASmasd_w2 <- eASmasd_s <-array(NA,dim=c(S,S,samples,Time))

tot_eAF1mu  <- tot_eAF2mu <- tot_eASfjmu_w1 <- tot_eASfjmu_w2 <- tot_eASfjmu_s <- tot_eASfjmu_h1 <- tot_eASfjmu_h2 <- tot_eASfamu_h1 <- tot_eASfamu_h2 <- tot_eASfamu_w1 <- tot_eASfamu_w2 <- tot_eASfamu_s <- 
  tot_eASmjmu_w1 <- tot_eASmjmu_w2 <- tot_eASmjmu_s <- tot_eASmjmu_h1 <- tot_eASmjmu_h2 <- tot_eASmamu_h1 <- tot_eASmamu_h2 <- tot_eASmamu_w1 <- tot_eASmamu_w2 <- tot_eASmamu_s <-
  tot_eAF1sd  <- tot_eAF2sd <- tot_eASfjsd_w1 <- tot_eASfjsd_w2 <- tot_eASfjsd_s <- tot_eASfjsd_h1 <- tot_eASfjsd_h2 <- tot_eASfasd_h1 <- tot_eASfasd_h2 <- tot_eASfasd_w1 <- tot_eASfasd_w2 <- tot_eASfasd_s  <-
  tot_eASmjsd_w1 <- tot_eASmjsd_w2 <- tot_eASmjsd_s <- tot_eASmjsd_h1 <- tot_eASmjsd_h2 <- tot_eASmasd_h1 <- tot_eASmasd_h2 <- tot_eASmasd_w1 <- tot_eASmasd_w2 <- tot_eASmasd_s  <-matrix(NA,samples,Time)


for (j in 1:samples){
  for (i in 1:Time){
    for(k in sp){ # manually change region
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s = refSfj_s[j,i,k],
        Sfa_s = refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s = refSmj_s[j,i,k],
        Sma_s = refSma_s[j,i,k],
        
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      for (m in 1:S){
        for (n in 1:S){
          # Equation 3 Koons et al. 2017, e^A_mu
          ##########################################################
          # Means
          eAF1mu[m,n,j,i] <- refF1mu[j,k] * dA_dF1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2mu[m,n,j,i] <- refF2mu[j,k] * dA_dF2[m,n] * refn[n,1,j,i,k] /  lam_realref[j,i,k]
          
          tot_eAF2mu[j,i] <- sum(sum(eAF2mu[,,j,i])) 
          tot_eAF1mu[j,i] <- sum(sum(eAF1mu[,,j,i])) 
          
          eASfjmu_w1[m,n,j,i] <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w1[m,n,j,i] <- refSfamu_w1[j,k] * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_w2[m,n,j,i] <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w2[m,n,j,i] <- refSfamu_w2[j,k] * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w1[m,n,j,i] <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w1[m,n,j,i] <- refSmamu_w1[j,k] * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w2[m,n,j,i] <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w2[m,n,j,i] <- refSmamu_w2[j,k] * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_w1[j,i] <-sum(sum(eASfjmu_w1[,,j,i]))
          tot_eASfamu_w1[j,i] <-sum(sum(eASfamu_w1[,,j,i]))
          tot_eASfjmu_w2[j,i] <-sum(sum(eASfjmu_w2[,,j,i]))
          tot_eASfamu_w2[j,i] <-sum(sum(eASfamu_w2[,,j,i]))
          tot_eASmjmu_w1[j,i] <-sum(sum(eASmjmu_w1[,,j,i]))
          tot_eASmamu_w1[j,i] <-sum(sum(eASmamu_w1[,,j,i]))
          tot_eASmjmu_w2[j,i] <-sum(sum(eASmjmu_w2[,,j,i]))
          tot_eASmamu_w2[j,i] <-sum(sum(eASmamu_w2[,,j,i]))
          
          eASfjmu_h1[m,n,j,i] <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h1[m,n,j,i] <- refSfamu_h1[j,k] * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_h2[m,n,j,i] <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h2[m,n,j,i] <- refSfamu_h2[j,k] * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h1[m,n,j,i] <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h1[m,n,j,i] <- refSmamu_h1[j,k] * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h2[m,n,j,i] <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h2[m,n,j,i] <- refSmamu_h2[j,k] * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k] 
          
          tot_eASfjmu_h1[j,i] <-sum(sum(eASfjmu_h1[,,j,i]))
          tot_eASfamu_h1[j,i] <-sum(sum(eASfamu_h1[,,j,i]))
          tot_eASfjmu_h2[j,i] <-sum(sum(eASfjmu_h2[,,j,i]))
          tot_eASfamu_h2[j,i] <-sum(sum(eASfamu_h2[,,j,i]))
          tot_eASmjmu_h1[j,i] <-sum(sum(eASmjmu_h1[,,j,i]))
          tot_eASmamu_h1[j,i] <-sum(sum(eASmamu_h1[,,j,i]))
          tot_eASmjmu_h2[j,i] <-sum(sum(eASmjmu_h2[,,j,i]))
          tot_eASmamu_h2[j,i] <-sum(sum(eASmamu_h2[,,j,i]))
          
          eASfjmu_s[m,n,j,i] <- refSfjmu_s[j,k] * dA_dSfjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_s[m,n,j,i] <- refSfamu_s[j,k] * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_s[m,n,j,i] <- refSmjmu_s[j,k] * dA_dSmjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_s[m,n,j,i] <- refSmamu_s[j,k] * dA_dSmas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_s[j,i] <- sum(sum(eASfjmu_s[,,j,i])) 
          tot_eASfamu_s[j,i] <- sum(sum(eASfamu_s[,,j,i])) 
          tot_eASmjmu_s[j,i] <- sum(sum(eASmjmu_s[,,j,i])) 
          tot_eASmamu_s[j,i] <- sum(sum(eASmamu_s[,,j,i])) 
          ##################################################################################### 
          # Variance
          # Equation 3 Koons et al. 2017, e^A_sd
          eAF1sd[m,n,j,i] <- (refF1[j,i,k] - refF1mu[j,k]) * dA_dF1[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2sd[m,n,j,i] <- (refF2[j,i,k] - refF2mu[j,k]) * dA_dF2[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eAF1sd[j,i] <- sum(sum(eAF1sd[,,j,i]))
          tot_eAF2sd[j,i] <- sum(sum(eAF2sd[,,j,i]))
          
          eASfjsd_w1[m,n,j,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w1[m,n,j,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_w2[m,n,j,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w2[m,n,j,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h1[m,n,j,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h1[m,n,j,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h2[m,n,j,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h2[m,n,j,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_s [m,n,j,i] <- (refSfj_s[j,i,k]   - refSfjmu_s[j,k]) * dA_dSfjs[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_s [m,n,j,i] <- (refSfa_s[j,i,k]   - refSfamu_s[j,k]) * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          eASmjsd_w1[m,n,j,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w1[m,n,j,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_w2[m,n,j,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w2[m,n,j,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h1[m,n,j,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h1[m,n,j,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h2[m,n,j,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h2[m,n,j,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_s [m,n,j,i] <- (refSmj_s[j,i,k]  - refSmjmu_s[j,k]) * dA_dSmjs[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_s [m,n,j,i] <- (refSma_s[j,i,k]  - refSmamu_s[j,k]) * dA_dSmas[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjsd_w1[j,i] <- sum(sum(eASfjsd_w1[,,j,i])) 
          tot_eASfasd_w1[j,i] <- sum(sum(eASfasd_w1[,,j,i])) 
          tot_eASfjsd_w2[j,i] <- sum(sum(eASfjsd_w2[,,j,i])) 
          tot_eASfasd_w2[j,i] <- sum(sum(eASfasd_w2[,,j,i])) 
          tot_eASfjsd_h1[j,i] <- sum(sum(eASfjsd_h1[,,j,i])) 
          tot_eASfasd_h1[j,i] <- sum(sum(eASfasd_h1[,,j,i])) 
          tot_eASfjsd_h2[j,i] <- sum(sum(eASfjsd_h2[,,j,i])) 
          tot_eASfasd_h2[j,i] <- sum(sum(eASfasd_h2[,,j,i])) 
          tot_eASfjsd_s [j,i] <- sum(sum(eASfjsd_s[,,j,i])) 
          tot_eASfasd_s [j,i] <- sum(sum(eASfasd_s[,,j,i])) 
          
          tot_eASmjsd_w1[j,i] <- sum(sum(eASmjsd_w1[,,j,i])) 
          tot_eASmasd_w1[j,i] <- sum(sum(eASmasd_w1[,,j,i])) 
          tot_eASmjsd_w2[j,i] <- sum(sum(eASmjsd_w2[,,j,i])) 
          tot_eASmasd_w2[j,i] <- sum(sum(eASmasd_w2[,,j,i])) 
          tot_eASmjsd_h1[j,i] <- sum(sum(eASmjsd_h1[,,j,i])) 
          tot_eASmasd_h1[j,i] <- sum(sum(eASmasd_h1[,,j,i])) 
          tot_eASmjsd_h2[j,i] <- sum(sum(eASmjsd_h2[,,j,i])) 
          tot_eASmasd_h2[j,i] <- sum(sum(eASmasd_h2[,,j,i])) 
          tot_eASmjsd_s [j,i] <- sum(sum(eASmjsd_s[,,j,i])) 
          tot_eASmasd_s [j,i] <- sum(sum(eASmasd_s[,,j,i])) 
        }
      }
    }
  }
}

avg_eAF1mu    <- rowMeans(tot_eAF1mu  )
avg_eAF2mu    <- rowMeans(tot_eAF2mu )
avg_eASfjmu_w1 <- rowMeans(tot_eASfjmu_w1 )
avg_eASfjmu_w2 <- rowMeans(tot_eASfjmu_w2 )
avg_eASfjmu_s  <- rowMeans(tot_eASfjmu_s )
avg_eASfjmu_h1 <- rowMeans(tot_eASfjmu_h1 )
avg_eASfjmu_h2 <- rowMeans(tot_eASfjmu_h2)
avg_eASfamu_h1 <- rowMeans( tot_eASfamu_h1)
avg_eASfamu_h2 <- rowMeans( tot_eASfamu_h2 )
avg_eASfamu_w1 <- rowMeans(tot_eASfamu_w1 )
avg_eASfamu_w2 <- rowMeans(tot_eASfamu_w2 )
avg_eASfamu_s  <- rowMeans(tot_eASfamu_s )

avg_eASmjmu_w1 <- rowMeans(tot_eASmjmu_w1 )
avg_eASmjmu_w2 <- rowMeans(tot_eASmjmu_w2 )
avg_eASmjmu_s  <- rowMeans(tot_eASmjmu_s )
avg_eASmjmu_h1 <- rowMeans(tot_eASmjmu_h1 )
avg_eASmjmu_h2 <- rowMeans(tot_eASmjmu_h2)
avg_eASmamu_h1 <- rowMeans(tot_eASmamu_h1)
avg_eASmamu_h2 <- rowMeans(tot_eASmamu_h2 )
avg_eASmamu_w1 <- rowMeans(tot_eASmamu_w1 )
avg_eASmamu_w2 <- rowMeans(tot_eASmamu_w2 )
avg_eASmamu_s  <- rowMeans(tot_eASmamu_s )

avg_eAF1sd    <-  rowMeans(tot_eAF1sd  )
avg_eAF2sd    <-  rowMeans(tot_eAF2sd )
avg_eASfjsd_w1 <-  rowMeans(tot_eASfjsd_w1 )
avg_eASfjsd_w2 <-  rowMeans(tot_eASfjsd_w2 )
avg_eASfjsd_s  <-  rowMeans(tot_eASfjsd_s )
avg_eASfjsd_h1 <-  rowMeans(tot_eASfjsd_h1 )
avg_eASfjsd_h2 <-  rowMeans(tot_eASfjsd_h2)
avg_eASfasd_h1 <- rowMeans( tot_eASfasd_h1)
avg_eASfasd_h2 <- rowMeans( tot_eASfasd_h2 )
avg_eASfasd_w1 <-  rowMeans(tot_eASfasd_w1 )
avg_eASfasd_w2 <-  rowMeans(tot_eASfasd_w2 )
avg_eASfasd_s  <-  rowMeans(tot_eASfasd_s )

avg_eASmjsd_w1 <-  rowMeans(tot_eASmjsd_w1 )
avg_eASmjsd_w2 <-  rowMeans(tot_eASmjsd_w2 )
avg_eASmjsd_s  <-  rowMeans(tot_eASmjsd_s )
avg_eASmjsd_h1 <-  rowMeans(tot_eASmjsd_h1 )
avg_eASmjsd_h2 <-  rowMeans(tot_eASmjsd_h2)
avg_eASmasd_h1 <-  rowMeans(tot_eASmasd_h1)
avg_eASmasd_h2 <-  rowMeans(tot_eASmasd_h2 )
avg_eASmasd_w1 <-  rowMeans(tot_eASmasd_w1 )
avg_eASmasd_w2 <-  rowMeans(tot_eASmasd_w2 )
avg_eASmasd_s  <-  rowMeans(tot_eASmasd_s )

# Compute real-time elasticities for the indirect effects of past change in  
# the lower-level vital rates that are channeled through perturbations to   
# stage structure.
I <- diag(S)             # Identity matrix
e <- matrix(1,S,1)       # vector of 1's
# indirect elasticities
enF1mu <- enF2mu <- enSfjwmu1 <- enSfjwmu2 <- enSfawmu1 <- enSfawmu2 <- enSfjhmu1 <- enSfjhmu2 <- enSfahmu1 <- enSfahmu2 <- enSfasmu <- enSfjsmu  <- 
  enF1sd <- enF2sd <- enSfjwsd1 <- enSfjwsd2 <- enSfawsd1 <- enSfawsd2 <- enSfjhsd1 <- enSfjhsd2 <- enSfahsd1 <- enSfahsd2 <- enSfassd <- enSfjssd  <- 
  enSmjwmu1 <- enSmjwmu2 <- enSmawmu1 <- enSmawmu2 <- enSmjhmu1 <- enSmjhmu2 <- enSmahmu1 <- enSmahmu2 <- enSmasmu <- enSmjsmu  <- 
  enSmjwsd1 <- enSmjwsd2 <- enSmawsd1 <- enSmawsd2 <- enSmjhsd1 <- enSmjhsd2 <- enSmahsd1 <- enSmahsd2 <- enSmassd <- enSmjssd  <- array(0,dim=c(S,S,samples,Time))


tot_enF1mu <- tot_enF2mu <- tot_enSfjwmu1 <- tot_enSfjwmu2 <- tot_enSfawmu1 <- tot_enSfawmu2 <- tot_enSfjhmu1 <- tot_enSfjhmu2 <- tot_enSfahmu1 <- tot_enSfahmu2 <- tot_enSfasmu <- tot_enSfjsmu  <- 
  tot_enF1sd <- tot_enF2sd <- tot_enSfjwsd1 <- tot_enSfjwsd2 <- tot_enSfawsd1 <- tot_enSfawsd2 <- tot_enSfjhsd1 <- tot_enSfjhsd2 <- tot_enSfahsd1 <- tot_enSfahsd2 <- tot_enSfassd <- tot_enSfjssd  <-
  tot_enSmjwmu1 <- tot_enSmjwmu2 <- tot_enSmawmu1 <- tot_enSmawmu2 <- tot_enSmjhmu1 <- tot_enSmjhmu2 <- tot_enSmahmu1 <- tot_enSmahmu2 <- tot_enSmasmu <- tot_enSmjsmu  <- 
  tot_enSmjwsd1 <- tot_enSmjwsd2 <- tot_enSmawsd1 <- tot_enSmawsd2 <- tot_enSmjhsd1 <- tot_enSmjhsd2 <- tot_enSmahsd1 <- tot_enSmahsd2 <- tot_enSmassd <- tot_enSmjssd  <-matrix(0,samples,Time)


for (j in 1:samples){
  # perturbation matrices
  C2F1 <- C2F2 <- C2Sfjw1 <- C2Sfjw2 <- C2Sfaw1 <- C2Sfaw2 <- C2Sfjh1 <- C2Sfjh2 <- C2Sfah1 <- C2Sfah2 <- C2Sfas <- C2Sfjs  <-C3F1 <- C3F2 <- C3Sfjw1 <- C3Sfjw2 <- C3Sfaw1 <- C3Sfaw2 <- C3Sfjh1 <- C3Sfjh2 <- C3Sfah1 <- C3Sfah2 <- C3Sfas <- C3Sfjs <-
    C2Smjw1 <- C2Smjw2 <- C2Smaw1 <- C2Smaw2 <- C2Smjh1 <- C2Smjh2 <- C2Smah1 <- C2Smah2 <- C2Smas <- C2Smjs                 <- C3Smjw1 <- C3Smjw2 <- C3Smaw1 <- C3Smaw2 <- C3Smjh1 <- C3Smjh2 <- C3Smah1 <- C3Smah2 <- C3Smas <- C3Smjs<-array(0,dim=c(S^2,S^2,Time)) 
  # perturbation to stage structure
  w_mu_F1 <- w_mu_F2 <- w_mu_Sfjw1 <- w_mu_Sfjw2 <- w_mu_Sfaw1 <- w_mu_Sfaw2 <- w_mu_Sfjh1 <- w_mu_Sfjh2 <- w_mu_Sfah1 <- w_mu_Sfah2 <- w_mu_Sfas <- w_mu_Sfjs  <-w_sd_F1 <- w_sd_F2 <- w_sd_Sfjw1 <- w_sd_Sfjw2 <- w_sd_Sfaw1 <- w_sd_Sfaw2 <- w_sd_Sfjh1 <- w_sd_Sfjh2 <- w_sd_Sfah1 <- w_sd_Sfah2 <- w_sd_Sfas <- w_sd_Sfjs  <- 
    w_mu_Smjw1 <- w_mu_Smjw2 <- w_mu_Smaw1 <- w_mu_Smaw2 <- w_mu_Smjh1 <- w_mu_Smjh2 <- w_mu_Smah1 <- w_mu_Smah2 <- w_mu_Smas <- w_mu_Smjs                       <- w_sd_Smjw1 <- w_sd_Smjw2 <- w_sd_Smaw1 <- w_sd_Smaw2 <- w_sd_Smjh1 <- w_sd_Smjh2 <- w_sd_Smah1 <- w_sd_Smah2 <- w_sd_Smas <- w_sd_Smjs  <- array(0,dim=c(S,S,S,Time+1)) 
  for (i in 1:Time){
    for(k in sp){ # manually change species
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s =  refSfj_s[j,i,k],
        Sfa_s =  refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s =  refSmj_s[j,i,k],
        Sma_s =  refSma_s[j,i,k],
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      mat_elements <- sapply(matrix.elements,eval,vr_list)
      A <- matrix(as.numeric(mat_elements[]),nrow=4,byrow=T)
      
      for (m in 1:S){
        for (n in 1:S){
          C2F1[(S+1)*m-S,(S+1)*n-S,i]   <- refF1mu[j,k]     * dA_dF1[m,n]
          C2F2[(S+1)*m-S,(S+1)*n-S,i]   <- refF2mu[j,k]     * dA_dF2[m,n]
          C2Sfjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n]
          C2Sfjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n]
          C2Sfaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w1[j,k] * dA_dSfaw1[m,n]
          C2Sfaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w2[j,k] * dA_dSfaw2[m,n]
          C2Sfjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n]
          C2Sfjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n]
          C2Sfah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h1[j,k] * dA_dSfah1[m,n]
          C2Sfah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h2[j,k] * dA_dSfah2[m,n]
          C2Sfas[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_s[j,k]  * dA_dSfas[m,n]
          C2Sfjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_s[j,k]  * dA_dSfjs[m,n]
          
          C3F1[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF1[j,i,k]     - refF1mu[j,k]    ) * dA_dF1[m,n]
          C3F2[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF2[j,i,k]     - refF2mu[j,k]    ) * dA_dF2[m,n]
          C3Sfjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n]
          C3Sfjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n]
          C3Sfaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n]
          C3Sfaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n]
          C3Sfjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n]
          C3Sfjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n]
          C3Sfah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n]
          C3Sfah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n]
          C3Sfas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfa_s[j,i,k]  - refSfamu_s[j,k] ) * dA_dSfas[m,n]
          C3Sfjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfj_s[j,i,k]  - refSfjmu_s[j,k] ) * dA_dSfjs[m,n]
          
          C2Smjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n]
          C2Smjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n]
          C2Smaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w1[j,k] * dA_dSmaw1[m,n]
          C2Smaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w2[j,k] * dA_dSmaw2[m,n]
          C2Smjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n]
          C2Smjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n]
          C2Smah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h1[j,k] * dA_dSmah1[m,n]
          C2Smah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h2[j,k] * dA_dSmah2[m,n]
          C2Smas[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_s[j,k]  * dA_dSmas[m,n]
          C2Smjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_s[j,k]  * dA_dSmjs[m,n]
          
          C3Smjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n]
          C3Smjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n]
          C3Smaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n]
          C3Smaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n]
          C3Smjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n]
          C3Smjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n]
          C3Smah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n]
          C3Smah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n]
          C3Smas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSma_s[j,i,k]  - refSmamu_s[j,k] ) * dA_dSmas[m,n]
          C3Smjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSmj_s[j,i,k]  - refSmjmu_s[j,k] ) * dA_dSmjs[m,n]
          
          
          K <- I - refn[,1,j,i+1,k]%*%t(e)  # intermediate steps
          B <- K %*% A / lam_realref[j,i,k]
          
          gF1_mu <-  K %*%     C2F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_mu <-  K %*%     C2F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_mu <-  K %*%   C2Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_mu <-  K %*%   C2Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_mu <-  K %*%   C2Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_mu <-  K %*%   C2Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_mu <-  K %*%   C2Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_mu <-  K %*%   C2Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_mu <-  K %*%   C2Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_mu <-  K %*%   C2Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_mu <-  K %*%    C2Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_mu <-  K %*%    C2Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gF1_sig <-  K %*%     C3F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_sig <-  K %*%     C3F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_sig <-  K %*%   C3Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_sig <-  K %*%   C3Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_sig <-  K %*%   C3Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_sig <-  K %*%   C3Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_sig <-  K %*%   C3Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_sig <-  K %*%   C3Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_sig <-  K %*%   C3Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_sig <-  K %*%   C3Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_sig <-  K %*%    C3Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_sig <-  K %*%    C3Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_mu <-  K %*%   C2Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_mu <-  K %*%   C2Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_mu <-  K %*%   C2Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_mu <-  K %*%   C2Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_mu <-  K %*%   C2Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_mu <-  K %*%   C2Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_mu <-  K %*%   C2Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_mu <-  K %*%   C2Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_mu <-  K %*%    C2Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_mu <-  K %*%    C2Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_sig <-  K %*%   C3Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_sig <-  K %*%   C3Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_sig <-  K %*%   C3Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_sig <-  K %*%   C3Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_sig <-  K %*%   C3Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_sig <-  K %*%   C3Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_sig <-  K %*%   C3Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_sig <-  K %*%   C3Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_sig <-  K %*%    C3Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_sig <-  K %*%    C3Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          w_mu_F1[,m,n,i+1]  <- B %*%  w_mu_F1[,m,n,i] +    gF1_mu  
          w_mu_F2[,m,n,i+1]  <- B %*%  w_mu_F2[,m,n,i] +    gF2_mu  
          w_mu_Sfjw1[,m,n,i+1]  <- B %*% w_mu_Sfjw1[,m,n,i] +  gSfjw1_mu  
          w_mu_Sfjw2[,m,n,i+1]  <- B %*% w_mu_Sfjw2[,m,n,i] +  gSfjw2_mu  
          w_mu_Sfaw1[,m,n,i+1]  <- B %*% w_mu_Sfaw1[,m,n,i] +  gSfaw1_mu  
          w_mu_Sfaw2[,m,n,i+1]  <- B %*% w_mu_Sfaw2[,m,n,i] +  gSfaw2_mu  
          w_mu_Sfjh1[,m,n,i+1]  <- B %*% w_mu_Sfjh1[,m,n,i] +  gSfjh1_mu  
          w_mu_Sfjh2[,m,n,i+1]  <- B %*% w_mu_Sfjh2[,m,n,i] +  gSfjh2_mu  
          w_mu_Sfah1[,m,n,i+1]  <- B %*% w_mu_Sfah1[,m,n,i] +  gSfah1_mu  
          w_mu_Sfah2[,m,n,i+1]  <- B %*% w_mu_Sfah2[,m,n,i] +  gSfah2_mu  
          w_mu_Sfas[,m,n,i+1]  <- B %*% w_mu_Sfas[,m,n,i] +   gSfas_mu  
          w_mu_Sfjs[,m,n,i+1]  <- B %*% w_mu_Sfjs[,m,n,i] +   gSfjs_mu  
          
          w_sd_F1[,m,n,i+1]   <- B %*%  w_sd_F1[,m,n,i] +    gF1_sig  
          w_sd_F2[,m,n,i+1]   <- B %*%  w_sd_F2[,m,n,i] +    gF2_sig  
          w_sd_Sfjw1[,m,n,i+1]  <- B %*% w_sd_Sfjw1[,m,n,i] +  gSfjw1_sig  
          w_sd_Sfjw2[,m,n,i+1]  <- B %*% w_sd_Sfjw2[,m,n,i] +  gSfjw2_sig  
          w_sd_Sfaw1[,m,n,i+1]  <- B %*% w_sd_Sfaw1[,m,n,i] +  gSfaw1_sig  
          w_sd_Sfaw2[,m,n,i+1]  <- B %*% w_sd_Sfaw2[,m,n,i] +  gSfaw2_sig  
          w_sd_Sfjh1[,m,n,i+1]  <- B %*% w_sd_Sfjh1[,m,n,i] +  gSfjh1_sig  
          w_sd_Sfjh2[,m,n,i+1]  <- B %*% w_sd_Sfjh2[,m,n,i] +  gSfjh2_sig  
          w_sd_Sfah1[,m,n,i+1]  <- B %*% w_sd_Sfah1[,m,n,i] +  gSfah1_sig  
          w_sd_Sfah2[,m,n,i+1]  <- B %*% w_sd_Sfah2[,m,n,i] +  gSfah2_sig  
          w_sd_Sfas[,m,n,i+1]   <- B %*% w_sd_Sfas[,m,n,i] +   gSfas_sig  
          w_sd_Sfjs[,m,n,i+1]   <- B %*% w_sd_Sfjs[,m,n,i] +   gSfjs_sig  
          
          w_mu_Smjw1[,m,n,i+1]  <- B %*% w_mu_Smjw1[,m,n,i] +  gSmjw1_mu  
          w_mu_Smjw2[,m,n,i+1]  <- B %*% w_mu_Smjw2[,m,n,i] +  gSmjw2_mu  
          w_mu_Smaw1[,m,n,i+1]  <- B %*% w_mu_Smaw1[,m,n,i] +  gSmaw1_mu  
          w_mu_Smaw2[,m,n,i+1]  <- B %*% w_mu_Smaw2[,m,n,i] +  gSmaw2_mu  
          w_mu_Smjh1[,m,n,i+1]  <- B %*% w_mu_Smjh1[,m,n,i] +  gSmjh1_mu  
          w_mu_Smjh2[,m,n,i+1]  <- B %*% w_mu_Smjh2[,m,n,i] +  gSmjh2_mu  
          w_mu_Smah1[,m,n,i+1]  <- B %*% w_mu_Smah1[,m,n,i] +  gSmah1_mu  
          w_mu_Smah2[,m,n,i+1]  <- B %*% w_mu_Smah2[,m,n,i] +  gSmah2_mu  
          w_mu_Smas[,m,n,i+1]  <- B %*% w_mu_Smas[,m,n,i] +   gSmas_mu  
          w_mu_Smjs[,m,n,i+1]  <- B %*% w_mu_Smjs[,m,n,i] +   gSmjs_mu  
          
          w_sd_Smjw1[,m,n,i+1]  <- B %*% w_sd_Smjw1[,m,n,i] +  gSmjw1_sig  
          w_sd_Smjw2[,m,n,i+1]  <- B %*% w_sd_Smjw2[,m,n,i] +  gSmjw2_sig  
          w_sd_Smaw1[,m,n,i+1]  <- B %*% w_sd_Smaw1[,m,n,i] +  gSmaw1_sig  
          w_sd_Smaw2[,m,n,i+1]  <- B %*% w_sd_Smaw2[,m,n,i] +  gSmaw2_sig  
          w_sd_Smjh1[,m,n,i+1]  <- B %*% w_sd_Smjh1[,m,n,i] +  gSmjh1_sig  
          w_sd_Smjh2[,m,n,i+1]  <- B %*% w_sd_Smjh2[,m,n,i] +  gSmjh2_sig  
          w_sd_Smah1[,m,n,i+1]  <- B %*% w_sd_Smah1[,m,n,i] +  gSmah1_sig  
          w_sd_Smah2[,m,n,i+1]  <- B %*% w_sd_Smah2[,m,n,i] +  gSmah2_sig  
          w_sd_Smas[,m,n,i+1]   <- B %*% w_sd_Smas[,m,n,i] +   gSmas_sig  
          w_sd_Smjs[,m,n,i+1]   <- B %*% w_sd_Smjs[,m,n,i] +   gSmjs_sig  
          
          # Equation 3 Koons et al. 2017, e^n_mu
          enF1mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1mu [j,i] <-  sum(sum(enF1mu [,,j,i]))
          tot_enF2mu [j,i] <-  sum(sum(enF2mu [,,j,i]))
          tot_enSfjwmu1[j,i] <- sum(sum(enSfjwmu1[,,j,i]))
          tot_enSfjwmu2[j,i] <- sum(sum(enSfjwmu2[,,j,i]))
          tot_enSfawmu1[j,i] <- sum(sum(enSfawmu1[,,j,i]))
          tot_enSfawmu2[j,i] <- sum(sum(enSfawmu2[,,j,i]))
          tot_enSfjhmu1[j,i] <- sum(sum(enSfjhmu1[,,j,i]))
          tot_enSfjhmu2[j,i] <- sum(sum(enSfjhmu2[,,j,i]))
          tot_enSfahmu1[j,i] <- sum(sum(enSfahmu1[,,j,i]))
          tot_enSfahmu2[j,i] <- sum(sum(enSfahmu2[,,j,i]))
          tot_enSfasmu[j,i] <-  sum(sum(enSfasmu[,,j,i]))
          
          enSmjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwmu1[j,i] <- sum(sum(enSmjwmu1[,,j,i]))
          tot_enSmjwmu2[j,i] <- sum(sum(enSmjwmu2[,,j,i]))
          tot_enSmawmu1[j,i] <- sum(sum(enSmawmu1[,,j,i]))
          tot_enSmawmu2[j,i] <- sum(sum(enSmawmu2[,,j,i]))
          tot_enSmjhmu1[j,i] <- sum(sum(enSmjhmu1[,,j,i]))
          tot_enSmjhmu2[j,i] <- sum(sum(enSmjhmu2[,,j,i]))
          tot_enSmahmu1[j,i] <- sum(sum(enSmahmu1[,,j,i]))
          tot_enSmahmu2[j,i] <- sum(sum(enSmahmu2[,,j,i]))
          tot_enSmasmu[j,i] <-  sum(sum(enSmasmu[,,j,i]))
          
          
          # Equation 3 Koons et al. 2017, e^n_sd
          enF1sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1sd [j,i] <-  sum(sum(enF1sd [,,j,i]))
          tot_enF2sd [j,i] <-  sum(sum(enF2sd [,,j,i]))
          tot_enSfjwsd1[j,i] <- sum(sum(enSfjwsd1[,,j,i]))
          tot_enSfjwsd2[j,i] <- sum(sum(enSfjwsd2[,,j,i]))
          tot_enSfawsd1[j,i] <- sum(sum(enSfawsd1[,,j,i]))
          tot_enSfawsd2[j,i] <- sum(sum(enSfawsd2[,,j,i]))
          tot_enSfjhsd1[j,i] <- sum(sum(enSfjhsd1[,,j,i]))
          tot_enSfjhsd2[j,i] <- sum(sum(enSfjhsd2[,,j,i]))
          tot_enSfahsd1[j,i] <- sum(sum(enSfahsd1[,,j,i]))
          tot_enSfahsd2[j,i] <- sum(sum(enSfahsd2[,,j,i]))
          tot_enSfassd[j,i] <-  sum(sum(enSfassd[,,j,i]))
          tot_enSfjssd[j,i] <-  sum(sum(enSfjssd[,,j,i]))
          
          enSmjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwsd1[j,i] <- sum(sum(enSmjwsd1[,,j,i]))
          tot_enSmjwsd2[j,i] <- sum(sum(enSmjwsd2[,,j,i]))
          tot_enSmawsd1[j,i] <- sum(sum(enSmawsd1[,,j,i]))
          tot_enSmawsd2[j,i] <- sum(sum(enSmawsd2[,,j,i]))
          tot_enSmjhsd1[j,i] <- sum(sum(enSmjhsd1[,,j,i]))
          tot_enSmjhsd2[j,i] <- sum(sum(enSmjhsd2[,,j,i]))
          tot_enSmahsd1[j,i] <- sum(sum(enSmahsd1[,,j,i]))
          tot_enSmahsd2[j,i] <- sum(sum(enSmahsd2[,,j,i]))
          tot_enSmassd[j,i] <-  sum(sum(enSmassd[,,j,i]))
          tot_enSmjssd[j,i] <-  sum(sum(enSmjssd[,,j,i]))
          
        }
      }
    }
  }
}

avg_enF1mu  <- rowMeans( tot_enF1mu )
avg_enF2mu  <- rowMeans( tot_enF2mu )
avg_enSfjwmu1 <- rowMeans(tot_enSfjwmu1)
avg_enSfjwmu2 <- rowMeans(tot_enSfjwmu2)
avg_enSfawmu1 <- rowMeans(tot_enSfawmu1)
avg_enSfawmu2 <- rowMeans(tot_enSfawmu2)
avg_enSfjhmu1 <- rowMeans(tot_enSfjhmu1)
avg_enSfjhmu2 <- rowMeans(tot_enSfjhmu2)
avg_enSfahmu1 <- rowMeans(tot_enSfahmu1)
avg_enSfahmu2 <- rowMeans(tot_enSfahmu2)
avg_enSfasmu <- rowMeans( tot_enSfasmu)
avg_enSfjsmu <- rowMeans( tot_enSfjsmu)
avg_enSmjwmu1 <- rowMeans(tot_enSmjwmu1)
avg_enSmjwmu2 <- rowMeans(tot_enSmjwmu2)
avg_enSmawmu1 <- rowMeans(tot_enSmawmu1)
avg_enSmawmu2 <- rowMeans(tot_enSmawmu2)
avg_enSmjhmu1 <- rowMeans(tot_enSmjhmu1)
avg_enSmjhmu2 <- rowMeans(tot_enSmjhmu2)
avg_enSmahmu1 <- rowMeans(tot_enSmahmu1)
avg_enSmahmu2 <- rowMeans(tot_enSmahmu2)
avg_enSmasmu <- rowMeans( tot_enSmasmu)
avg_enSmjsmu <- rowMeans( tot_enSmjsmu)

avg_enF1sd  <-  rowMeans( tot_enF1sd )
avg_enF2sd  <-  rowMeans( tot_enF2sd )
avg_enSfjwsd1 <- rowMeans(tot_enSfjwsd1)
avg_enSfjwsd2 <- rowMeans(tot_enSfjwsd2)
avg_enSfawsd1 <- rowMeans(tot_enSfawsd1)
avg_enSfawsd2 <- rowMeans(tot_enSfawsd2)
avg_enSfjhsd1 <- rowMeans(tot_enSfjhsd1)
avg_enSfjhsd2 <- rowMeans(tot_enSfjhsd2)
avg_enSfahsd1 <- rowMeans(tot_enSfahsd1)
avg_enSfahsd2 <- rowMeans(tot_enSfahsd2)
avg_enSfassd <- rowMeans( tot_enSfassd)
avg_enSfjssd <- rowMeans( tot_enSfjssd)

avg_enSmjwsd1 <- rowMeans(tot_enSmjwsd1)
avg_enSmjwsd2 <- rowMeans(tot_enSmjwsd2)
avg_enSmawsd1 <- rowMeans(tot_enSmawsd1)
avg_enSmawsd2 <- rowMeans(tot_enSmawsd2)
avg_enSmjhsd1 <- rowMeans(tot_enSmjhsd1)
avg_enSmjhsd2 <- rowMeans(tot_enSmjhsd2)
avg_enSmahsd1 <- rowMeans(tot_enSmahsd1)
avg_enSmahsd2 <- rowMeans(tot_enSmahsd2)
avg_enSmassd <- rowMeans( tot_enSmassd)
avg_enSmjssd <- rowMeans( tot_enSmjssd)

# Step 9: Calculate vital rate contributions to the difference in geometric mean rates of population growth between time periods. This is a function of 
# logged differences in mean of vital rates, logged differences in s.d. of  vital rates, as channeled through direct effects of perturbations to the   
# moments and indirect effects of perturbations to these moments channeled through changes in population structure over time.
cont_A_F1mu  <- cont_A_F2mu <- cont_A_Sfjmu_w1 <- cont_A_Sfjmu_w2 <- cont_A_Sfjmu_s <- cont_A_Sfjmu_h1 <- cont_A_Sfjmu_h2 <- cont_A_Sfamu_h1 <- cont_A_Sfamu_h2 <- cont_A_Sfamu_w1 <- cont_A_Sfamu_w2 <- cont_A_Sfamu_s <- 
  cont_A_F1sd  <- cont_A_F2sd <- cont_A_Sfjsd_w1 <- cont_A_Sfjsd_w2 <- cont_A_Sfjsd_s <- cont_A_Sfjsd_h1 <- cont_A_Sfjsd_h2 <- cont_A_Sfasd_h1 <- cont_A_Sfasd_h2 <- cont_A_Sfasd_w1 <- cont_A_Sfasd_w2 <- cont_A_Sfasd_s <-
  cont_n_F1mu  <- cont_n_F2mu <- cont_n_Sfjmu_w1 <- cont_n_Sfjmu_w2 <- cont_n_Sfjmu_s <- cont_n_Sfjmu_h1 <- cont_n_Sfjmu_h2 <- cont_n_Sfamu_h1 <- cont_n_Sfamu_h2 <- cont_n_Sfamu_w1 <- cont_n_Sfamu_w2 <- cont_n_Sfamu_s <- 
  cont_n_F1sd  <- cont_n_F2sd <- cont_n_Sfjsd_w1 <- cont_n_Sfjsd_w2 <- cont_n_Sfjsd_s <- cont_n_Sfjsd_h1 <- cont_n_Sfjsd_h2 <- cont_n_Sfasd_h1 <- cont_n_Sfasd_h2 <- cont_n_Sfasd_w1 <- cont_n_Sfasd_w2 <- cont_n_Sfasd_s <- 
  cont_A_Smjmu_w1 <- cont_A_Smjmu_w2 <- cont_A_Smjmu_s <- cont_A_Smjmu_h1 <- cont_A_Smjmu_h2 <- cont_A_Smamu_h1 <- cont_A_Smamu_h2 <- cont_A_Smamu_w1 <- cont_A_Smamu_w2 <- cont_A_Smamu_s <- 
  cont_A_Smjsd_w1 <- cont_A_Smjsd_w2 <- cont_A_Smjsd_s <- cont_A_Smjsd_h1 <- cont_A_Smjsd_h2 <- cont_A_Smasd_h1 <- cont_A_Smasd_h2 <- cont_A_Smasd_w1 <- cont_A_Smasd_w2 <- cont_A_Smasd_s <-
  cont_n_Smjmu_w1 <- cont_n_Smjmu_w2 <- cont_n_Smjmu_s <- cont_n_Smjmu_h1 <- cont_n_Smjmu_h2 <- cont_n_Smamu_h1 <- cont_n_Smamu_h2 <- cont_n_Smamu_w1 <- cont_n_Smamu_w2 <- cont_n_Smamu_s <- 
  cont_n_Smjsd_w1 <- cont_n_Smjsd_w2 <- cont_n_Smjsd_s <- cont_n_Smjsd_h1 <- cont_n_Smjsd_h2 <- cont_n_Smasd_h1 <- cont_n_Smasd_h2 <- cont_n_Smasd_w1 <- cont_n_Smasd_w2 <- cont_n_Smasd_s <- matrix(NA,samples,1)

# Equation 3; Koons et al. 2017
for (j in 1:samples){
  for(k in sp){
    
    cont_A_F1mu[j] <-         logF1mudiff[j,k] *      avg_eAF1mu[j]       
    cont_A_F2mu[j] <-         logF2mudiff[j,k] *      avg_eAF2mu[j]       
    cont_A_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *  avg_eASfjmu_w1[j] 
    cont_A_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *  avg_eASfamu_w1[j] 
    cont_A_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *  avg_eASfjmu_h1[j]  
    cont_A_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *  avg_eASfamu_h1[j] 
    cont_A_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *  avg_eASfjmu_w2[j] 
    cont_A_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *  avg_eASfamu_w2[j] 
    cont_A_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *  avg_eASfjmu_h2[j] 
    cont_A_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *  avg_eASfamu_h2[j] 
    cont_A_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *   avg_eASfjmu_s[j] 
    cont_A_Sfamu_s[j] <-      logSfa_smudiff[j,k] *   avg_eASfamu_s[j]  
    
    cont_A_F1sd[j] <-            logF1sigdiff[j,k] *      avg_eAF1sd[j]       
    cont_A_F2sd[j] <-            logF2sigdiff[j,k] *      avg_eAF2sd[j]       
    cont_A_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_eASfjsd_w1[j] 
    cont_A_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_eASfasd_w1[j] 
    cont_A_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_eASfjsd_h1[j]  
    cont_A_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_eASfasd_h1[j] 
    cont_A_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_eASfjsd_w2[j] 
    cont_A_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_eASfasd_w2[j] 
    cont_A_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_eASfjsd_h2[j] 
    cont_A_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_eASfasd_h2[j] 
    cont_A_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *   avg_eASfjsd_s[j] 
    cont_A_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *   avg_eASfasd_s[j]  
    
    
    cont_n_F1mu[j] <-         logF1mudiff[j,k] *       avg_enF1mu  [j]   
    cont_n_F2mu[j] <-         logF2mudiff[j,k] *       avg_enF2mu  [j]   
    cont_n_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *   avg_enSfjwmu1[j] 
    cont_n_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *   avg_enSfjwmu2[j] 
    cont_n_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *   avg_enSfawmu1[j]  
    cont_n_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *   avg_enSfawmu2[j] 
    cont_n_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *   avg_enSfjhmu1[j] 
    cont_n_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *   avg_enSfjhmu2[j] 
    cont_n_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *   avg_enSfahmu1[j] 
    cont_n_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *   avg_enSfahmu2[j] 
    cont_n_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *    avg_enSfasmu [j]
    cont_n_Sfamu_s[j] <-      logSfa_smudiff[j,k] *    avg_enSfjsmu [j] 
    
    cont_n_F1sd[j] <-            logF1sigdiff[j,k] *   avg_enF1sd  [j]
    cont_n_F2sd[j] <-            logF2sigdiff[j,k] *   avg_enF2sd  [j]
    cont_n_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_enSfjwsd1[j]
    cont_n_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_enSfjwsd2[j]
    cont_n_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_enSfawsd1[j]
    cont_n_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_enSfawsd2[j]
    cont_n_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_enSfjhsd1[j]
    cont_n_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_enSfjhsd2[j]
    cont_n_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_enSfahsd1[j]
    cont_n_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_enSfahsd2[j]
    cont_n_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *  avg_enSfassd [j]
    cont_n_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *  avg_enSfjssd [j]
    ###
    
    cont_A_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *  avg_eASmjmu_w1[j] 
    cont_A_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *  avg_eASmamu_w1[j] 
    cont_A_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *  avg_eASmjmu_h1[j]  
    cont_A_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *  avg_eASmamu_h1[j] 
    cont_A_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *  avg_eASmjmu_w2[j] 
    cont_A_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *  avg_eASmamu_w2[j] 
    cont_A_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *  avg_eASmjmu_h2[j] 
    cont_A_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *  avg_eASmamu_h2[j] 
    cont_A_Smjmu_s[j] <-      logSmj_smudiff[j,k] *   avg_eASmjmu_s[j] 
    cont_A_Smamu_s[j] <-      logSma_smudiff[j,k] *   avg_eASmamu_s[j]  
    
    cont_A_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_eASmjsd_w1[j] 
    cont_A_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_eASmasd_w1[j] 
    cont_A_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_eASmjsd_h1[j]  
    cont_A_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_eASmasd_h1[j] 
    cont_A_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_eASmjsd_w2[j] 
    cont_A_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_eASmasd_w2[j] 
    cont_A_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_eASmjsd_h2[j] 
    cont_A_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_eASmasd_h2[j] 
    cont_A_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *   avg_eASmjsd_s[j] 
    cont_A_Smasd_s[j] <-       logSma_ssigdiff[j,k] *   avg_eASmasd_s[j]  
    
    cont_n_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *   avg_enSmjwmu1[j] 
    cont_n_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *   avg_enSmjwmu2[j] 
    cont_n_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *   avg_enSmawmu1[j]  
    cont_n_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *   avg_enSmawmu2[j] 
    cont_n_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *   avg_enSmjhmu1[j] 
    cont_n_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *   avg_enSmjhmu2[j] 
    cont_n_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *   avg_enSmahmu1[j] 
    cont_n_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *   avg_enSmahmu2[j] 
    cont_n_Smjmu_s[j] <-      logSmj_smudiff[j,k] *    avg_enSmasmu [j]
    cont_n_Smamu_s[j] <-      logSma_smudiff[j,k] *    avg_enSmjsmu [j] 
    
    cont_n_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_enSmjwsd1[j]
    cont_n_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_enSmjwsd2[j]
    cont_n_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_enSmawsd1[j]
    cont_n_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_enSmawsd2[j]
    cont_n_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_enSmjhsd1[j]
    cont_n_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_enSmjhsd2[j]
    cont_n_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_enSmahsd1[j]
    cont_n_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_enSmahsd2[j]
    cont_n_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *  avg_enSmassd [j]
    cont_n_Smasd_s[j] <-       logSma_ssigdiff[j,k] *  avg_enSmjssd [j]
  }
}

# Total effect of shifts in the mean vital rate (A_mu), its variance [A_sd], or the indirect effects of demographic rates channeled through shifts in the mean (n_mu) or variance (n_sd) population structure
totF1 <- cont_A_F1mu + cont_A_F1sd + cont_n_F1mu + cont_n_F1sd
totF2 <- cont_A_F2mu + cont_A_F2sd + cont_n_F2mu + cont_n_F2sd
totF  <- totF1 + totF2

tot_Sf_w_j_1 <- cont_A_Sfjmu_w1 + cont_A_Sfjsd_w1 + cont_n_Sfjmu_w1 + cont_n_Sfjsd_w1 
tot_Sf_w_j_2 <- cont_A_Sfjmu_w2 + cont_A_Sfjsd_w2 + cont_n_Sfjmu_w2 + cont_n_Sfjsd_w2
tot_Sf_2_j_1 <- cont_A_Sfjmu_s + cont_A_Sfjsd_s + cont_n_Sfjmu_s + cont_n_Sfjsd_s
tot_Sf_h_j_1 <- cont_A_Sfjmu_h1 + cont_A_Sfjsd_h1 + cont_n_Sfjmu_h1 + cont_n_Sfjsd_h1
tot_Sf_h_j_2 <- cont_A_Sfjmu_h2 + cont_A_Sfjsd_h2 + cont_n_Sfjmu_h2 + cont_n_Sfjsd_h2
tot_Sf_h_a_1 <- cont_A_Sfamu_h1 + cont_A_Sfasd_h1 + cont_n_Sfamu_h1 + cont_n_Sfasd_h1
tot_Sf_h_a_2 <- cont_A_Sfamu_h2 + cont_A_Sfasd_h2 + cont_n_Sfamu_h2 + cont_n_Sfasd_h2
tot_Sf_w_a_1 <- cont_A_Sfamu_w1 + cont_A_Sfasd_w1 + cont_n_Sfamu_w1 + cont_n_Sfasd_w1
tot_Sf_w_a_2 <- cont_A_Sfamu_w2 + cont_A_Sfasd_w2 + cont_n_Sfamu_w2 + cont_n_Sfasd_w2
tot_Sf_2_2_1 <- cont_A_Sfamu_s + cont_A_Sfasd_s + cont_n_Sfamu_s + cont_n_Sfasd_s

tot_Sm_w_j_1 <- cont_A_Smjmu_w1 + cont_A_Smjsd_w1 + cont_n_Smjmu_w1 + cont_n_Smjsd_w1 
tot_Sm_w_j_2 <- cont_A_Smjmu_w2 + cont_A_Smjsd_w2 + cont_n_Smjmu_w2 + cont_n_Smjsd_w2
tot_Sm_2_j_1 <- cont_A_Smjmu_s + cont_A_Smjsd_s + cont_n_Smjmu_s + cont_n_Smjsd_s
tot_Sm_h_j_1 <- cont_A_Smjmu_h1 + cont_A_Smjsd_h1 + cont_n_Smjmu_h1 + cont_n_Smjsd_h1
tot_Sm_h_j_2 <- cont_A_Smjmu_h2 + cont_A_Smjsd_h2 + cont_n_Smjmu_h2 + cont_n_Smjsd_h2
tot_Sm_h_a_1 <- cont_A_Smamu_h1 + cont_A_Smasd_h1 + cont_n_Smamu_h1 + cont_n_Smasd_h1
tot_Sm_h_a_2 <- cont_A_Smamu_h2 + cont_A_Smasd_h2 + cont_n_Smamu_h2 + cont_n_Smasd_h2
tot_Sm_w_a_1 <- cont_A_Smamu_w1 + cont_A_Smasd_w1 + cont_n_Smamu_w1 + cont_n_Smasd_w1
tot_Sm_w_a_2 <- cont_A_Smamu_w2 + cont_A_Smasd_w2 + cont_n_Smamu_w2 + cont_n_Smasd_w2
tot_Sm_2_2_1 <- cont_A_Smamu_s + cont_A_Smasd_s + cont_n_Smamu_s + cont_n_Smasd_s

cont_time_north_2 <- rbind.data.frame(
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'Total', value = 'Total', mean = mean(totF1      ), lower = quantile(totF1      ,probs = 0.05),upper = quantile(totF1      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'Total', value = 'Total', mean = mean(totF2      ), lower = quantile(totF2      ,probs = 0.05),upper = quantile(totF2      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_1), lower = quantile(tot_Sf_w_j_1,probs = 0.05),upper = quantile(tot_Sf_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_1), lower = quantile(tot_Sf_w_a_1,probs = 0.05),upper = quantile(tot_Sf_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_1), lower = quantile(tot_Sf_h_j_1,probs = 0.05),upper = quantile(tot_Sf_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_1), lower = quantile(tot_Sf_h_a_1,probs = 0.05),upper = quantile(tot_Sf_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_2), lower = quantile(tot_Sf_w_j_2,probs = 0.05),upper = quantile(tot_Sf_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_2), lower = quantile(tot_Sf_w_a_2,probs = 0.05),upper = quantile(tot_Sf_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_2), lower = quantile(tot_Sf_h_j_2,probs = 0.05),upper = quantile(tot_Sf_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_2), lower = quantile(tot_Sf_h_a_2,probs = 0.05),upper = quantile(tot_Sf_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_j_1), lower = quantile(tot_Sf_2_j_1,probs = 0.05),upper = quantile(tot_Sf_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_2_1), lower = quantile(tot_Sf_2_2_1,probs = 0.05),upper = quantile(tot_Sf_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'mu', mean = mean(cont_A_F1mu    ), lower = quantile(cont_A_F1mu    ,probs = 0.05),upper = quantile(cont_A_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'mu', mean = mean(cont_A_F2mu    ), lower = quantile(cont_A_F2mu    ,probs = 0.05),upper = quantile(cont_A_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w1), lower = quantile(cont_A_Sfjmu_w1,probs = 0.05),upper = quantile(cont_A_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w1), lower = quantile(cont_A_Sfamu_w1,probs = 0.05),upper = quantile(cont_A_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h1), lower = quantile(cont_A_Sfjmu_h1,probs = 0.05),upper = quantile(cont_A_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h1), lower = quantile(cont_A_Sfamu_h1,probs = 0.05),upper = quantile(cont_A_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w2), lower = quantile(cont_A_Sfjmu_w2,probs = 0.05),upper = quantile(cont_A_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w2), lower = quantile(cont_A_Sfamu_w2,probs = 0.05),upper = quantile(cont_A_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h2), lower = quantile(cont_A_Sfjmu_h2,probs = 0.05),upper = quantile(cont_A_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h2), lower = quantile(cont_A_Sfamu_h2,probs = 0.05),upper = quantile(cont_A_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_s ), lower = quantile(cont_A_Sfjmu_s ,probs = 0.05),upper = quantile(cont_A_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_s ), lower = quantile(cont_A_Sfamu_s ,probs = 0.05),upper = quantile(cont_A_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'sd', mean = mean(cont_A_F1sd    ), lower = quantile(cont_A_F1sd    ,probs = 0.05),upper = quantile(cont_A_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'sd', mean = mean(cont_A_F2sd    ), lower = quantile(cont_A_F2sd    ,probs = 0.05),upper = quantile(cont_A_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w1), lower = quantile(cont_A_Sfjsd_w1,probs = 0.05),upper = quantile(cont_A_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w1), lower = quantile(cont_A_Sfasd_w1,probs = 0.05),upper = quantile(cont_A_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h1), lower = quantile(cont_A_Sfjsd_h1,probs = 0.05),upper = quantile(cont_A_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h1), lower = quantile(cont_A_Sfasd_h1,probs = 0.05),upper = quantile(cont_A_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w2), lower = quantile(cont_A_Sfjsd_w2,probs = 0.05),upper = quantile(cont_A_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w2), lower = quantile(cont_A_Sfasd_w2,probs = 0.05),upper = quantile(cont_A_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h2), lower = quantile(cont_A_Sfjsd_h2,probs = 0.05),upper = quantile(cont_A_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h2), lower = quantile(cont_A_Sfasd_h2,probs = 0.05),upper = quantile(cont_A_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_s ), lower = quantile(cont_A_Sfjsd_s ,probs = 0.05),upper = quantile(cont_A_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_s ), lower = quantile(cont_A_Sfasd_s ,probs = 0.05),upper = quantile(cont_A_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'mu', mean = mean(cont_n_F1mu    ), lower = quantile(cont_n_F1mu    ,probs = 0.05),upper = quantile(cont_n_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'mu', mean = mean(cont_n_F2mu    ), lower = quantile(cont_n_F2mu    ,probs = 0.05),upper = quantile(cont_n_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w1), lower = quantile(cont_n_Sfjmu_w1,probs = 0.05),upper = quantile(cont_n_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w1), lower = quantile(cont_n_Sfamu_w1,probs = 0.05),upper = quantile(cont_n_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h1), lower = quantile(cont_n_Sfjmu_h1,probs = 0.05),upper = quantile(cont_n_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h1), lower = quantile(cont_n_Sfamu_h1,probs = 0.05),upper = quantile(cont_n_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w2), lower = quantile(cont_n_Sfjmu_w2,probs = 0.05),upper = quantile(cont_n_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w2), lower = quantile(cont_n_Sfamu_w2,probs = 0.05),upper = quantile(cont_n_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h2), lower = quantile(cont_n_Sfjmu_h2,probs = 0.05),upper = quantile(cont_n_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h2), lower = quantile(cont_n_Sfamu_h2,probs = 0.05),upper = quantile(cont_n_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_s ), lower = quantile(cont_n_Sfjmu_s ,probs = 0.05),upper = quantile(cont_n_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_s ), lower = quantile(cont_n_Sfamu_s ,probs = 0.05),upper = quantile(cont_n_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'sd', mean = mean(cont_n_F1sd    ), lower = quantile(cont_n_F1sd    ,probs = 0.05),upper = quantile(cont_n_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'sd', mean = mean(cont_n_F2sd    ), lower = quantile(cont_n_F2sd    ,probs = 0.05),upper = quantile(cont_n_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w1), lower = quantile(cont_n_Sfjsd_w1,probs = 0.05),upper = quantile(cont_n_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w1), lower = quantile(cont_n_Sfasd_w1,probs = 0.05),upper = quantile(cont_n_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h1), lower = quantile(cont_n_Sfjsd_h1,probs = 0.05),upper = quantile(cont_n_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h1), lower = quantile(cont_n_Sfasd_h1,probs = 0.05),upper = quantile(cont_n_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w2), lower = quantile(cont_n_Sfjsd_w2,probs = 0.05),upper = quantile(cont_n_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w2), lower = quantile(cont_n_Sfasd_w2,probs = 0.05),upper = quantile(cont_n_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h2), lower = quantile(cont_n_Sfjsd_h2,probs = 0.05),upper = quantile(cont_n_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h2), lower = quantile(cont_n_Sfasd_h2,probs = 0.05),upper = quantile(cont_n_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_s ), lower = quantile(cont_n_Sfjsd_s ,probs = 0.05),upper = quantile(cont_n_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_s ), lower = quantile(cont_n_Sfasd_s ,probs = 0.05),upper = quantile(cont_n_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_1), lower = quantile(tot_Sm_w_j_1,probs = 0.05),upper = quantile(tot_Sm_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_1), lower = quantile(tot_Sm_w_a_1,probs = 0.05),upper = quantile(tot_Sm_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_1), lower = quantile(tot_Sm_h_j_1,probs = 0.05),upper = quantile(tot_Sm_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_1), lower = quantile(tot_Sm_h_a_1,probs = 0.05),upper = quantile(tot_Sm_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_2), lower = quantile(tot_Sm_w_j_2,probs = 0.05),upper = quantile(tot_Sm_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_2), lower = quantile(tot_Sm_w_a_2,probs = 0.05),upper = quantile(tot_Sm_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_2), lower = quantile(tot_Sm_h_j_2,probs = 0.05),upper = quantile(tot_Sm_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_2), lower = quantile(tot_Sm_h_a_2,probs = 0.05),upper = quantile(tot_Sm_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_j_1), lower = quantile(tot_Sm_2_j_1,probs = 0.05),upper = quantile(tot_Sm_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_2_1), lower = quantile(tot_Sm_2_2_1,probs = 0.05),upper = quantile(tot_Sm_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w1), lower = quantile(cont_A_Smjmu_w1,probs = 0.05),upper = quantile(cont_A_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w1), lower = quantile(cont_A_Smamu_w1,probs = 0.05),upper = quantile(cont_A_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h1), lower = quantile(cont_A_Smjmu_h1,probs = 0.05),upper = quantile(cont_A_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h1), lower = quantile(cont_A_Smamu_h1,probs = 0.05),upper = quantile(cont_A_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w2), lower = quantile(cont_A_Smjmu_w2,probs = 0.05),upper = quantile(cont_A_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w2), lower = quantile(cont_A_Smamu_w2,probs = 0.05),upper = quantile(cont_A_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h2), lower = quantile(cont_A_Smjmu_h2,probs = 0.05),upper = quantile(cont_A_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h2), lower = quantile(cont_A_Smamu_h2,probs = 0.05),upper = quantile(cont_A_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_s ), lower = quantile(cont_A_Smjmu_s ,probs = 0.05),upper = quantile(cont_A_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_s ), lower = quantile(cont_A_Smamu_s ,probs = 0.05),upper = quantile(cont_A_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w1), lower = quantile(cont_A_Smjsd_w1,probs = 0.05),upper = quantile(cont_A_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w1), lower = quantile(cont_A_Smasd_w1,probs = 0.05),upper = quantile(cont_A_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h1), lower = quantile(cont_A_Smjsd_h1,probs = 0.05),upper = quantile(cont_A_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h1), lower = quantile(cont_A_Smasd_h1,probs = 0.05),upper = quantile(cont_A_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w2), lower = quantile(cont_A_Smjsd_w2,probs = 0.05),upper = quantile(cont_A_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w2), lower = quantile(cont_A_Smasd_w2,probs = 0.05),upper = quantile(cont_A_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h2), lower = quantile(cont_A_Smjsd_h2,probs = 0.05),upper = quantile(cont_A_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h2), lower = quantile(cont_A_Smasd_h2,probs = 0.05),upper = quantile(cont_A_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_s ), lower = quantile(cont_A_Smjsd_s ,probs = 0.05),upper = quantile(cont_A_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_s ), lower = quantile(cont_A_Smasd_s ,probs = 0.05),upper = quantile(cont_A_Smasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w1), lower = quantile(cont_n_Smjmu_w1,probs = 0.05),upper = quantile(cont_n_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w1), lower = quantile(cont_n_Smamu_w1,probs = 0.05),upper = quantile(cont_n_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h1), lower = quantile(cont_n_Smjmu_h1,probs = 0.05),upper = quantile(cont_n_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h1), lower = quantile(cont_n_Smamu_h1,probs = 0.05),upper = quantile(cont_n_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w2), lower = quantile(cont_n_Smjmu_w2,probs = 0.05),upper = quantile(cont_n_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w2), lower = quantile(cont_n_Smamu_w2,probs = 0.05),upper = quantile(cont_n_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h2), lower = quantile(cont_n_Smjmu_h2,probs = 0.05),upper = quantile(cont_n_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h2), lower = quantile(cont_n_Smamu_h2,probs = 0.05),upper = quantile(cont_n_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_s ), lower = quantile(cont_n_Smjmu_s ,probs = 0.05),upper = quantile(cont_n_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_s ), lower = quantile(cont_n_Smamu_s ,probs = 0.05),upper = quantile(cont_n_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w1), lower = quantile(cont_n_Smjsd_w1,probs = 0.05),upper = quantile(cont_n_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w1), lower = quantile(cont_n_Smasd_w1,probs = 0.05),upper = quantile(cont_n_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h1), lower = quantile(cont_n_Smjsd_h1,probs = 0.05),upper = quantile(cont_n_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h1), lower = quantile(cont_n_Smasd_h1,probs = 0.05),upper = quantile(cont_n_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w2), lower = quantile(cont_n_Smjsd_w2,probs = 0.05),upper = quantile(cont_n_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w2), lower = quantile(cont_n_Smasd_w2,probs = 0.05),upper = quantile(cont_n_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h2), lower = quantile(cont_n_Smjsd_h2,probs = 0.05),upper = quantile(cont_n_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h2), lower = quantile(cont_n_Smasd_h2,probs = 0.05),upper = quantile(cont_n_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_s ), lower = quantile(cont_n_Smjsd_s ,probs = 0.05),upper = quantile(cont_n_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_s ), lower = quantile(cont_n_Smasd_s ,probs = 0.05),upper = quantile(cont_n_Smasd_s ,probs = 0.95))
  
)
tot_fec <- totF
tot_fwhy <- tot_Sf_w_j_1 + tot_Sf_w_j_2
tot_fwah <- tot_Sf_w_a_1 + tot_Sf_w_a_2
tot_fssy <- tot_Sf_2_j_1
tot_fsas <- tot_Sf_2_2_1
tot_fhhy <- tot_Sf_h_j_1 + tot_Sf_h_j_2
tot_fhah <- tot_Sf_h_a_1 + tot_Sf_h_a_2
tot_mwhy <- tot_Sm_w_j_1 + tot_Sm_w_j_2
tot_mwah <- tot_Sm_w_a_1 + tot_Sm_w_a_2
tot_mssy <- tot_Sm_2_j_1
tot_msas <- tot_Sm_2_2_1
tot_mhhy <- tot_Sm_h_j_1 + tot_Sm_h_j_2
tot_mhah <- tot_Sm_h_a_1 + tot_Sm_h_a_2

cont_total_north_2 <- rbind.data.frame(
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'FEC', statistic = 'Total', value = 'Total', mean = mean(tot_fec), lower = quantile(tot_fec,probs = 0.05),upper = quantile(tot_fec,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_fwhy), lower = quantile(tot_fwhy,probs = 0.05),upper = quantile(tot_fwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_fwah), lower = quantile(tot_fwah,probs = 0.05),upper = quantile(tot_fwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_fssy), lower = quantile(tot_fssy,probs = 0.05),upper = quantile(tot_fssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_fsas), lower = quantile(tot_fsas,probs = 0.05),upper = quantile(tot_fsas,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_fhhy), lower = quantile(tot_fhhy,probs = 0.05),upper = quantile(tot_fhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_fhah), lower = quantile(tot_fhah,probs = 0.05),upper = quantile(tot_fhah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_mwhy), lower = quantile(tot_mwhy,probs = 0.05),upper = quantile(tot_mwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_mwah), lower = quantile(tot_mwah,probs = 0.05),upper = quantile(tot_mwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_mssy), lower = quantile(tot_mssy,probs = 0.05),upper = quantile(tot_mssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_msas), lower = quantile(tot_msas,probs = 0.05),upper = quantile(tot_msas,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_mhhy), lower = quantile(tot_mhhy,probs = 0.05),upper = quantile(tot_mhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_mhah), lower = quantile(tot_mhah,probs = 0.05),upper = quantile(tot_mhah,probs = 0.95))
)



###########################################################################
#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#%#
###########################################################################



# Region North, Comparison 1
Time <- 20
refpi_ak <- refpi_no <- refpi_pr <- refF1 <- refF2 <- refSfj_w1 <- refSfa_w1 <- refSfj_w2 <- refSfa_w2  <- refSfj_s <- refSfa_s <- refSfj_h1 <- refSfa_h1 <- refSfj_h2 <- refSfa_h2  <- refSmj_w1 <- refSma_w1 <- refSmj_w2 <- refSma_w2  <- refSmj_s <- refSma_s <- refSmj_h1 <- refSma_h1 <- refSmj_h2 <- refSma_h2  <- lam_realref <- array(NA,dim = c(samples,Time,3))
refnf1   <- refnf2 <-refnm1 <- refnm2 <- matrix(NA,samples, 3)
refn     <- array(NA,dim=c(4,1,samples,Time+1,3))
Sfj_w1_reg <- Sfj_w2_reg <- Sfj_h1_reg <- Sfj_h2_reg <- Sfa_w1_reg <- Sfa_w2_reg <- Sfa_h1_reg <- Sfa_h2_reg <-Smj_w1_reg <- Smj_w2_reg <- Smj_h1_reg <- Smj_h2_reg <- Sma_w1_reg <- Sma_w2_reg <- Sma_h1_reg <- Sma_h2_reg <- array(NA,dim=c(60,samples,3))

# Annual vital rates
for (j in 1:samples){
  for(k in 1:n.region){
    for(t in 1:60){
      Sfj_w1_reg[t,j,k] <- Sfj_w1[t,j] * mu_psi[t,j,k]
      Sfa_w1_reg[t,j,k] <- Sfa_w1[t,j] * mu_psi[t,j,k]
      Sfj_w2_reg[t,j,k] <- Sfj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_w2_reg[t,j,k] <- Sfa_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Sfj_h1_reg[t,j,k] <- Sfj_h1[t,j] * mu_psi[t,j,k]
      Sfa_h1_reg[t,j,k] <- Sfa_h1[t,j] * mu_psi[t,j,k]
      Sfj_h2_reg[t,j,k] <- Sfj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_h2_reg[t,j,k] <- Sfa_h2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_w1_reg[t,j,k] <- Smj_w1[t,j] * mu_psi[t,j,k]
      Sma_w1_reg[t,j,k] <- Sma_w1[t,j] * mu_psi[t,j,k]
      Smj_w2_reg[t,j,k] <- Smj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sma_w2_reg[t,j,k] <- Sma_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_h1_reg[t,j,k] <- Smj_h1[t,j] * mu_psi[t,j,k]
      Sma_h1_reg[t,j,k] <- Sma_h1[t,j] * mu_psi[t,j,k]
      Smj_h2_reg[t,j,k] <- Smj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sma_h2_reg[t,j,k] <- Sma_h2[t,j] * (1 - mu_psi[t,j,k])
    }
    # Average vital rate between the starts of each time period
    refnf1[j,k] <- (nf1[sta1,j,k] + nf1[sta2,j,k]) / 2
    refnf2[j,k] <- (nf2[sta1,j,k] + nf2[sta2,j,k]) / 2
    refnm1[j,k] <- (nm1[sta1,j,k] + nm1[sta2,j,k]) / 2
    refnm2[j,k] <- (nm2[sta1,j,k] + nm2[sta2,j,k]) / 2
    
    refn[1,1,j,1,k] <- refnf1[j,k]
    refn[2,1,j,1,k] <- refnf2[j,k]
    
    refn[3,1,j,1,k] <- refnm1[j,k]
    refn[4,1,j,1,k] <- refnm2[j,k]
    
    for (i in 1:Time){
      refpi_ak[j,i,k] <-   (pi_ak[i+sta1-1,j,k] +   pi_ak[i+sta2-1,j,k]) / 2
      refpi_no[j,i,k] <-   (pi_no[i+sta1-1,j,k] +   pi_no[i+sta2-1,j,k]) / 2
      refpi_pr[j,i,k] <-   (pi_pr[i+sta1-1,j,k] +   pi_pr[i+sta2-1,j,k]) / 2
      
      refF1[j,i,k] <-   (F1[i+sta1-1,j,k] + F1[i+sta2-1,j,k]) / 2
      refF2[j,i,k] <-   (F2[i+sta1-1,j,k] + F2[i+sta2-1,j,k]) / 2
      
      refSfj_w1[j,i,k] <- ((Sfj_w1_reg[i+sta1-1,j,k] + Sfj_w1_reg[i+sta2-1,j,k]) / 2)
      refSfa_w1[j,i,k] <- ((Sfa_w1_reg[i+sta1-1,j,k] + Sfa_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_w2[j,i,k] <- ((Sfj_w2_reg[i+sta1-1,j,k] + Sfj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_w2[j,i,k] <- ((Sfa_w2_reg[i+sta1-1,j,k] + Sfa_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSfj_s[j,i,k]    <- (Sfj_s[i+sta1-1,j,k] +  Sfj_s[i+sta2-1,j,k]) / 2
      refSfa_s[j,i,k]    <- (Sfa_s[i+sta1-1,j,k] +  Sfa_s[i+sta2-1,j,k]) / 2
      
      refSfj_h1[j,i,k] <- ((Sfj_h1_reg[i+sta1-1,j,k] + Sfj_h1_reg[i+sta2-1,j,k]) / 2)
      refSfa_h1[j,i,k] <- ((Sfa_h1_reg[i+sta1-1,j,k] + Sfa_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_h2[j,i,k] <- ((Sfj_h2_reg[i+sta1-1,j,k] + Sfj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_h2[j,i,k] <- ((Sfa_h2_reg[i+sta1-1,j,k] + Sfa_h2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_w1[j,i,k] <- ((Smj_w1_reg[i+sta1-1,j,k] + Smj_w1_reg[i+sta2-1,j,k]) / 2)
      refSma_w1[j,i,k] <- ((Sma_w1_reg[i+sta1-1,j,k] + Sma_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_w2[j,i,k] <- ((Smj_w2_reg[i+sta1-1,j,k] + Smj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSma_w2[j,i,k] <- ((Sma_w2_reg[i+sta1-1,j,k] + Sma_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_s[j,i,k] <-    (Smj_s[i+sta1-1,j,k] +  Smj_s[i+sta2-1,j,k]) / 2
      refSma_s[j,i,k] <-    (Sma_s[i+sta1-1,j,k] +  Sma_s[i+sta2-1,j,k]) / 2
      
      refSmj_h1[j,i,k] <- ((Smj_h1_reg[i+sta1-1,j,k] + Smj_h1_reg[i+sta2-1,j,k]) / 2)
      refSma_h1[j,i,k] <- ((Sma_h1_reg[i+sta1-1,j,k] + Sma_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_h2[j,i,k] <- ((Smj_h2_reg[i+sta1-1,j,k] + Smj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSma_h2[j,i,k] <- ((Sma_h2_reg[i+sta1-1,j,k] + Sma_h2_reg[i+sta2-1,j,k]) / 2) 
      
      # Demographic projection matrix for each region
      A_AK <- matrix(c(
        0.5*refF1[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),0,0,
        
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),0,0,
        
        0.5*refF1[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),0,0,
        
        0,0,
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1]),
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1])
      ), nrow=4, byrow=TRUE)
      
      A_NO <- matrix(c(
        0.5*refF1[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 0,0,
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),0,0,
        
        0.5*refF1[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 0,0,
        
        0,0,
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2]),
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2])
      ), nrow=4, byrow=TRUE)
      
      A_PR <- matrix(c(
        0.5*refF1[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 0,0,
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),0,0,
        
        0.5*refF1[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 0,0,
        
        0,0,
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3]),
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3])
      ), nrow=4, byrow=TRUE)
      
      n_ak <- A_AK %*% refn[,,j,i,1]
      n_no <- A_NO %*% refn[,,j,i,2]
      n_pr <- A_PR %*% refn[,,j,i,3]
      
      lam_realref[j,i,1] <- sum( n_ak)
      lam_realref[j,i,2] <- sum( n_no)
      lam_realref[j,i,3] <- sum( n_pr)
      
      refn[,1,j,i+1,1] <-  n_ak/sum( n_ak) #store the proportionate abundances
      refn[,1,j,i+1,2] <-  n_no/sum( n_no) #store the proportionate abundances
      refn[,1,j,i+1,3] <-  n_pr/sum( n_pr) #store the proportionate abundances
    }
  }
}

# temporal means of the lower-level vital rates
refF1mu     <- apply(refF1 ,c(1,3),mean)
refF2mu     <- apply(refF2 ,c(1,3),mean)
refSfjmu_w1 <- apply(refSfj_w1,c(1,3),mean)
refSfamu_w1 <- apply(refSfa_w1,c(1,3),mean)
refSfjmu_w2 <- apply(refSfj_w2,c(1,3),mean)
refSfamu_w2 <- apply(refSfa_w2,c(1,3),mean)
refSfjmu_h1 <- apply(refSfj_h1,c(1,3),mean)
refSfamu_h1 <- apply(refSfa_h1,c(1,3),mean)
refSfjmu_h2 <- apply(refSfj_h2,c(1,3),mean)
refSfamu_h2 <- apply(refSfa_h2,c(1,3),mean)
refSfjmu_s  <- apply(refSfj_s,c(1,3),mean)
refSfamu_s  <- apply(refSfa_s,c(1,3),mean)
refSmjmu_w1 <- apply(refSmj_w1,c(1,3),mean)
refSmamu_w1 <- apply(refSma_w1,c(1,3),mean)
refSmjmu_w2 <- apply(refSmj_w2,c(1,3),mean)
refSmamu_w2 <- apply(refSma_w2,c(1,3),mean)
refSmjmu_h1 <- apply(refSmj_h1,c(1,3),mean)
refSmamu_h1 <- apply(refSma_h1,c(1,3),mean)
refSmjmu_h2 <- apply(refSmj_h2,c(1,3),mean)
refSmamu_h2 <- apply(refSma_h2,c(1,3),mean)
refSmjmu_s  <- apply(refSmj_s,c(1,3),mean)
refSmamu_s  <- apply(refSma_s,c(1,3),mean)

logF1mudiff      <- matrix(NA,samples,3)
logF2mudiff      <- matrix(NA,samples,3)
logSfj1_wmudiff  <- matrix(NA,samples,3)
logSfa1_wmudiff  <- matrix(NA,samples,3)
logSfj1_hmudiff  <- matrix(NA,samples,3)
logSfa1_hmudiff  <- matrix(NA,samples,3)
logSfj2_wmudiff  <- matrix(NA,samples,3)
logSfa2_wmudiff  <- matrix(NA,samples,3)
logSfj2_hmudiff  <- matrix(NA,samples,3)
logSfa2_hmudiff  <- matrix(NA,samples,3)
logSfj_smudiff   <- matrix(NA,samples,3)
logSfa_smudiff   <- matrix(NA,samples,3)

logSmj1_wmudiff  <- matrix(NA,samples,3)
logSma1_wmudiff  <- matrix(NA,samples,3)
logSmj1_hmudiff  <- matrix(NA,samples,3)
logSma1_hmudiff  <- matrix(NA,samples,3)
logSmj2_wmudiff  <- matrix(NA,samples,3)
logSma2_wmudiff  <- matrix(NA,samples,3)
logSmj2_hmudiff  <- matrix(NA,samples,3)
logSma2_hmudiff  <- matrix(NA,samples,3)
logSmj_smudiff   <- matrix(NA,samples,3)
logSma_smudiff   <- matrix(NA,samples,3)

logF1sigdiff     <- matrix(NA,samples,3)
logF2sigdiff     <- matrix(NA,samples,3)
logSfj1_wsigdiff <- matrix(NA,samples,3)
logSfa1_wsigdiff <- matrix(NA,samples,3)
logSfj1_hsigdiff <- matrix(NA,samples,3)
logSfa1_hsigdiff <- matrix(NA,samples,3)
logSfj2_wsigdiff <- matrix(NA,samples,3)
logSfa2_wsigdiff <- matrix(NA,samples,3)
logSfj2_hsigdiff <- matrix(NA,samples,3)
logSfa2_hsigdiff <- matrix(NA,samples,3)
logSfj_ssigdiff  <- matrix(NA,samples,3)
logSfa_ssigdiff  <- matrix(NA,samples,3)

logSmj1_wsigdiff <- matrix(NA,samples,3)
logSma1_wsigdiff <- matrix(NA,samples,3)
logSmj1_hsigdiff <- matrix(NA,samples,3)
logSma1_hsigdiff <- matrix(NA,samples,3)
logSmj2_wsigdiff <- matrix(NA,samples,3)
logSma2_wsigdiff <- matrix(NA,samples,3)
logSmj2_hsigdiff <- matrix(NA,samples,3)
logSma2_hsigdiff <- matrix(NA,samples,3)
logSmj_ssigdiff  <- matrix(NA,samples,3)
logSma_ssigdiff  <- matrix(NA,samples,3)

######################################################################################
# Step 7: Calculate differences on log scale in lower-level vital rate means 
# and standard deviations between time periods.
#######################################################################################

for (j in 1:samples){
  for(k in 1:n.region){      
    # Equation 3 Koons et al. 2017, log u_a - log u_b
    logF1mudiff[j,k]     <-        log(mean(F1[sta1:end1,j,k])) -        log(mean(F1[sta2:end2,j,k]))
    logF2mudiff[j,k]     <-        log(mean(F2[sta1:end1,j,k])) -        log(mean(F2[sta2:end2,j,k]))
    logSfj1_wmudiff[j,k] <-      log(mean(Sfj_w1_reg[sta1:end1,j,k]))-  log(mean(Sfj_w1_reg[sta2:end2,j,k])) 
    logSfa1_wmudiff[j,k] <-      log(mean(Sfa_w1_reg[sta1:end1,j,k]))-  log(mean(Sfa_w1_reg[sta2:end2,j,k])) 
    logSfj1_hmudiff[j,k] <-      log(mean(Sfj_h1_reg[sta1:end1,j,k]))-  log(mean(Sfj_h1_reg[sta2:end2,j,k]))
    logSfa1_hmudiff[j,k] <-      log(mean(Sfa_h1_reg[sta1:end1,j,k]))-  log(mean(Sfa_h1_reg[sta2:end2,j,k]))
    logSfj2_wmudiff[j,k] <-      log(mean(Sfj_w2_reg[sta1:end1,j,k]))-  log(mean(Sfj_w2_reg[sta2:end2,j,k])) 
    logSfa2_wmudiff[j,k] <-      log(mean(Sfa_w2_reg[sta1:end1,j,k]))-  log(mean(Sfa_w2_reg[sta2:end2,j,k])) 
    logSfj2_hmudiff[j,k] <-      log(mean(Sfj_h2_reg[sta1:end1,j,k]))-  log(mean(Sfj_h2_reg[sta2:end2,j,k]))
    logSfa2_hmudiff[j,k] <-      log(mean(Sfa_h2_reg[sta1:end1,j,k]))-  log(mean(Sfa_h2_reg[sta2:end2,j,k]))
    logSfj_smudiff[j,k]  <-      log(mean(Sfj2[sta1:end1,j,k])) -      log(mean(Sfj2[sta2:end2,j,k]))
    logSfa_smudiff[j,k]  <-      log(mean(Sfa2[sta1:end1,j,k])) -      log(mean(Sfa2[sta2:end2,j,k]))
    
    logSmj1_wmudiff[j,k] <-      log(mean(Smj_w1_reg[sta1:end1,j,k]))-  log(mean(Smj_w1_reg[sta2:end2,j,k])) 
    logSma1_wmudiff[j,k] <-      log(mean(Sma_w1_reg[sta1:end1,j,k]))-  log(mean(Sma_w1_reg[sta2:end2,j,k])) 
    logSmj1_hmudiff[j,k] <-      log(mean(Smj_h1_reg[sta1:end1,j,k]))-  log(mean(Smj_h1_reg[sta2:end2,j,k]))
    logSma1_hmudiff[j,k] <-      log(mean(Sma_h1_reg[sta1:end1,j,k]))-  log(mean(Sma_h1_reg[sta2:end2,j,k]))
    logSmj2_wmudiff[j,k] <-      log(mean(Smj_w2_reg[sta1:end1,j,k]))-  log(mean(Smj_w2_reg[sta2:end2,j,k])) 
    logSma2_wmudiff[j,k] <-      log(mean(Sma_w2_reg[sta1:end1,j,k]))-  log(mean(Sma_w2_reg[sta2:end2,j,k])) 
    logSmj2_hmudiff[j,k] <-      log(mean(Smj_h2_reg[sta1:end1,j,k]))-  log(mean(Smj_h2_reg[sta2:end2,j,k]))
    logSma2_hmudiff[j,k] <-      log(mean(Sma_h2_reg[sta1:end1,j,k]))-  log(mean(Sma_h2_reg[sta2:end2,j,k]))
    logSmj_smudiff[j,k]  <-      log(mean(Smj2[sta1:end1,j,k])) -      log(mean(Smj2[sta2:end2,j,k]))
    logSma_smudiff[j,k]  <-      log(mean(Sma2[sta1:end1,j,k])) -      log(mean(Sma2[sta2:end2,j,k]))
    
    # Equation 3 Koons et al. 2017, log sig_a - log sig_b
    logF1sigdiff[j,k]     <-   log(sqrt(var(F1[sta1:end1,j,k]))) -   log(sqrt(var(F1[sta2:end2,j,k])))
    logF2sigdiff[j,k]     <-   log(sqrt(var(F2[sta1:end1,j,k]))) -   log(sqrt(var(F2[sta2:end2,j,k])))
    logSfj_ssigdiff[j,k]  <-   log(sqrt(var(Sfj2[sta1:end1,j,k]))) - log(sqrt(var(Sfj2[sta2:end2,j,k])))
    logSfa_ssigdiff[j,k]  <-   log(sqrt(var(Sfa2[sta1:end1,j,k]))) - log(sqrt(var(Sfa2[sta2:end2,j,k])))
    logSfj1_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_w1_reg[sta2:end2,j,k])))
    logSfa1_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_w1_reg[sta2:end2,j,k])))
    logSfj1_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_h1_reg[sta2:end2,j,k])))
    logSfa1_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_h1_reg[sta2:end2,j,k])))
    logSfj2_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_w2_reg[sta2:end2,j,k])))
    logSfa2_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_w2_reg[sta2:end2,j,k])))
    logSfj2_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfj_h2_reg[sta2:end2,j,k])))
    logSfa2_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sfa_h2_reg[sta2:end2,j,k])))
    
    logSmj_ssigdiff[j,k] <- log(sqrt(var(Smj2[sta1:end1,j,k]))) - log(sqrt(var(Smj2[sta2:end2,j,k])))
    logSma_ssigdiff[j,k] <- log(sqrt(var(Sma2[sta1:end1,j,k]))) - log(sqrt(var(Sma2[sta2:end2,j,k])))
    logSmj1_wsigdiff[j,k] <-   log(sqrt(var(Smj_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_w1_reg[sta2:end2,j,k])))
    logSma1_wsigdiff[j,k] <-   log(sqrt(var(Sma_w1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_w1_reg[sta2:end2,j,k])))
    logSmj1_hsigdiff[j,k] <-   log(sqrt(var(Smj_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_h1_reg[sta2:end2,j,k])))
    logSma1_hsigdiff[j,k] <-   log(sqrt(var(Sma_h1_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_h1_reg[sta2:end2,j,k])))
    logSmj2_wsigdiff[j,k] <-   log(sqrt(var(Smj_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_w2_reg[sta2:end2,j,k])))
    logSma2_wsigdiff[j,k] <-   log(sqrt(var(Sma_w2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_w2_reg[sta2:end2,j,k])))
    logSmj2_hsigdiff[j,k] <-   log(sqrt(var(Smj_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Smj_h2_reg[sta2:end2,j,k])))
    logSma2_hsigdiff[j,k] <-   log(sqrt(var(Sma_h2_reg[sta1:end1,j,k]))) -  log(sqrt(var(Sma_h2_reg[sta2:end2,j,k])))
  }
}

# Step 8: Compute real-time elasticities, evaluated at the reference mean         
# Real-time elasticities for the direct effects of change in the lower-level vital rates.

S <- 4  # dimension of projection matrix
sp = 3  

eAF1mu  <- eAF2mu <- eASfjmu_w1 <- eASfjmu_w2 <- eASfjmu_s <- eASfjmu_h1 <- eASfjmu_h2 <- eASfamu_h1 <- eASfamu_h2 <- eASfamu_w1 <- eASfamu_w2 <- eASfamu_s <- 
  eASmjmu_w1 <- eASmjmu_w2 <- eASmjmu_s <- eASmjmu_h1 <- eASmjmu_h2 <- eASmamu_h1 <- eASmamu_h2 <- eASmamu_w1 <- eASmamu_w2 <- eASmamu_s <- 
  eAF1sd  <- eAF2sd <- eASfjsd_w1 <- eASfjsd_w2 <- eASfjsd_s <- eASfjsd_h1 <- eASfjsd_h2 <- eASfasd_h1 <- eASfasd_h2 <- eASfasd_w1 <- eASfasd_w2 <- eASfasd_s <- 
  eASmjsd_w1 <- eASmjsd_w2 <- eASmjsd_s <- eASmjsd_h1 <- eASmjsd_h2 <- eASmasd_h1 <- eASmasd_h2 <- eASmasd_w1 <- eASmasd_w2 <- eASmasd_s <-array(NA,dim=c(S,S,samples,Time))

tot_eAF1mu  <- tot_eAF2mu <- tot_eASfjmu_w1 <- tot_eASfjmu_w2 <- tot_eASfjmu_s <- tot_eASfjmu_h1 <- tot_eASfjmu_h2 <- tot_eASfamu_h1 <- tot_eASfamu_h2 <- tot_eASfamu_w1 <- tot_eASfamu_w2 <- tot_eASfamu_s <- 
  tot_eASmjmu_w1 <- tot_eASmjmu_w2 <- tot_eASmjmu_s <- tot_eASmjmu_h1 <- tot_eASmjmu_h2 <- tot_eASmamu_h1 <- tot_eASmamu_h2 <- tot_eASmamu_w1 <- tot_eASmamu_w2 <- tot_eASmamu_s <-
  tot_eAF1sd  <- tot_eAF2sd <- tot_eASfjsd_w1 <- tot_eASfjsd_w2 <- tot_eASfjsd_s <- tot_eASfjsd_h1 <- tot_eASfjsd_h2 <- tot_eASfasd_h1 <- tot_eASfasd_h2 <- tot_eASfasd_w1 <- tot_eASfasd_w2 <- tot_eASfasd_s  <-
  tot_eASmjsd_w1 <- tot_eASmjsd_w2 <- tot_eASmjsd_s <- tot_eASmjsd_h1 <- tot_eASmjsd_h2 <- tot_eASmasd_h1 <- tot_eASmasd_h2 <- tot_eASmasd_w1 <- tot_eASmasd_w2 <- tot_eASmasd_s  <-matrix(NA,samples,Time)


for (j in 1:samples){
  for (i in 1:Time){
    for(k in sp){ # manually change region
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s = refSfj_s[j,i,k],
        Sfa_s = refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s = refSmj_s[j,i,k],
        Sma_s = refSma_s[j,i,k],
        
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      for (m in 1:S){
        for (n in 1:S){
          # Equation 3 Koons et al. 2017, e^A_mu
          ##########################################################
          # Means
          eAF1mu[m,n,j,i] <- refF1mu[j,k] * dA_dF1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2mu[m,n,j,i] <- refF2mu[j,k] * dA_dF2[m,n] * refn[n,1,j,i,k] /  lam_realref[j,i,k]
          
          tot_eAF2mu[j,i] <- sum(sum(eAF2mu[,,j,i])) 
          tot_eAF1mu[j,i] <- sum(sum(eAF1mu[,,j,i])) 
          
          eASfjmu_w1[m,n,j,i] <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w1[m,n,j,i] <- refSfamu_w1[j,k] * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_w2[m,n,j,i] <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w2[m,n,j,i] <- refSfamu_w2[j,k] * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w1[m,n,j,i] <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w1[m,n,j,i] <- refSmamu_w1[j,k] * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w2[m,n,j,i] <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w2[m,n,j,i] <- refSmamu_w2[j,k] * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_w1[j,i] <-sum(sum(eASfjmu_w1[,,j,i]))
          tot_eASfamu_w1[j,i] <-sum(sum(eASfamu_w1[,,j,i]))
          tot_eASfjmu_w2[j,i] <-sum(sum(eASfjmu_w2[,,j,i]))
          tot_eASfamu_w2[j,i] <-sum(sum(eASfamu_w2[,,j,i]))
          tot_eASmjmu_w1[j,i] <-sum(sum(eASmjmu_w1[,,j,i]))
          tot_eASmamu_w1[j,i] <-sum(sum(eASmamu_w1[,,j,i]))
          tot_eASmjmu_w2[j,i] <-sum(sum(eASmjmu_w2[,,j,i]))
          tot_eASmamu_w2[j,i] <-sum(sum(eASmamu_w2[,,j,i]))
          
          eASfjmu_h1[m,n,j,i] <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h1[m,n,j,i] <- refSfamu_h1[j,k] * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_h2[m,n,j,i] <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h2[m,n,j,i] <- refSfamu_h2[j,k] * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h1[m,n,j,i] <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h1[m,n,j,i] <- refSmamu_h1[j,k] * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h2[m,n,j,i] <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h2[m,n,j,i] <- refSmamu_h2[j,k] * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k] 
          
          tot_eASfjmu_h1[j,i] <-sum(sum(eASfjmu_h1[,,j,i]))
          tot_eASfamu_h1[j,i] <-sum(sum(eASfamu_h1[,,j,i]))
          tot_eASfjmu_h2[j,i] <-sum(sum(eASfjmu_h2[,,j,i]))
          tot_eASfamu_h2[j,i] <-sum(sum(eASfamu_h2[,,j,i]))
          tot_eASmjmu_h1[j,i] <-sum(sum(eASmjmu_h1[,,j,i]))
          tot_eASmamu_h1[j,i] <-sum(sum(eASmamu_h1[,,j,i]))
          tot_eASmjmu_h2[j,i] <-sum(sum(eASmjmu_h2[,,j,i]))
          tot_eASmamu_h2[j,i] <-sum(sum(eASmamu_h2[,,j,i]))
          
          eASfjmu_s[m,n,j,i] <- refSfjmu_s[j,k] * dA_dSfjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_s[m,n,j,i] <- refSfamu_s[j,k] * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_s[m,n,j,i] <- refSmjmu_s[j,k] * dA_dSmjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_s[m,n,j,i] <- refSmamu_s[j,k] * dA_dSmas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_s[j,i] <- sum(sum(eASfjmu_s[,,j,i])) 
          tot_eASfamu_s[j,i] <- sum(sum(eASfamu_s[,,j,i])) 
          tot_eASmjmu_s[j,i] <- sum(sum(eASmjmu_s[,,j,i])) 
          tot_eASmamu_s[j,i] <- sum(sum(eASmamu_s[,,j,i])) 
          ##################################################################################### 
          # Variance
          # Equation 3 Koons et al. 2017, e^A_sd
          eAF1sd[m,n,j,i] <- (refF1[j,i,k] - refF1mu[j,k]) * dA_dF1[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2sd[m,n,j,i] <- (refF2[j,i,k] - refF2mu[j,k]) * dA_dF2[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eAF1sd[j,i] <- sum(sum(eAF1sd[,,j,i]))
          tot_eAF2sd[j,i] <- sum(sum(eAF2sd[,,j,i]))
          
          eASfjsd_w1[m,n,j,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w1[m,n,j,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_w2[m,n,j,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w2[m,n,j,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h1[m,n,j,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h1[m,n,j,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h2[m,n,j,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h2[m,n,j,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_s [m,n,j,i] <- (refSfj_s[j,i,k]   - refSfjmu_s[j,k]) * dA_dSfjs[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_s [m,n,j,i] <- (refSfa_s[j,i,k]   - refSfamu_s[j,k]) * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          eASmjsd_w1[m,n,j,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w1[m,n,j,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_w2[m,n,j,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w2[m,n,j,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h1[m,n,j,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h1[m,n,j,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h2[m,n,j,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h2[m,n,j,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_s [m,n,j,i] <- (refSmj_s[j,i,k]  - refSmjmu_s[j,k]) * dA_dSmjs[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_s [m,n,j,i] <- (refSma_s[j,i,k]  - refSmamu_s[j,k]) * dA_dSmas[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjsd_w1[j,i] <- sum(sum(eASfjsd_w1[,,j,i])) 
          tot_eASfasd_w1[j,i] <- sum(sum(eASfasd_w1[,,j,i])) 
          tot_eASfjsd_w2[j,i] <- sum(sum(eASfjsd_w2[,,j,i])) 
          tot_eASfasd_w2[j,i] <- sum(sum(eASfasd_w2[,,j,i])) 
          tot_eASfjsd_h1[j,i] <- sum(sum(eASfjsd_h1[,,j,i])) 
          tot_eASfasd_h1[j,i] <- sum(sum(eASfasd_h1[,,j,i])) 
          tot_eASfjsd_h2[j,i] <- sum(sum(eASfjsd_h2[,,j,i])) 
          tot_eASfasd_h2[j,i] <- sum(sum(eASfasd_h2[,,j,i])) 
          tot_eASfjsd_s [j,i] <- sum(sum(eASfjsd_s[,,j,i])) 
          tot_eASfasd_s [j,i] <- sum(sum(eASfasd_s[,,j,i])) 
          
          tot_eASmjsd_w1[j,i] <- sum(sum(eASmjsd_w1[,,j,i])) 
          tot_eASmasd_w1[j,i] <- sum(sum(eASmasd_w1[,,j,i])) 
          tot_eASmjsd_w2[j,i] <- sum(sum(eASmjsd_w2[,,j,i])) 
          tot_eASmasd_w2[j,i] <- sum(sum(eASmasd_w2[,,j,i])) 
          tot_eASmjsd_h1[j,i] <- sum(sum(eASmjsd_h1[,,j,i])) 
          tot_eASmasd_h1[j,i] <- sum(sum(eASmasd_h1[,,j,i])) 
          tot_eASmjsd_h2[j,i] <- sum(sum(eASmjsd_h2[,,j,i])) 
          tot_eASmasd_h2[j,i] <- sum(sum(eASmasd_h2[,,j,i])) 
          tot_eASmjsd_s [j,i] <- sum(sum(eASmjsd_s[,,j,i])) 
          tot_eASmasd_s [j,i] <- sum(sum(eASmasd_s[,,j,i])) 
        }
      }
    }
  }
}

avg_eAF1mu    <- rowMeans(tot_eAF1mu  )
avg_eAF2mu    <- rowMeans(tot_eAF2mu )
avg_eASfjmu_w1 <- rowMeans(tot_eASfjmu_w1 )
avg_eASfjmu_w2 <- rowMeans(tot_eASfjmu_w2 )
avg_eASfjmu_s  <- rowMeans(tot_eASfjmu_s )
avg_eASfjmu_h1 <- rowMeans(tot_eASfjmu_h1 )
avg_eASfjmu_h2 <- rowMeans(tot_eASfjmu_h2)
avg_eASfamu_h1 <- rowMeans( tot_eASfamu_h1)
avg_eASfamu_h2 <- rowMeans( tot_eASfamu_h2 )
avg_eASfamu_w1 <- rowMeans(tot_eASfamu_w1 )
avg_eASfamu_w2 <- rowMeans(tot_eASfamu_w2 )
avg_eASfamu_s  <- rowMeans(tot_eASfamu_s )

avg_eASmjmu_w1 <- rowMeans(tot_eASmjmu_w1 )
avg_eASmjmu_w2 <- rowMeans(tot_eASmjmu_w2 )
avg_eASmjmu_s  <- rowMeans(tot_eASmjmu_s )
avg_eASmjmu_h1 <- rowMeans(tot_eASmjmu_h1 )
avg_eASmjmu_h2 <- rowMeans(tot_eASmjmu_h2)
avg_eASmamu_h1 <- rowMeans(tot_eASmamu_h1)
avg_eASmamu_h2 <- rowMeans(tot_eASmamu_h2 )
avg_eASmamu_w1 <- rowMeans(tot_eASmamu_w1 )
avg_eASmamu_w2 <- rowMeans(tot_eASmamu_w2 )
avg_eASmamu_s  <- rowMeans(tot_eASmamu_s )

avg_eAF1sd    <-  rowMeans(tot_eAF1sd  )
avg_eAF2sd    <-  rowMeans(tot_eAF2sd )
avg_eASfjsd_w1 <-  rowMeans(tot_eASfjsd_w1 )
avg_eASfjsd_w2 <-  rowMeans(tot_eASfjsd_w2 )
avg_eASfjsd_s  <-  rowMeans(tot_eASfjsd_s )
avg_eASfjsd_h1 <-  rowMeans(tot_eASfjsd_h1 )
avg_eASfjsd_h2 <-  rowMeans(tot_eASfjsd_h2)
avg_eASfasd_h1 <- rowMeans( tot_eASfasd_h1)
avg_eASfasd_h2 <- rowMeans( tot_eASfasd_h2 )
avg_eASfasd_w1 <-  rowMeans(tot_eASfasd_w1 )
avg_eASfasd_w2 <-  rowMeans(tot_eASfasd_w2 )
avg_eASfasd_s  <-  rowMeans(tot_eASfasd_s )

avg_eASmjsd_w1 <-  rowMeans(tot_eASmjsd_w1 )
avg_eASmjsd_w2 <-  rowMeans(tot_eASmjsd_w2 )
avg_eASmjsd_s  <-  rowMeans(tot_eASmjsd_s )
avg_eASmjsd_h1 <-  rowMeans(tot_eASmjsd_h1 )
avg_eASmjsd_h2 <-  rowMeans(tot_eASmjsd_h2)
avg_eASmasd_h1 <-  rowMeans(tot_eASmasd_h1)
avg_eASmasd_h2 <-  rowMeans(tot_eASmasd_h2 )
avg_eASmasd_w1 <-  rowMeans(tot_eASmasd_w1 )
avg_eASmasd_w2 <-  rowMeans(tot_eASmasd_w2 )
avg_eASmasd_s  <-  rowMeans(tot_eASmasd_s )

# Compute real-time elasticities for the indirect effects of past change in  
# the lower-level vital rates that are channeled through perturbations to   
# stage structure.
I <- diag(S)             # Identity matrix
e <- matrix(1,S,1)       # vector of 1's
# indirect elasticities
enF1mu <- enF2mu <- enSfjwmu1 <- enSfjwmu2 <- enSfawmu1 <- enSfawmu2 <- enSfjhmu1 <- enSfjhmu2 <- enSfahmu1 <- enSfahmu2 <- enSfasmu <- enSfjsmu  <- 
  enF1sd <- enF2sd <- enSfjwsd1 <- enSfjwsd2 <- enSfawsd1 <- enSfawsd2 <- enSfjhsd1 <- enSfjhsd2 <- enSfahsd1 <- enSfahsd2 <- enSfassd <- enSfjssd  <- 
  enSmjwmu1 <- enSmjwmu2 <- enSmawmu1 <- enSmawmu2 <- enSmjhmu1 <- enSmjhmu2 <- enSmahmu1 <- enSmahmu2 <- enSmasmu <- enSmjsmu  <- 
  enSmjwsd1 <- enSmjwsd2 <- enSmawsd1 <- enSmawsd2 <- enSmjhsd1 <- enSmjhsd2 <- enSmahsd1 <- enSmahsd2 <- enSmassd <- enSmjssd  <- array(0,dim=c(S,S,samples,Time))


tot_enF1mu <- tot_enF2mu <- tot_enSfjwmu1 <- tot_enSfjwmu2 <- tot_enSfawmu1 <- tot_enSfawmu2 <- tot_enSfjhmu1 <- tot_enSfjhmu2 <- tot_enSfahmu1 <- tot_enSfahmu2 <- tot_enSfasmu <- tot_enSfjsmu  <- 
  tot_enF1sd <- tot_enF2sd <- tot_enSfjwsd1 <- tot_enSfjwsd2 <- tot_enSfawsd1 <- tot_enSfawsd2 <- tot_enSfjhsd1 <- tot_enSfjhsd2 <- tot_enSfahsd1 <- tot_enSfahsd2 <- tot_enSfassd <- tot_enSfjssd  <-
  tot_enSmjwmu1 <- tot_enSmjwmu2 <- tot_enSmawmu1 <- tot_enSmawmu2 <- tot_enSmjhmu1 <- tot_enSmjhmu2 <- tot_enSmahmu1 <- tot_enSmahmu2 <- tot_enSmasmu <- tot_enSmjsmu  <- 
  tot_enSmjwsd1 <- tot_enSmjwsd2 <- tot_enSmawsd1 <- tot_enSmawsd2 <- tot_enSmjhsd1 <- tot_enSmjhsd2 <- tot_enSmahsd1 <- tot_enSmahsd2 <- tot_enSmassd <- tot_enSmjssd  <-matrix(0,samples,Time)


for (j in 1:samples){
  # perturbation matrices
  C2F1 <- C2F2 <- C2Sfjw1 <- C2Sfjw2 <- C2Sfaw1 <- C2Sfaw2 <- C2Sfjh1 <- C2Sfjh2 <- C2Sfah1 <- C2Sfah2 <- C2Sfas <- C2Sfjs  <-C3F1 <- C3F2 <- C3Sfjw1 <- C3Sfjw2 <- C3Sfaw1 <- C3Sfaw2 <- C3Sfjh1 <- C3Sfjh2 <- C3Sfah1 <- C3Sfah2 <- C3Sfas <- C3Sfjs <-
    C2Smjw1 <- C2Smjw2 <- C2Smaw1 <- C2Smaw2 <- C2Smjh1 <- C2Smjh2 <- C2Smah1 <- C2Smah2 <- C2Smas <- C2Smjs                 <- C3Smjw1 <- C3Smjw2 <- C3Smaw1 <- C3Smaw2 <- C3Smjh1 <- C3Smjh2 <- C3Smah1 <- C3Smah2 <- C3Smas <- C3Smjs<-array(0,dim=c(S^2,S^2,Time)) 
  # perturbation to stage structure
  w_mu_F1 <- w_mu_F2 <- w_mu_Sfjw1 <- w_mu_Sfjw2 <- w_mu_Sfaw1 <- w_mu_Sfaw2 <- w_mu_Sfjh1 <- w_mu_Sfjh2 <- w_mu_Sfah1 <- w_mu_Sfah2 <- w_mu_Sfas <- w_mu_Sfjs  <-w_sd_F1 <- w_sd_F2 <- w_sd_Sfjw1 <- w_sd_Sfjw2 <- w_sd_Sfaw1 <- w_sd_Sfaw2 <- w_sd_Sfjh1 <- w_sd_Sfjh2 <- w_sd_Sfah1 <- w_sd_Sfah2 <- w_sd_Sfas <- w_sd_Sfjs  <- 
    w_mu_Smjw1 <- w_mu_Smjw2 <- w_mu_Smaw1 <- w_mu_Smaw2 <- w_mu_Smjh1 <- w_mu_Smjh2 <- w_mu_Smah1 <- w_mu_Smah2 <- w_mu_Smas <- w_mu_Smjs                       <- w_sd_Smjw1 <- w_sd_Smjw2 <- w_sd_Smaw1 <- w_sd_Smaw2 <- w_sd_Smjh1 <- w_sd_Smjh2 <- w_sd_Smah1 <- w_sd_Smah2 <- w_sd_Smas <- w_sd_Smjs  <- array(0,dim=c(S,S,S,Time+1)) 
  for (i in 1:Time){
    for(k in sp){ # manually change species
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s =  refSfj_s[j,i,k],
        Sfa_s =  refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s =  refSmj_s[j,i,k],
        Sma_s =  refSma_s[j,i,k],
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      mat_elements <- sapply(matrix.elements,eval,vr_list)
      A <- matrix(as.numeric(mat_elements[]),nrow=4,byrow=T)
      
      for (m in 1:S){
        for (n in 1:S){
          C2F1[(S+1)*m-S,(S+1)*n-S,i]   <- refF1mu[j,k]     * dA_dF1[m,n]
          C2F2[(S+1)*m-S,(S+1)*n-S,i]   <- refF2mu[j,k]     * dA_dF2[m,n]
          C2Sfjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n]
          C2Sfjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n]
          C2Sfaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w1[j,k] * dA_dSfaw1[m,n]
          C2Sfaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w2[j,k] * dA_dSfaw2[m,n]
          C2Sfjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n]
          C2Sfjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n]
          C2Sfah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h1[j,k] * dA_dSfah1[m,n]
          C2Sfah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h2[j,k] * dA_dSfah2[m,n]
          C2Sfas[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_s[j,k]  * dA_dSfas[m,n]
          C2Sfjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_s[j,k]  * dA_dSfjs[m,n]
          
          C3F1[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF1[j,i,k]     - refF1mu[j,k]    ) * dA_dF1[m,n]
          C3F2[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF2[j,i,k]     - refF2mu[j,k]    ) * dA_dF2[m,n]
          C3Sfjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n]
          C3Sfjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n]
          C3Sfaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n]
          C3Sfaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n]
          C3Sfjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n]
          C3Sfjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n]
          C3Sfah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n]
          C3Sfah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n]
          C3Sfas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfa_s[j,i,k]  - refSfamu_s[j,k] ) * dA_dSfas[m,n]
          C3Sfjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfj_s[j,i,k]  - refSfjmu_s[j,k] ) * dA_dSfjs[m,n]
          
          C2Smjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n]
          C2Smjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n]
          C2Smaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w1[j,k] * dA_dSmaw1[m,n]
          C2Smaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w2[j,k] * dA_dSmaw2[m,n]
          C2Smjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n]
          C2Smjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n]
          C2Smah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h1[j,k] * dA_dSmah1[m,n]
          C2Smah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h2[j,k] * dA_dSmah2[m,n]
          C2Smas[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_s[j,k]  * dA_dSmas[m,n]
          C2Smjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_s[j,k]  * dA_dSmjs[m,n]
          
          C3Smjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n]
          C3Smjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n]
          C3Smaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n]
          C3Smaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n]
          C3Smjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n]
          C3Smjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n]
          C3Smah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n]
          C3Smah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n]
          C3Smas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSma_s[j,i,k]  - refSmamu_s[j,k] ) * dA_dSmas[m,n]
          C3Smjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSmj_s[j,i,k]  - refSmjmu_s[j,k] ) * dA_dSmjs[m,n]
          
          
          K <- I - refn[,1,j,i+1,k]%*%t(e)  # intermediate steps
          B <- K %*% A / lam_realref[j,i,k]
          
          gF1_mu <-  K %*%     C2F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_mu <-  K %*%     C2F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_mu <-  K %*%   C2Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_mu <-  K %*%   C2Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_mu <-  K %*%   C2Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_mu <-  K %*%   C2Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_mu <-  K %*%   C2Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_mu <-  K %*%   C2Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_mu <-  K %*%   C2Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_mu <-  K %*%   C2Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_mu <-  K %*%    C2Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_mu <-  K %*%    C2Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gF1_sig <-  K %*%     C3F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_sig <-  K %*%     C3F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_sig <-  K %*%   C3Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_sig <-  K %*%   C3Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_sig <-  K %*%   C3Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_sig <-  K %*%   C3Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_sig <-  K %*%   C3Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_sig <-  K %*%   C3Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_sig <-  K %*%   C3Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_sig <-  K %*%   C3Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_sig <-  K %*%    C3Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_sig <-  K %*%    C3Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_mu <-  K %*%   C2Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_mu <-  K %*%   C2Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_mu <-  K %*%   C2Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_mu <-  K %*%   C2Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_mu <-  K %*%   C2Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_mu <-  K %*%   C2Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_mu <-  K %*%   C2Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_mu <-  K %*%   C2Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_mu <-  K %*%    C2Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_mu <-  K %*%    C2Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_sig <-  K %*%   C3Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_sig <-  K %*%   C3Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_sig <-  K %*%   C3Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_sig <-  K %*%   C3Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_sig <-  K %*%   C3Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_sig <-  K %*%   C3Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_sig <-  K %*%   C3Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_sig <-  K %*%   C3Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_sig <-  K %*%    C3Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_sig <-  K %*%    C3Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          w_mu_F1[,m,n,i+1]  <- B %*%  w_mu_F1[,m,n,i] +    gF1_mu  
          w_mu_F2[,m,n,i+1]  <- B %*%  w_mu_F2[,m,n,i] +    gF2_mu  
          w_mu_Sfjw1[,m,n,i+1]  <- B %*% w_mu_Sfjw1[,m,n,i] +  gSfjw1_mu  
          w_mu_Sfjw2[,m,n,i+1]  <- B %*% w_mu_Sfjw2[,m,n,i] +  gSfjw2_mu  
          w_mu_Sfaw1[,m,n,i+1]  <- B %*% w_mu_Sfaw1[,m,n,i] +  gSfaw1_mu  
          w_mu_Sfaw2[,m,n,i+1]  <- B %*% w_mu_Sfaw2[,m,n,i] +  gSfaw2_mu  
          w_mu_Sfjh1[,m,n,i+1]  <- B %*% w_mu_Sfjh1[,m,n,i] +  gSfjh1_mu  
          w_mu_Sfjh2[,m,n,i+1]  <- B %*% w_mu_Sfjh2[,m,n,i] +  gSfjh2_mu  
          w_mu_Sfah1[,m,n,i+1]  <- B %*% w_mu_Sfah1[,m,n,i] +  gSfah1_mu  
          w_mu_Sfah2[,m,n,i+1]  <- B %*% w_mu_Sfah2[,m,n,i] +  gSfah2_mu  
          w_mu_Sfas[,m,n,i+1]  <- B %*% w_mu_Sfas[,m,n,i] +   gSfas_mu  
          w_mu_Sfjs[,m,n,i+1]  <- B %*% w_mu_Sfjs[,m,n,i] +   gSfjs_mu  
          
          w_sd_F1[,m,n,i+1]   <- B %*%  w_sd_F1[,m,n,i] +    gF1_sig  
          w_sd_F2[,m,n,i+1]   <- B %*%  w_sd_F2[,m,n,i] +    gF2_sig  
          w_sd_Sfjw1[,m,n,i+1]  <- B %*% w_sd_Sfjw1[,m,n,i] +  gSfjw1_sig  
          w_sd_Sfjw2[,m,n,i+1]  <- B %*% w_sd_Sfjw2[,m,n,i] +  gSfjw2_sig  
          w_sd_Sfaw1[,m,n,i+1]  <- B %*% w_sd_Sfaw1[,m,n,i] +  gSfaw1_sig  
          w_sd_Sfaw2[,m,n,i+1]  <- B %*% w_sd_Sfaw2[,m,n,i] +  gSfaw2_sig  
          w_sd_Sfjh1[,m,n,i+1]  <- B %*% w_sd_Sfjh1[,m,n,i] +  gSfjh1_sig  
          w_sd_Sfjh2[,m,n,i+1]  <- B %*% w_sd_Sfjh2[,m,n,i] +  gSfjh2_sig  
          w_sd_Sfah1[,m,n,i+1]  <- B %*% w_sd_Sfah1[,m,n,i] +  gSfah1_sig  
          w_sd_Sfah2[,m,n,i+1]  <- B %*% w_sd_Sfah2[,m,n,i] +  gSfah2_sig  
          w_sd_Sfas[,m,n,i+1]   <- B %*% w_sd_Sfas[,m,n,i] +   gSfas_sig  
          w_sd_Sfjs[,m,n,i+1]   <- B %*% w_sd_Sfjs[,m,n,i] +   gSfjs_sig  
          
          w_mu_Smjw1[,m,n,i+1]  <- B %*% w_mu_Smjw1[,m,n,i] +  gSmjw1_mu  
          w_mu_Smjw2[,m,n,i+1]  <- B %*% w_mu_Smjw2[,m,n,i] +  gSmjw2_mu  
          w_mu_Smaw1[,m,n,i+1]  <- B %*% w_mu_Smaw1[,m,n,i] +  gSmaw1_mu  
          w_mu_Smaw2[,m,n,i+1]  <- B %*% w_mu_Smaw2[,m,n,i] +  gSmaw2_mu  
          w_mu_Smjh1[,m,n,i+1]  <- B %*% w_mu_Smjh1[,m,n,i] +  gSmjh1_mu  
          w_mu_Smjh2[,m,n,i+1]  <- B %*% w_mu_Smjh2[,m,n,i] +  gSmjh2_mu  
          w_mu_Smah1[,m,n,i+1]  <- B %*% w_mu_Smah1[,m,n,i] +  gSmah1_mu  
          w_mu_Smah2[,m,n,i+1]  <- B %*% w_mu_Smah2[,m,n,i] +  gSmah2_mu  
          w_mu_Smas[,m,n,i+1]  <- B %*% w_mu_Smas[,m,n,i] +   gSmas_mu  
          w_mu_Smjs[,m,n,i+1]  <- B %*% w_mu_Smjs[,m,n,i] +   gSmjs_mu  
          
          w_sd_Smjw1[,m,n,i+1]  <- B %*% w_sd_Smjw1[,m,n,i] +  gSmjw1_sig  
          w_sd_Smjw2[,m,n,i+1]  <- B %*% w_sd_Smjw2[,m,n,i] +  gSmjw2_sig  
          w_sd_Smaw1[,m,n,i+1]  <- B %*% w_sd_Smaw1[,m,n,i] +  gSmaw1_sig  
          w_sd_Smaw2[,m,n,i+1]  <- B %*% w_sd_Smaw2[,m,n,i] +  gSmaw2_sig  
          w_sd_Smjh1[,m,n,i+1]  <- B %*% w_sd_Smjh1[,m,n,i] +  gSmjh1_sig  
          w_sd_Smjh2[,m,n,i+1]  <- B %*% w_sd_Smjh2[,m,n,i] +  gSmjh2_sig  
          w_sd_Smah1[,m,n,i+1]  <- B %*% w_sd_Smah1[,m,n,i] +  gSmah1_sig  
          w_sd_Smah2[,m,n,i+1]  <- B %*% w_sd_Smah2[,m,n,i] +  gSmah2_sig  
          w_sd_Smas[,m,n,i+1]   <- B %*% w_sd_Smas[,m,n,i] +   gSmas_sig  
          w_sd_Smjs[,m,n,i+1]   <- B %*% w_sd_Smjs[,m,n,i] +   gSmjs_sig  
          
          # Equation 3 Koons et al. 2017, e^n_mu
          enF1mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1mu [j,i] <-  sum(sum(enF1mu [,,j,i]))
          tot_enF2mu [j,i] <-  sum(sum(enF2mu [,,j,i]))
          tot_enSfjwmu1[j,i] <- sum(sum(enSfjwmu1[,,j,i]))
          tot_enSfjwmu2[j,i] <- sum(sum(enSfjwmu2[,,j,i]))
          tot_enSfawmu1[j,i] <- sum(sum(enSfawmu1[,,j,i]))
          tot_enSfawmu2[j,i] <- sum(sum(enSfawmu2[,,j,i]))
          tot_enSfjhmu1[j,i] <- sum(sum(enSfjhmu1[,,j,i]))
          tot_enSfjhmu2[j,i] <- sum(sum(enSfjhmu2[,,j,i]))
          tot_enSfahmu1[j,i] <- sum(sum(enSfahmu1[,,j,i]))
          tot_enSfahmu2[j,i] <- sum(sum(enSfahmu2[,,j,i]))
          tot_enSfasmu[j,i] <-  sum(sum(enSfasmu[,,j,i]))
          
          enSmjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwmu1[j,i] <- sum(sum(enSmjwmu1[,,j,i]))
          tot_enSmjwmu2[j,i] <- sum(sum(enSmjwmu2[,,j,i]))
          tot_enSmawmu1[j,i] <- sum(sum(enSmawmu1[,,j,i]))
          tot_enSmawmu2[j,i] <- sum(sum(enSmawmu2[,,j,i]))
          tot_enSmjhmu1[j,i] <- sum(sum(enSmjhmu1[,,j,i]))
          tot_enSmjhmu2[j,i] <- sum(sum(enSmjhmu2[,,j,i]))
          tot_enSmahmu1[j,i] <- sum(sum(enSmahmu1[,,j,i]))
          tot_enSmahmu2[j,i] <- sum(sum(enSmahmu2[,,j,i]))
          tot_enSmasmu[j,i] <-  sum(sum(enSmasmu[,,j,i]))
          
          
          # Equation 3 Koons et al. 2017, e^n_sd
          enF1sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1sd [j,i] <-  sum(sum(enF1sd [,,j,i]))
          tot_enF2sd [j,i] <-  sum(sum(enF2sd [,,j,i]))
          tot_enSfjwsd1[j,i] <- sum(sum(enSfjwsd1[,,j,i]))
          tot_enSfjwsd2[j,i] <- sum(sum(enSfjwsd2[,,j,i]))
          tot_enSfawsd1[j,i] <- sum(sum(enSfawsd1[,,j,i]))
          tot_enSfawsd2[j,i] <- sum(sum(enSfawsd2[,,j,i]))
          tot_enSfjhsd1[j,i] <- sum(sum(enSfjhsd1[,,j,i]))
          tot_enSfjhsd2[j,i] <- sum(sum(enSfjhsd2[,,j,i]))
          tot_enSfahsd1[j,i] <- sum(sum(enSfahsd1[,,j,i]))
          tot_enSfahsd2[j,i] <- sum(sum(enSfahsd2[,,j,i]))
          tot_enSfassd[j,i] <-  sum(sum(enSfassd[,,j,i]))
          tot_enSfjssd[j,i] <-  sum(sum(enSfjssd[,,j,i]))
          
          enSmjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwsd1[j,i] <- sum(sum(enSmjwsd1[,,j,i]))
          tot_enSmjwsd2[j,i] <- sum(sum(enSmjwsd2[,,j,i]))
          tot_enSmawsd1[j,i] <- sum(sum(enSmawsd1[,,j,i]))
          tot_enSmawsd2[j,i] <- sum(sum(enSmawsd2[,,j,i]))
          tot_enSmjhsd1[j,i] <- sum(sum(enSmjhsd1[,,j,i]))
          tot_enSmjhsd2[j,i] <- sum(sum(enSmjhsd2[,,j,i]))
          tot_enSmahsd1[j,i] <- sum(sum(enSmahsd1[,,j,i]))
          tot_enSmahsd2[j,i] <- sum(sum(enSmahsd2[,,j,i]))
          tot_enSmassd[j,i] <-  sum(sum(enSmassd[,,j,i]))
          tot_enSmjssd[j,i] <-  sum(sum(enSmjssd[,,j,i]))
          
        }
      }
    }
  }
}



avg_enF1mu  <- rowMeans( tot_enF1mu )
avg_enF2mu  <- rowMeans( tot_enF2mu )
avg_enSfjwmu1 <- rowMeans(tot_enSfjwmu1)
avg_enSfjwmu2 <- rowMeans(tot_enSfjwmu2)
avg_enSfawmu1 <- rowMeans(tot_enSfawmu1)
avg_enSfawmu2 <- rowMeans(tot_enSfawmu2)
avg_enSfjhmu1 <- rowMeans(tot_enSfjhmu1)
avg_enSfjhmu2 <- rowMeans(tot_enSfjhmu2)
avg_enSfahmu1 <- rowMeans(tot_enSfahmu1)
avg_enSfahmu2 <- rowMeans(tot_enSfahmu2)
avg_enSfasmu <- rowMeans( tot_enSfasmu)
avg_enSfjsmu <- rowMeans( tot_enSfjsmu)
avg_enSmjwmu1 <- rowMeans(tot_enSmjwmu1)
avg_enSmjwmu2 <- rowMeans(tot_enSmjwmu2)
avg_enSmawmu1 <- rowMeans(tot_enSmawmu1)
avg_enSmawmu2 <- rowMeans(tot_enSmawmu2)
avg_enSmjhmu1 <- rowMeans(tot_enSmjhmu1)
avg_enSmjhmu2 <- rowMeans(tot_enSmjhmu2)
avg_enSmahmu1 <- rowMeans(tot_enSmahmu1)
avg_enSmahmu2 <- rowMeans(tot_enSmahmu2)
avg_enSmasmu <- rowMeans( tot_enSmasmu)
avg_enSmjsmu <- rowMeans( tot_enSmjsmu)

avg_enF1sd  <-  rowMeans( tot_enF1sd )

avg_enF2sd  <-  rowMeans( tot_enF2sd )
avg_enSfjwsd1 <- rowMeans(tot_enSfjwsd1)
avg_enSfjwsd2 <- rowMeans(tot_enSfjwsd2)
avg_enSfawsd1 <- rowMeans(tot_enSfawsd1)
avg_enSfawsd2 <- rowMeans(tot_enSfawsd2)
avg_enSfjhsd1 <- rowMeans(tot_enSfjhsd1)
avg_enSfjhsd2 <- rowMeans(tot_enSfjhsd2)
avg_enSfahsd1 <- rowMeans(tot_enSfahsd1)
avg_enSfahsd2 <- rowMeans(tot_enSfahsd2)
avg_enSfassd <- rowMeans( tot_enSfassd)
avg_enSfjssd <- rowMeans( tot_enSfjssd)

avg_enSmjwsd1 <- rowMeans(tot_enSmjwsd1)
avg_enSmjwsd2 <- rowMeans(tot_enSmjwsd2)
avg_enSmawsd1 <- rowMeans(tot_enSmawsd1)
avg_enSmawsd2 <- rowMeans(tot_enSmawsd2)
avg_enSmjhsd1 <- rowMeans(tot_enSmjhsd1)
avg_enSmjhsd2 <- rowMeans(tot_enSmjhsd2)
avg_enSmahsd1 <- rowMeans(tot_enSmahsd1)
avg_enSmahsd2 <- rowMeans(tot_enSmahsd2)
avg_enSmassd <- rowMeans( tot_enSmassd)
avg_enSmjssd <- rowMeans( tot_enSmjssd)

# Step 9: Calculate vital rate contributions to the difference in geometric mean rates of population growth between time periods. This is a function of 
# logged differences in mean of vital rates, logged differences in s.d. of  vital rates, as channeled through direct effects of perturbations to the   
# moments and indirect effects of perturbations to these moments channeled through changes in population structure over time.
cont_A_F1mu  <- cont_A_F2mu <- cont_A_Sfjmu_w1 <- cont_A_Sfjmu_w2 <- cont_A_Sfjmu_s <- cont_A_Sfjmu_h1 <- cont_A_Sfjmu_h2 <- cont_A_Sfamu_h1 <- cont_A_Sfamu_h2 <- cont_A_Sfamu_w1 <- cont_A_Sfamu_w2 <- cont_A_Sfamu_s <- 
  cont_A_F1sd  <- cont_A_F2sd <- cont_A_Sfjsd_w1 <- cont_A_Sfjsd_w2 <- cont_A_Sfjsd_s <- cont_A_Sfjsd_h1 <- cont_A_Sfjsd_h2 <- cont_A_Sfasd_h1 <- cont_A_Sfasd_h2 <- cont_A_Sfasd_w1 <- cont_A_Sfasd_w2 <- cont_A_Sfasd_s <-
  cont_n_F1mu  <- cont_n_F2mu <- cont_n_Sfjmu_w1 <- cont_n_Sfjmu_w2 <- cont_n_Sfjmu_s <- cont_n_Sfjmu_h1 <- cont_n_Sfjmu_h2 <- cont_n_Sfamu_h1 <- cont_n_Sfamu_h2 <- cont_n_Sfamu_w1 <- cont_n_Sfamu_w2 <- cont_n_Sfamu_s <- 
  cont_n_F1sd  <- cont_n_F2sd <- cont_n_Sfjsd_w1 <- cont_n_Sfjsd_w2 <- cont_n_Sfjsd_s <- cont_n_Sfjsd_h1 <- cont_n_Sfjsd_h2 <- cont_n_Sfasd_h1 <- cont_n_Sfasd_h2 <- cont_n_Sfasd_w1 <- cont_n_Sfasd_w2 <- cont_n_Sfasd_s <- 
  cont_A_Smjmu_w1 <- cont_A_Smjmu_w2 <- cont_A_Smjmu_s <- cont_A_Smjmu_h1 <- cont_A_Smjmu_h2 <- cont_A_Smamu_h1 <- cont_A_Smamu_h2 <- cont_A_Smamu_w1 <- cont_A_Smamu_w2 <- cont_A_Smamu_s <- 
  cont_A_Smjsd_w1 <- cont_A_Smjsd_w2 <- cont_A_Smjsd_s <- cont_A_Smjsd_h1 <- cont_A_Smjsd_h2 <- cont_A_Smasd_h1 <- cont_A_Smasd_h2 <- cont_A_Smasd_w1 <- cont_A_Smasd_w2 <- cont_A_Smasd_s <-
  cont_n_Smjmu_w1 <- cont_n_Smjmu_w2 <- cont_n_Smjmu_s <- cont_n_Smjmu_h1 <- cont_n_Smjmu_h2 <- cont_n_Smamu_h1 <- cont_n_Smamu_h2 <- cont_n_Smamu_w1 <- cont_n_Smamu_w2 <- cont_n_Smamu_s <- 
  cont_n_Smjsd_w1 <- cont_n_Smjsd_w2 <- cont_n_Smjsd_s <- cont_n_Smjsd_h1 <- cont_n_Smjsd_h2 <- cont_n_Smasd_h1 <- cont_n_Smasd_h2 <- cont_n_Smasd_w1 <- cont_n_Smasd_w2 <- cont_n_Smasd_s <- matrix(NA,samples,1)

# Equation 3; Koons et al. 2017
for (j in 1:samples){
  for(k in sp){
    
    cont_A_F1mu[j] <-         logF1mudiff[j,k] *      avg_eAF1mu[j]       
    cont_A_F2mu[j] <-         logF2mudiff[j,k] *      avg_eAF2mu[j]       
    cont_A_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *  avg_eASfjmu_w1[j] 
    cont_A_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *  avg_eASfamu_w1[j] 
    cont_A_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *  avg_eASfjmu_h1[j]  
    cont_A_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *  avg_eASfamu_h1[j] 
    cont_A_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *  avg_eASfjmu_w2[j] 
    cont_A_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *  avg_eASfamu_w2[j] 
    cont_A_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *  avg_eASfjmu_h2[j] 
    cont_A_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *  avg_eASfamu_h2[j] 
    cont_A_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *   avg_eASfjmu_s[j] 
    cont_A_Sfamu_s[j] <-      logSfa_smudiff[j,k] *   avg_eASfamu_s[j]  
    
    cont_A_F1sd[j] <-            logF1sigdiff[j,k] *      avg_eAF1sd[j]       
    cont_A_F2sd[j] <-            logF2sigdiff[j,k] *      avg_eAF2sd[j]       
    cont_A_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_eASfjsd_w1[j] 
    cont_A_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_eASfasd_w1[j] 
    cont_A_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_eASfjsd_h1[j]  
    cont_A_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_eASfasd_h1[j] 
    cont_A_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_eASfjsd_w2[j] 
    cont_A_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_eASfasd_w2[j] 
    cont_A_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_eASfjsd_h2[j] 
    cont_A_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_eASfasd_h2[j] 
    cont_A_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *   avg_eASfjsd_s[j] 
    cont_A_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *   avg_eASfasd_s[j]  
    
    
    cont_n_F1mu[j] <-         logF1mudiff[j,k] *       avg_enF1mu  [j]   
    cont_n_F2mu[j] <-         logF2mudiff[j,k] *       avg_enF2mu  [j]   
    cont_n_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *   avg_enSfjwmu1[j] 
    cont_n_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *   avg_enSfjwmu2[j] 
    cont_n_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *   avg_enSfawmu1[j]  
    cont_n_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *   avg_enSfawmu2[j] 
    cont_n_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *   avg_enSfjhmu1[j] 
    cont_n_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *   avg_enSfjhmu2[j] 
    cont_n_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *   avg_enSfahmu1[j] 
    cont_n_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *   avg_enSfahmu2[j] 
    cont_n_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *    avg_enSfasmu [j]
    cont_n_Sfamu_s[j] <-      logSfa_smudiff[j,k] *    avg_enSfjsmu [j] 
    
    cont_n_F1sd[j] <-            logF1sigdiff[j,k] *   avg_enF1sd  [j]
    cont_n_F2sd[j] <-            logF2sigdiff[j,k] *   avg_enF2sd  [j]
    cont_n_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_enSfjwsd1[j]
    cont_n_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_enSfjwsd2[j]
    cont_n_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_enSfawsd1[j]
    cont_n_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_enSfawsd2[j]
    cont_n_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_enSfjhsd1[j]
    cont_n_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_enSfjhsd2[j]
    cont_n_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_enSfahsd1[j]
    cont_n_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_enSfahsd2[j]
    cont_n_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *  avg_enSfassd [j]
    cont_n_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *  avg_enSfjssd [j]
    ###
    
    cont_A_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *  avg_eASmjmu_w1[j] 
    cont_A_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *  avg_eASmamu_w1[j] 
    cont_A_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *  avg_eASmjmu_h1[j]  
    cont_A_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *  avg_eASmamu_h1[j] 
    cont_A_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *  avg_eASmjmu_w2[j] 
    cont_A_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *  avg_eASmamu_w2[j] 
    cont_A_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *  avg_eASmjmu_h2[j] 
    cont_A_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *  avg_eASmamu_h2[j] 
    cont_A_Smjmu_s[j] <-      logSmj_smudiff[j,k] *   avg_eASmjmu_s[j] 
    cont_A_Smamu_s[j] <-      logSma_smudiff[j,k] *   avg_eASmamu_s[j]  
    
    cont_A_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_eASmjsd_w1[j] 
    cont_A_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_eASmasd_w1[j] 
    cont_A_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_eASmjsd_h1[j]  
    cont_A_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_eASmasd_h1[j] 
    cont_A_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_eASmjsd_w2[j] 
    cont_A_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_eASmasd_w2[j] 
    cont_A_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_eASmjsd_h2[j] 
    cont_A_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_eASmasd_h2[j] 
    cont_A_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *   avg_eASmjsd_s[j] 
    cont_A_Smasd_s[j] <-       logSma_ssigdiff[j,k] *   avg_eASmasd_s[j]  
    
    cont_n_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *   avg_enSmjwmu1[j] 
    cont_n_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *   avg_enSmjwmu2[j] 
    cont_n_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *   avg_enSmawmu1[j]  
    cont_n_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *   avg_enSmawmu2[j] 
    cont_n_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *   avg_enSmjhmu1[j] 
    cont_n_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *   avg_enSmjhmu2[j] 
    cont_n_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *   avg_enSmahmu1[j] 
    cont_n_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *   avg_enSmahmu2[j] 
    cont_n_Smjmu_s[j] <-      logSmj_smudiff[j,k] *    avg_enSmasmu [j]
    cont_n_Smamu_s[j] <-      logSma_smudiff[j,k] *    avg_enSmjsmu [j] 
    
    cont_n_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_enSmjwsd1[j]
    cont_n_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_enSmjwsd2[j]
    cont_n_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_enSmawsd1[j]
    cont_n_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_enSmawsd2[j]
    cont_n_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_enSmjhsd1[j]
    cont_n_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_enSmjhsd2[j]
    cont_n_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_enSmahsd1[j]
    cont_n_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_enSmahsd2[j]
    cont_n_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *  avg_enSmassd [j]
    cont_n_Smasd_s[j] <-       logSma_ssigdiff[j,k] *  avg_enSmjssd [j]
  }
}

# Total effect of shifts in the mean vital rate (A_mu), its variance [A_sd], or the indirect effects of demographic rates channeled through shifts in the mean (n_mu) or variance (n_sd) population structure
totF1 <- cont_A_F1mu + cont_A_F1sd + cont_n_F1mu + cont_n_F1sd
totF2 <- cont_A_F2mu + cont_A_F2sd + cont_n_F2mu + cont_n_F2sd
totF  <- totF1 + totF2

tot_Sf_w_j_1 <- cont_A_Sfjmu_w1 + cont_A_Sfjsd_w1 + cont_n_Sfjmu_w1 + cont_n_Sfjsd_w1 
tot_Sf_w_j_2 <- cont_A_Sfjmu_w2 + cont_A_Sfjsd_w2 + cont_n_Sfjmu_w2 + cont_n_Sfjsd_w2
tot_Sf_2_j_1 <- cont_A_Sfjmu_s + cont_A_Sfjsd_s + cont_n_Sfjmu_s + cont_n_Sfjsd_s
tot_Sf_h_j_1 <- cont_A_Sfjmu_h1 + cont_A_Sfjsd_h1 + cont_n_Sfjmu_h1 + cont_n_Sfjsd_h1
tot_Sf_h_j_2 <- cont_A_Sfjmu_h2 + cont_A_Sfjsd_h2 + cont_n_Sfjmu_h2 + cont_n_Sfjsd_h2
tot_Sf_h_a_1 <- cont_A_Sfamu_h1 + cont_A_Sfasd_h1 + cont_n_Sfamu_h1 + cont_n_Sfasd_h1
tot_Sf_h_a_2 <- cont_A_Sfamu_h2 + cont_A_Sfasd_h2 + cont_n_Sfamu_h2 + cont_n_Sfasd_h2
tot_Sf_w_a_1 <- cont_A_Sfamu_w1 + cont_A_Sfasd_w1 + cont_n_Sfamu_w1 + cont_n_Sfasd_w1
tot_Sf_w_a_2 <- cont_A_Sfamu_w2 + cont_A_Sfasd_w2 + cont_n_Sfamu_w2 + cont_n_Sfasd_w2
tot_Sf_2_2_1 <- cont_A_Sfamu_s + cont_A_Sfasd_s + cont_n_Sfamu_s + cont_n_Sfasd_s

tot_Sm_w_j_1 <- cont_A_Smjmu_w1 + cont_A_Smjsd_w1 + cont_n_Smjmu_w1 + cont_n_Smjsd_w1 
tot_Sm_w_j_2 <- cont_A_Smjmu_w2 + cont_A_Smjsd_w2 + cont_n_Smjmu_w2 + cont_n_Smjsd_w2
tot_Sm_2_j_1 <- cont_A_Smjmu_s + cont_A_Smjsd_s + cont_n_Smjmu_s + cont_n_Smjsd_s
tot_Sm_h_j_1 <- cont_A_Smjmu_h1 + cont_A_Smjsd_h1 + cont_n_Smjmu_h1 + cont_n_Smjsd_h1
tot_Sm_h_j_2 <- cont_A_Smjmu_h2 + cont_A_Smjsd_h2 + cont_n_Smjmu_h2 + cont_n_Smjsd_h2
tot_Sm_h_a_1 <- cont_A_Smamu_h1 + cont_A_Smasd_h1 + cont_n_Smamu_h1 + cont_n_Smasd_h1
tot_Sm_h_a_2 <- cont_A_Smamu_h2 + cont_A_Smasd_h2 + cont_n_Smamu_h2 + cont_n_Smasd_h2
tot_Sm_w_a_1 <- cont_A_Smamu_w1 + cont_A_Smasd_w1 + cont_n_Smamu_w1 + cont_n_Smasd_w1
tot_Sm_w_a_2 <- cont_A_Smamu_w2 + cont_A_Smasd_w2 + cont_n_Smamu_w2 + cont_n_Smasd_w2
tot_Sm_2_2_1 <- cont_A_Smamu_s + cont_A_Smasd_s + cont_n_Smamu_s + cont_n_Smasd_s

cont_time_prairie_1 <- rbind.data.frame(
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'Total', value = 'Total', mean = mean(totF1      ), lower = quantile(totF1      ,probs = 0.05),upper = quantile(totF1      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'Total', value = 'Total', mean = mean(totF2      ), lower = quantile(totF2      ,probs = 0.05),upper = quantile(totF2      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_1), lower = quantile(tot_Sf_w_j_1,probs = 0.05),upper = quantile(tot_Sf_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_1), lower = quantile(tot_Sf_w_a_1,probs = 0.05),upper = quantile(tot_Sf_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_1), lower = quantile(tot_Sf_h_j_1,probs = 0.05),upper = quantile(tot_Sf_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_1), lower = quantile(tot_Sf_h_a_1,probs = 0.05),upper = quantile(tot_Sf_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_2), lower = quantile(tot_Sf_w_j_2,probs = 0.05),upper = quantile(tot_Sf_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_2), lower = quantile(tot_Sf_w_a_2,probs = 0.05),upper = quantile(tot_Sf_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_2), lower = quantile(tot_Sf_h_j_2,probs = 0.05),upper = quantile(tot_Sf_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_2), lower = quantile(tot_Sf_h_a_2,probs = 0.05),upper = quantile(tot_Sf_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_j_1), lower = quantile(tot_Sf_2_j_1,probs = 0.05),upper = quantile(tot_Sf_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_2_1), lower = quantile(tot_Sf_2_2_1,probs = 0.05),upper = quantile(tot_Sf_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'mu', mean = mean(cont_A_F1mu    ), lower = quantile(cont_A_F1mu    ,probs = 0.05),upper = quantile(cont_A_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'mu', mean = mean(cont_A_F2mu    ), lower = quantile(cont_A_F2mu    ,probs = 0.05),upper = quantile(cont_A_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w1), lower = quantile(cont_A_Sfjmu_w1,probs = 0.05),upper = quantile(cont_A_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w1), lower = quantile(cont_A_Sfamu_w1,probs = 0.05),upper = quantile(cont_A_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h1), lower = quantile(cont_A_Sfjmu_h1,probs = 0.05),upper = quantile(cont_A_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h1), lower = quantile(cont_A_Sfamu_h1,probs = 0.05),upper = quantile(cont_A_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w2), lower = quantile(cont_A_Sfjmu_w2,probs = 0.05),upper = quantile(cont_A_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w2), lower = quantile(cont_A_Sfamu_w2,probs = 0.05),upper = quantile(cont_A_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h2), lower = quantile(cont_A_Sfjmu_h2,probs = 0.05),upper = quantile(cont_A_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h2), lower = quantile(cont_A_Sfamu_h2,probs = 0.05),upper = quantile(cont_A_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_s ), lower = quantile(cont_A_Sfjmu_s ,probs = 0.05),upper = quantile(cont_A_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_s ), lower = quantile(cont_A_Sfamu_s ,probs = 0.05),upper = quantile(cont_A_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'sd', mean = mean(cont_A_F1sd    ), lower = quantile(cont_A_F1sd    ,probs = 0.05),upper = quantile(cont_A_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'sd', mean = mean(cont_A_F2sd    ), lower = quantile(cont_A_F2sd    ,probs = 0.05),upper = quantile(cont_A_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w1), lower = quantile(cont_A_Sfjsd_w1,probs = 0.05),upper = quantile(cont_A_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w1), lower = quantile(cont_A_Sfasd_w1,probs = 0.05),upper = quantile(cont_A_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h1), lower = quantile(cont_A_Sfjsd_h1,probs = 0.05),upper = quantile(cont_A_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h1), lower = quantile(cont_A_Sfasd_h1,probs = 0.05),upper = quantile(cont_A_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w2), lower = quantile(cont_A_Sfjsd_w2,probs = 0.05),upper = quantile(cont_A_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w2), lower = quantile(cont_A_Sfasd_w2,probs = 0.05),upper = quantile(cont_A_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h2), lower = quantile(cont_A_Sfjsd_h2,probs = 0.05),upper = quantile(cont_A_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h2), lower = quantile(cont_A_Sfasd_h2,probs = 0.05),upper = quantile(cont_A_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_s ), lower = quantile(cont_A_Sfjsd_s ,probs = 0.05),upper = quantile(cont_A_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_s ), lower = quantile(cont_A_Sfasd_s ,probs = 0.05),upper = quantile(cont_A_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'mu', mean = mean(cont_n_F1mu    ), lower = quantile(cont_n_F1mu    ,probs = 0.05),upper = quantile(cont_n_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'mu', mean = mean(cont_n_F2mu    ), lower = quantile(cont_n_F2mu    ,probs = 0.05),upper = quantile(cont_n_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w1), lower = quantile(cont_n_Sfjmu_w1,probs = 0.05),upper = quantile(cont_n_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w1), lower = quantile(cont_n_Sfamu_w1,probs = 0.05),upper = quantile(cont_n_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h1), lower = quantile(cont_n_Sfjmu_h1,probs = 0.05),upper = quantile(cont_n_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h1), lower = quantile(cont_n_Sfamu_h1,probs = 0.05),upper = quantile(cont_n_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w2), lower = quantile(cont_n_Sfjmu_w2,probs = 0.05),upper = quantile(cont_n_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w2), lower = quantile(cont_n_Sfamu_w2,probs = 0.05),upper = quantile(cont_n_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h2), lower = quantile(cont_n_Sfjmu_h2,probs = 0.05),upper = quantile(cont_n_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h2), lower = quantile(cont_n_Sfamu_h2,probs = 0.05),upper = quantile(cont_n_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_s ), lower = quantile(cont_n_Sfjmu_s ,probs = 0.05),upper = quantile(cont_n_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_s ), lower = quantile(cont_n_Sfamu_s ,probs = 0.05),upper = quantile(cont_n_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'sd', mean = mean(cont_n_F1sd    ), lower = quantile(cont_n_F1sd    ,probs = 0.05),upper = quantile(cont_n_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'sd', mean = mean(cont_n_F2sd    ), lower = quantile(cont_n_F2sd    ,probs = 0.05),upper = quantile(cont_n_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w1), lower = quantile(cont_n_Sfjsd_w1,probs = 0.05),upper = quantile(cont_n_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w1), lower = quantile(cont_n_Sfasd_w1,probs = 0.05),upper = quantile(cont_n_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h1), lower = quantile(cont_n_Sfjsd_h1,probs = 0.05),upper = quantile(cont_n_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h1), lower = quantile(cont_n_Sfasd_h1,probs = 0.05),upper = quantile(cont_n_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w2), lower = quantile(cont_n_Sfjsd_w2,probs = 0.05),upper = quantile(cont_n_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w2), lower = quantile(cont_n_Sfasd_w2,probs = 0.05),upper = quantile(cont_n_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h2), lower = quantile(cont_n_Sfjsd_h2,probs = 0.05),upper = quantile(cont_n_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h2), lower = quantile(cont_n_Sfasd_h2,probs = 0.05),upper = quantile(cont_n_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_s ), lower = quantile(cont_n_Sfjsd_s ,probs = 0.05),upper = quantile(cont_n_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_s ), lower = quantile(cont_n_Sfasd_s ,probs = 0.05),upper = quantile(cont_n_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_1), lower = quantile(tot_Sm_w_j_1,probs = 0.05),upper = quantile(tot_Sm_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_1), lower = quantile(tot_Sm_w_a_1,probs = 0.05),upper = quantile(tot_Sm_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_1), lower = quantile(tot_Sm_h_j_1,probs = 0.05),upper = quantile(tot_Sm_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_1), lower = quantile(tot_Sm_h_a_1,probs = 0.05),upper = quantile(tot_Sm_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_2), lower = quantile(tot_Sm_w_j_2,probs = 0.05),upper = quantile(tot_Sm_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_2), lower = quantile(tot_Sm_w_a_2,probs = 0.05),upper = quantile(tot_Sm_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_2), lower = quantile(tot_Sm_h_j_2,probs = 0.05),upper = quantile(tot_Sm_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_2), lower = quantile(tot_Sm_h_a_2,probs = 0.05),upper = quantile(tot_Sm_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_j_1), lower = quantile(tot_Sm_2_j_1,probs = 0.05),upper = quantile(tot_Sm_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_2_1), lower = quantile(tot_Sm_2_2_1,probs = 0.05),upper = quantile(tot_Sm_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w1), lower = quantile(cont_A_Smjmu_w1,probs = 0.05),upper = quantile(cont_A_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w1), lower = quantile(cont_A_Smamu_w1,probs = 0.05),upper = quantile(cont_A_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h1), lower = quantile(cont_A_Smjmu_h1,probs = 0.05),upper = quantile(cont_A_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h1), lower = quantile(cont_A_Smamu_h1,probs = 0.05),upper = quantile(cont_A_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w2), lower = quantile(cont_A_Smjmu_w2,probs = 0.05),upper = quantile(cont_A_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w2), lower = quantile(cont_A_Smamu_w2,probs = 0.05),upper = quantile(cont_A_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h2), lower = quantile(cont_A_Smjmu_h2,probs = 0.05),upper = quantile(cont_A_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h2), lower = quantile(cont_A_Smamu_h2,probs = 0.05),upper = quantile(cont_A_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_s ), lower = quantile(cont_A_Smjmu_s ,probs = 0.05),upper = quantile(cont_A_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_s ), lower = quantile(cont_A_Smamu_s ,probs = 0.05),upper = quantile(cont_A_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w1), lower = quantile(cont_A_Smjsd_w1,probs = 0.05),upper = quantile(cont_A_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w1), lower = quantile(cont_A_Smasd_w1,probs = 0.05),upper = quantile(cont_A_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h1), lower = quantile(cont_A_Smjsd_h1,probs = 0.05),upper = quantile(cont_A_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h1), lower = quantile(cont_A_Smasd_h1,probs = 0.05),upper = quantile(cont_A_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w2), lower = quantile(cont_A_Smjsd_w2,probs = 0.05),upper = quantile(cont_A_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w2), lower = quantile(cont_A_Smasd_w2,probs = 0.05),upper = quantile(cont_A_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h2), lower = quantile(cont_A_Smjsd_h2,probs = 0.05),upper = quantile(cont_A_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h2), lower = quantile(cont_A_Smasd_h2,probs = 0.05),upper = quantile(cont_A_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_s ), lower = quantile(cont_A_Smjsd_s ,probs = 0.05),upper = quantile(cont_A_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_s ), lower = quantile(cont_A_Smasd_s ,probs = 0.05),upper = quantile(cont_A_Smasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w1), lower = quantile(cont_n_Smjmu_w1,probs = 0.05),upper = quantile(cont_n_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w1), lower = quantile(cont_n_Smamu_w1,probs = 0.05),upper = quantile(cont_n_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h1), lower = quantile(cont_n_Smjmu_h1,probs = 0.05),upper = quantile(cont_n_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h1), lower = quantile(cont_n_Smamu_h1,probs = 0.05),upper = quantile(cont_n_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w2), lower = quantile(cont_n_Smjmu_w2,probs = 0.05),upper = quantile(cont_n_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w2), lower = quantile(cont_n_Smamu_w2,probs = 0.05),upper = quantile(cont_n_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h2), lower = quantile(cont_n_Smjmu_h2,probs = 0.05),upper = quantile(cont_n_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h2), lower = quantile(cont_n_Smamu_h2,probs = 0.05),upper = quantile(cont_n_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_s ), lower = quantile(cont_n_Smjmu_s ,probs = 0.05),upper = quantile(cont_n_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_s ), lower = quantile(cont_n_Smamu_s ,probs = 0.05),upper = quantile(cont_n_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w1), lower = quantile(cont_n_Smjsd_w1,probs = 0.05),upper = quantile(cont_n_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w1), lower = quantile(cont_n_Smasd_w1,probs = 0.05),upper = quantile(cont_n_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h1), lower = quantile(cont_n_Smjsd_h1,probs = 0.05),upper = quantile(cont_n_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h1), lower = quantile(cont_n_Smasd_h1,probs = 0.05),upper = quantile(cont_n_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w2), lower = quantile(cont_n_Smjsd_w2,probs = 0.05),upper = quantile(cont_n_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w2), lower = quantile(cont_n_Smasd_w2,probs = 0.05),upper = quantile(cont_n_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h2), lower = quantile(cont_n_Smjsd_h2,probs = 0.05),upper = quantile(cont_n_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h2), lower = quantile(cont_n_Smasd_h2,probs = 0.05),upper = quantile(cont_n_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_s ), lower = quantile(cont_n_Smjsd_s ,probs = 0.05),upper = quantile(cont_n_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_s ), lower = quantile(cont_n_Smasd_s ,probs = 0.05),upper = quantile(cont_n_Smasd_s ,probs = 0.95))
  
)

tot_fec <- totF
tot_fwhy <- tot_Sf_w_j_1 + tot_Sf_w_j_2
tot_fwah <- tot_Sf_w_a_1 + tot_Sf_w_a_2
tot_fssy <- tot_Sf_2_j_1
tot_fsas <- tot_Sf_2_2_1
tot_fhhy <- tot_Sf_h_j_1 + tot_Sf_h_j_2
tot_fhah <- tot_Sf_h_a_1 + tot_Sf_h_a_2
tot_mwhy <- tot_Sm_w_j_1 + tot_Sm_w_j_2
tot_mwah <- tot_Sm_w_a_1 + tot_Sm_w_a_2
tot_mssy <- tot_Sm_2_j_1
tot_msas <- tot_Sm_2_2_1
tot_mhhy <- tot_Sm_h_j_1 + tot_Sm_h_j_2
tot_mhah <- tot_Sm_h_a_1 + tot_Sm_h_a_2

cont_total_prairie_1 <- rbind.data.frame(
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'FEC', statistic = 'Total', value = 'Total', mean = mean(tot_fec), lower = quantile(tot_fec,probs = 0.05),upper = quantile(tot_fec,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_fwhy), lower = quantile(tot_fwhy,probs = 0.05),upper = quantile(tot_fwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_fwah), lower = quantile(tot_fwah,probs = 0.05),upper = quantile(tot_fwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_fssy), lower = quantile(tot_fssy,probs = 0.05),upper = quantile(tot_fssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_fsas), lower = quantile(tot_fsas,probs = 0.05),upper = quantile(tot_fsas,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_fhhy), lower = quantile(tot_fhhy,probs = 0.05),upper = quantile(tot_fhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_fhah), lower = quantile(tot_fhah,probs = 0.05),upper = quantile(tot_fhah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_mwhy), lower = quantile(tot_mwhy,probs = 0.05),upper = quantile(tot_mwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_mwah), lower = quantile(tot_mwah,probs = 0.05),upper = quantile(tot_mwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_mssy), lower = quantile(tot_mssy,probs = 0.05),upper = quantile(tot_mssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_msas), lower = quantile(tot_msas,probs = 0.05),upper = quantile(tot_msas,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_mhhy), lower = quantile(tot_mhhy,probs = 0.05),upper = quantile(tot_mhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_mhah), lower = quantile(tot_mhah,probs = 0.05),upper = quantile(tot_mhah,probs = 0.95))
)


###########################################################################
# Second Comparison: Prairie
############################################################################

Time <- 20
refpi_ak <- refpi_no <- refpi_pr <- refF1 <- refF2 <- refSfj_w1 <- refSfa_w1 <- refSfj_w2 <- refSfa_w2  <- refSfj_s <- refSfa_s <- refSfj_h1 <- refSfa_h1 <- refSfj_h2 <- refSfa_h2  <- refSmj_w1 <- refSma_w1 <- refSmj_w2 <- refSma_w2  <- refSmj_s <- refSma_s <- refSmj_h1 <- refSma_h1 <- refSmj_h2 <- refSma_h2  <- lam_realref <- array(NA,dim = c(samples,Time,3))
refnf1   <- refnf2 <-refnm1 <- refnm2 <- matrix(NA,samples, 3)
refn     <- array(NA,dim=c(4,1,samples,Time+1,3))
Sfj_w1_reg <- Sfj_w2_reg <- Sfj_h1_reg <- Sfj_h2_reg <- Sfa_w1_reg <- Sfa_w2_reg <- Sfa_h1_reg <- Sfa_h2_reg <-Smj_w1_reg <- Smj_w2_reg <- Smj_h1_reg <- Smj_h2_reg <- Sma_w1_reg <- Sma_w2_reg <- Sma_h1_reg <- Sma_h2_reg <- array(NA,dim=c(60,samples,3))

# Annual vital rates
for (j in 1:samples){
  for(k in 1:n.region){
    for(t in 1:60){
      Sfj_w1_reg[t,j,k] <- Sfj_w1[t,j] * mu_psi[t,j,k]
      Sfa_w1_reg[t,j,k] <- Sfa_w1[t,j] * mu_psi[t,j,k]
      Sfj_w2_reg[t,j,k] <- Sfj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_w2_reg[t,j,k] <- Sfa_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Sfj_h1_reg[t,j,k] <- Sfj_h1[t,j] * mu_psi[t,j,k]
      Sfa_h1_reg[t,j,k] <- Sfa_h1[t,j] * mu_psi[t,j,k]
      Sfj_h2_reg[t,j,k] <- Sfj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sfa_h2_reg[t,j,k] <- Sfa_h2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_w1_reg[t,j,k] <- Smj_w1[t,j] * mu_psi[t,j,k]
      Sma_w1_reg[t,j,k] <- Sma_w1[t,j] * mu_psi[t,j,k]
      Smj_w2_reg[t,j,k] <- Smj_w2[t,j] * (1 - mu_psi[t,j,k])
      Sma_w2_reg[t,j,k] <- Sma_w2[t,j] * (1 - mu_psi[t,j,k])
      
      Smj_h1_reg[t,j,k] <- Smj_h1[t,j] * mu_psi[t,j,k]
      Sma_h1_reg[t,j,k] <- Sma_h1[t,j] * mu_psi[t,j,k]
      Smj_h2_reg[t,j,k] <- Smj_h2[t,j] * (1 - mu_psi[t,j,k])
      Sma_h2_reg[t,j,k] <- Sma_h2[t,j] * (1 - mu_psi[t,j,k])
    }
    # Average vital rate between the starts of each time period
    refnf1[j,k] <- (nf1[sta3,j,k] + nf1[sta2,j,k]) / 2
    refnf2[j,k] <- (nf2[sta3,j,k] + nf2[sta2,j,k]) / 2
    refnm1[j,k] <- (nm1[sta3,j,k] + nm1[sta2,j,k]) / 2
    refnm2[j,k] <- (nm2[sta3,j,k] + nm2[sta2,j,k]) / 2
    
    refn[1,1,j,1,k] <- refnf1[j,k]
    refn[2,1,j,1,k] <- refnf2[j,k]
    
    refn[3,1,j,1,k] <- refnm1[j,k]
    refn[4,1,j,1,k] <- refnm2[j,k]
    
    for (i in 1:Time){
      refpi_ak[j,i,k] <-   (pi_ak[i+sta3-1,j,k] +   pi_ak[i+sta2-1,j,k]) / 2
      refpi_no[j,i,k] <-   (pi_no[i+sta3-1,j,k] +   pi_no[i+sta2-1,j,k]) / 2
      refpi_pr[j,i,k] <-   (pi_pr[i+sta3-1,j,k] +   pi_pr[i+sta2-1,j,k]) / 2
      
      refF1[j,i,k] <-   (F1[i+sta3-1,j,k] + F1[i+sta2-1,j,k]) / 2
      refF2[j,i,k] <-   (F2[i+sta3-1,j,k] + F2[i+sta2-1,j,k]) / 2
      
      refSfj_w1[j,i,k] <- ((Sfj_w1_reg[i+sta3-1,j,k] + Sfj_w1_reg[i+sta2-1,j,k]) / 2)
      refSfa_w1[j,i,k] <- ((Sfa_w1_reg[i+sta3-1,j,k] + Sfa_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_w2[j,i,k] <- ((Sfj_w2_reg[i+sta3-1,j,k] + Sfj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_w2[j,i,k] <- ((Sfa_w2_reg[i+sta3-1,j,k] + Sfa_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSfj_s[j,i,k]    <- (Sfj_s[i+sta3-1,j,k] +  Sfj_s[i+sta2-1,j,k]) / 2
      refSfa_s[j,i,k]    <- (Sfa_s[i+sta3-1,j,k] +  Sfa_s[i+sta2-1,j,k]) / 2
      
      refSfj_h1[j,i,k] <- ((Sfj_h1_reg[i+sta3-1,j,k] + Sfj_h1_reg[i+sta2-1,j,k]) / 2)
      refSfa_h1[j,i,k] <- ((Sfa_h1_reg[i+sta3-1,j,k] + Sfa_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSfj_h2[j,i,k] <- ((Sfj_h2_reg[i+sta3-1,j,k] + Sfj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSfa_h2[j,i,k] <- ((Sfa_h2_reg[i+sta3-1,j,k] + Sfa_h2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_w1[j,i,k] <- ((Smj_w1_reg[i+sta3-1,j,k] + Smj_w1_reg[i+sta2-1,j,k]) / 2)
      refSma_w1[j,i,k] <- ((Sma_w1_reg[i+sta3-1,j,k] + Sma_w1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_w2[j,i,k] <- ((Smj_w2_reg[i+sta3-1,j,k] + Smj_w2_reg[i+sta2-1,j,k]) / 2) 
      refSma_w2[j,i,k] <- ((Sma_w2_reg[i+sta3-1,j,k] + Sma_w2_reg[i+sta2-1,j,k]) / 2) 
      
      refSmj_s[j,i,k] <-    (Smj_s[i+sta3-1,j,k] +  Smj_s[i+sta2-1,j,k]) / 2
      refSma_s[j,i,k] <-    (Sma_s[i+sta3-1,j,k] +  Sma_s[i+sta2-1,j,k]) / 2
      
      refSmj_h1[j,i,k] <- ((Smj_h1_reg[i+sta3-1,j,k] + Smj_h1_reg[i+sta2-1,j,k]) / 2)
      refSma_h1[j,i,k] <- ((Sma_h1_reg[i+sta3-1,j,k] + Sma_h1_reg[i+sta2-1,j,k]) / 2)
      
      refSmj_h2[j,i,k] <- ((Smj_h2_reg[i+sta3-1,j,k] + Smj_h2_reg[i+sta2-1,j,k]) / 2) 
      refSma_h2[j,i,k] <- ((Sma_h2_reg[i+sta3-1,j,k] + Sma_h2_reg[i+sta2-1,j,k]) / 2) 
      
      # Demographic projection matrix for each region
      A_AK <- matrix(c(
        0.5*refF1[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSfj_w1[j,i,1] + refSfj_w2[j,i,1]) * refSfj_s[j,i,1] * (refSfj_h1[j,i,1] + refSfj_h2[j,i,1]),0,0,
        
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),
        (refSfa_w1[j,i,1] + refSfa_w2[j,i,1]) * refSfa_s[j,i,1] *  (refSfa_h1[j,i,1] + refSfa_h2[j,i,1]),0,0,
        
        0.5*refF1[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),
        0.5*refF2[j,i,1] * (refSmj_w1[j,i,1] + refSmj_w2[j,i,1]) * refSmj_s[j,i,1] * (refSmj_h1[j,i,1] + refSmj_h2[j,i,1]),0,0,
        
        0,0,
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1]),
        (refSma_w1[j,i,1] + refSma_w2[j,i,1]) * refSma_s[j,i,1] *  (refSma_h1[j,i,1] + refSma_h2[j,i,1])
      ), nrow=4, byrow=TRUE)
      
      A_NO <- matrix(c(
        0.5*refF1[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSfj_w1[j,i,2] + refSfj_w2[j,i,2]) *   refSfj_s[j,i,2] * (refSfj_h1[j,i,2] + refSfj_h2[j,i,2]), 0,0,
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),
        (refSfa_w1[j,i,2] +  refSfa_w2[j,i,2]) * refSfa_s[j,i,2] *  (refSfa_h1[j,i,2] +  refSfa_h2[j,i,2]),0,0,
        
        0.5*refF1[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 
        0.5*refF2[j,i,2] * (refSmj_w1[j,i,2] + refSmj_w2[j,i,2]) *   refSmj_s[j,i,2] * (refSmj_h1[j,i,2] + refSmj_h2[j,i,2]), 0,0,
        
        0,0,
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2]),
        (refSma_w1[j,i,2] + refSma_w2[j,i,2]) * refSma_s[j,i,2] *  (refSma_h1[j,i,2] + refSma_h2[j,i,2])
      ), nrow=4, byrow=TRUE)
      
      A_PR <- matrix(c(
        0.5*refF1[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSfj_w1[j,i,3] + refSfj_w2[j,i,3]) *   refSfj_s[j,i,3] * (refSfj_h1[j,i,3] + refSfj_h2[j,i,3]), 0,0,
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),
        (refSfa_w1[j,i,3] +  refSfa_w2[j,i,3]) * refSfa_s[j,i,3] *  (refSfa_h1[j,i,3] +  refSfa_h2[j,i,3]),0,0,
        
        0.5*refF1[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 
        0.5*refF2[j,i,3] * (refSmj_w1[j,i,3] + refSmj_w2[j,i,3]) *   refSmj_s[j,i,3] * (refSmj_h1[j,i,3] + refSmj_h2[j,i,3]), 0,0,
        
        0,0,
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3]),
        (refSma_w1[j,i,3] + refSma_w2[j,i,3]) * refSma_s[j,i,3] *  (refSma_h1[j,i,3] + refSma_h2[j,i,3])
      ), nrow=4, byrow=TRUE)
      
      n_ak <- A_AK %*% refn[,,j,i,1]
      n_no <- A_NO %*% refn[,,j,i,2]
      n_pr <- A_PR %*% refn[,,j,i,3]
      
      lam_realref[j,i,1] <- sum( n_ak)
      lam_realref[j,i,2] <- sum( n_no)
      lam_realref[j,i,3] <- sum( n_pr)
      
      refn[,1,j,i+1,1] <-  n_ak/sum( n_ak) #store the proportionate abundances
      refn[,1,j,i+1,2] <-  n_no/sum( n_no) #store the proportionate abundances
      refn[,1,j,i+1,3] <-  n_pr/sum( n_pr) #store the proportionate abundances
    }
  }
}

# temporal means of the lower-level vital rates
refF1mu     <- apply(refF1 ,c(1,3),mean)
refF2mu     <- apply(refF2 ,c(1,3),mean)
refSfjmu_w1 <- apply(refSfj_w1,c(1,3),mean)
refSfamu_w1 <- apply(refSfa_w1,c(1,3),mean)
refSfjmu_w2 <- apply(refSfj_w2,c(1,3),mean)
refSfamu_w2 <- apply(refSfa_w2,c(1,3),mean)
refSfjmu_h1 <- apply(refSfj_h1,c(1,3),mean)
refSfamu_h1 <- apply(refSfa_h1,c(1,3),mean)
refSfjmu_h2 <- apply(refSfj_h2,c(1,3),mean)
refSfamu_h2 <- apply(refSfa_h2,c(1,3),mean)
refSfjmu_s  <- apply(refSfj_s,c(1,3),mean)
refSfamu_s  <- apply(refSfa_s,c(1,3),mean)
refSmjmu_w1 <- apply(refSmj_w1,c(1,3),mean)
refSmamu_w1 <- apply(refSma_w1,c(1,3),mean)
refSmjmu_w2 <- apply(refSmj_w2,c(1,3),mean)
refSmamu_w2 <- apply(refSma_w2,c(1,3),mean)
refSmjmu_h1 <- apply(refSmj_h1,c(1,3),mean)
refSmamu_h1 <- apply(refSma_h1,c(1,3),mean)
refSmjmu_h2 <- apply(refSmj_h2,c(1,3),mean)
refSmamu_h2 <- apply(refSma_h2,c(1,3),mean)
refSmjmu_s  <- apply(refSmj_s,c(1,3),mean)
refSmamu_s  <- apply(refSma_s,c(1,3),mean)

logF1mudiff      <- matrix(NA,samples,3)
logF2mudiff      <- matrix(NA,samples,3)
logSfj1_wmudiff  <- matrix(NA,samples,3)
logSfa1_wmudiff  <- matrix(NA,samples,3)
logSfj1_hmudiff  <- matrix(NA,samples,3)
logSfa1_hmudiff  <- matrix(NA,samples,3)
logSfj2_wmudiff  <- matrix(NA,samples,3)
logSfa2_wmudiff  <- matrix(NA,samples,3)
logSfj2_hmudiff  <- matrix(NA,samples,3)
logSfa2_hmudiff  <- matrix(NA,samples,3)
logSfj_smudiff   <- matrix(NA,samples,3)
logSfa_smudiff   <- matrix(NA,samples,3)

logSmj1_wmudiff  <- matrix(NA,samples,3)
logSma1_wmudiff  <- matrix(NA,samples,3)
logSmj1_hmudiff  <- matrix(NA,samples,3)
logSma1_hmudiff  <- matrix(NA,samples,3)
logSmj2_wmudiff  <- matrix(NA,samples,3)
logSma2_wmudiff  <- matrix(NA,samples,3)
logSmj2_hmudiff  <- matrix(NA,samples,3)
logSma2_hmudiff  <- matrix(NA,samples,3)
logSmj_smudiff   <- matrix(NA,samples,3)
logSma_smudiff   <- matrix(NA,samples,3)

logF1sigdiff     <- matrix(NA,samples,3)
logF2sigdiff     <- matrix(NA,samples,3)
logSfj1_wsigdiff <- matrix(NA,samples,3)
logSfa1_wsigdiff <- matrix(NA,samples,3)
logSfj1_hsigdiff <- matrix(NA,samples,3)
logSfa1_hsigdiff <- matrix(NA,samples,3)
logSfj2_wsigdiff <- matrix(NA,samples,3)
logSfa2_wsigdiff <- matrix(NA,samples,3)
logSfj2_hsigdiff <- matrix(NA,samples,3)
logSfa2_hsigdiff <- matrix(NA,samples,3)
logSfj_ssigdiff  <- matrix(NA,samples,3)
logSfa_ssigdiff  <- matrix(NA,samples,3)

logSmj1_wsigdiff <- matrix(NA,samples,3)
logSma1_wsigdiff <- matrix(NA,samples,3)
logSmj1_hsigdiff <- matrix(NA,samples,3)
logSma1_hsigdiff <- matrix(NA,samples,3)
logSmj2_wsigdiff <- matrix(NA,samples,3)
logSma2_wsigdiff <- matrix(NA,samples,3)
logSmj2_hsigdiff <- matrix(NA,samples,3)
logSma2_hsigdiff <- matrix(NA,samples,3)
logSmj_ssigdiff  <- matrix(NA,samples,3)
logSma_ssigdiff  <- matrix(NA,samples,3)

######################################################################################
# Step 7: Calculate differences on log scale in lower-level vital rate means 
# and standard deviations between time periods.
#######################################################################################

for (j in 1:samples){
  for(k in 1:n.region){      
    # Equation 3 Koons et al. 2017, log u_a - log u_b
    logF1mudiff[j,k]     <-        log(mean(F1[sta3:end3,j,k])) -        log(mean(F1[sta2:end2,j,k]))
    logF2mudiff[j,k]     <-        log(mean(F2[sta3:end3,j,k])) -        log(mean(F2[sta2:end2,j,k]))
    logSfj1_wmudiff[j,k] <-      log(mean(Sfj_w1_reg[sta3:end3,j,k]))-  log(mean(Sfj_w1_reg[sta2:end2,j,k])) 
    logSfa1_wmudiff[j,k] <-      log(mean(Sfa_w1_reg[sta3:end3,j,k]))-  log(mean(Sfa_w1_reg[sta2:end2,j,k])) 
    logSfj1_hmudiff[j,k] <-      log(mean(Sfj_h1_reg[sta3:end3,j,k]))-  log(mean(Sfj_h1_reg[sta2:end2,j,k]))
    logSfa1_hmudiff[j,k] <-      log(mean(Sfa_h1_reg[sta3:end3,j,k]))-  log(mean(Sfa_h1_reg[sta2:end2,j,k]))
    logSfj2_wmudiff[j,k] <-      log(mean(Sfj_w2_reg[sta3:end3,j,k]))-  log(mean(Sfj_w2_reg[sta2:end2,j,k])) 
    logSfa2_wmudiff[j,k] <-      log(mean(Sfa_w2_reg[sta3:end3,j,k]))-  log(mean(Sfa_w2_reg[sta2:end2,j,k])) 
    logSfj2_hmudiff[j,k] <-      log(mean(Sfj_h2_reg[sta3:end3,j,k]))-  log(mean(Sfj_h2_reg[sta2:end2,j,k]))
    logSfa2_hmudiff[j,k] <-      log(mean(Sfa_h2_reg[sta3:end3,j,k]))-  log(mean(Sfa_h2_reg[sta2:end2,j,k]))
    logSfj_smudiff[j,k]  <-      log(mean(Sfj2[sta3:end3,j,k])) -      log(mean(Sfj2[sta2:end2,j,k]))
    logSfa_smudiff[j,k]  <-      log(mean(Sfa2[sta3:end3,j,k])) -      log(mean(Sfa2[sta2:end2,j,k]))
    
    logSmj1_wmudiff[j,k] <-      log(mean(Smj_w1_reg[sta3:end3,j,k]))-  log(mean(Smj_w1_reg[sta2:end2,j,k])) 
    logSma1_wmudiff[j,k] <-      log(mean(Sma_w1_reg[sta3:end3,j,k]))-  log(mean(Sma_w1_reg[sta2:end2,j,k])) 
    logSmj1_hmudiff[j,k] <-      log(mean(Smj_h1_reg[sta3:end3,j,k]))-  log(mean(Smj_h1_reg[sta2:end2,j,k]))
    logSma1_hmudiff[j,k] <-      log(mean(Sma_h1_reg[sta3:end3,j,k]))-  log(mean(Sma_h1_reg[sta2:end2,j,k]))
    logSmj2_wmudiff[j,k] <-      log(mean(Smj_w2_reg[sta3:end3,j,k]))-  log(mean(Smj_w2_reg[sta2:end2,j,k])) 
    logSma2_wmudiff[j,k] <-      log(mean(Sma_w2_reg[sta3:end3,j,k]))-  log(mean(Sma_w2_reg[sta2:end2,j,k])) 
    logSmj2_hmudiff[j,k] <-      log(mean(Smj_h2_reg[sta3:end3,j,k]))-  log(mean(Smj_h2_reg[sta2:end2,j,k]))
    logSma2_hmudiff[j,k] <-      log(mean(Sma_h2_reg[sta3:end3,j,k]))-  log(mean(Sma_h2_reg[sta2:end2,j,k]))
    logSmj_smudiff[j,k]  <-      log(mean(Smj2[sta3:end3,j,k])) -      log(mean(Smj2[sta2:end2,j,k]))
    logSma_smudiff[j,k]  <-      log(mean(Sma2[sta3:end3,j,k])) -      log(mean(Sma2[sta2:end2,j,k]))
    
    # Equation 3 Koons et al. 2017, log sig_a - log sig_b
    logF1sigdiff[j,k]     <-   log(sqrt(var(F1[sta3:end3,j,k]))) -   log(sqrt(var(F1[sta2:end2,j,k])))
    logF2sigdiff[j,k]     <-   log(sqrt(var(F2[sta3:end3,j,k]))) -   log(sqrt(var(F2[sta2:end2,j,k])))
    logSfj_ssigdiff[j,k]  <-   log(sqrt(var(Sfj2[sta3:end3,j,k]))) - log(sqrt(var(Sfj2[sta2:end2,j,k])))
    logSfa_ssigdiff[j,k]  <-   log(sqrt(var(Sfa2[sta3:end3,j,k]))) - log(sqrt(var(Sfa2[sta2:end2,j,k])))
    logSfj1_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_w1_reg[sta2:end2,j,k])))
    logSfa1_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_w1_reg[sta2:end2,j,k])))
    logSfj1_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_h1_reg[sta2:end2,j,k])))
    logSfa1_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_h1_reg[sta2:end2,j,k])))
    logSfj2_wsigdiff[j,k] <-   log(sqrt(var(Sfj_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_w2_reg[sta2:end2,j,k])))
    logSfa2_wsigdiff[j,k] <-   log(sqrt(var(Sfa_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_w2_reg[sta2:end2,j,k])))
    logSfj2_hsigdiff[j,k] <-   log(sqrt(var(Sfj_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfj_h2_reg[sta2:end2,j,k])))
    logSfa2_hsigdiff[j,k] <-   log(sqrt(var(Sfa_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sfa_h2_reg[sta2:end2,j,k])))
    
    logSmj_ssigdiff[j,k] <- log(sqrt(var(Smj2[sta3:end3,j,k]))) - log(sqrt(var(Smj2[sta2:end2,j,k])))
    logSma_ssigdiff[j,k] <- log(sqrt(var(Sma2[sta3:end3,j,k]))) - log(sqrt(var(Sma2[sta2:end2,j,k])))
    logSmj1_wsigdiff[j,k] <-   log(sqrt(var(Smj_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_w1_reg[sta2:end2,j,k])))
    logSma1_wsigdiff[j,k] <-   log(sqrt(var(Sma_w1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_w1_reg[sta2:end2,j,k])))
    logSmj1_hsigdiff[j,k] <-   log(sqrt(var(Smj_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_h1_reg[sta2:end2,j,k])))
    logSma1_hsigdiff[j,k] <-   log(sqrt(var(Sma_h1_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_h1_reg[sta2:end2,j,k])))
    logSmj2_wsigdiff[j,k] <-   log(sqrt(var(Smj_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_w2_reg[sta2:end2,j,k])))
    logSma2_wsigdiff[j,k] <-   log(sqrt(var(Sma_w2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_w2_reg[sta2:end2,j,k])))
    logSmj2_hsigdiff[j,k] <-   log(sqrt(var(Smj_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Smj_h2_reg[sta2:end2,j,k])))
    logSma2_hsigdiff[j,k] <-   log(sqrt(var(Sma_h2_reg[sta3:end3,j,k]))) -  log(sqrt(var(Sma_h2_reg[sta2:end2,j,k])))
  }
}

# Step 8: Compute real-time elasticities, evaluated at the reference mean         
# Real-time elasticities for the direct effects of change in the lower-level vital rates.

S <- 4  # dimension of projection matrix
sp = 3  # Region 

eAF1mu  <- eAF2mu <- eASfjmu_w1 <- eASfjmu_w2 <- eASfjmu_s <- eASfjmu_h1 <- eASfjmu_h2 <- eASfamu_h1 <- eASfamu_h2 <- eASfamu_w1 <- eASfamu_w2 <- eASfamu_s <- 
  eASmjmu_w1 <- eASmjmu_w2 <- eASmjmu_s <- eASmjmu_h1 <- eASmjmu_h2 <- eASmamu_h1 <- eASmamu_h2 <- eASmamu_w1 <- eASmamu_w2 <- eASmamu_s <- 
  eAF1sd  <- eAF2sd <- eASfjsd_w1 <- eASfjsd_w2 <- eASfjsd_s <- eASfjsd_h1 <- eASfjsd_h2 <- eASfasd_h1 <- eASfasd_h2 <- eASfasd_w1 <- eASfasd_w2 <- eASfasd_s <- 
  eASmjsd_w1 <- eASmjsd_w2 <- eASmjsd_s <- eASmjsd_h1 <- eASmjsd_h2 <- eASmasd_h1 <- eASmasd_h2 <- eASmasd_w1 <- eASmasd_w2 <- eASmasd_s <-array(NA,dim=c(S,S,samples,Time))

tot_eAF1mu  <- tot_eAF2mu <- tot_eASfjmu_w1 <- tot_eASfjmu_w2 <- tot_eASfjmu_s <- tot_eASfjmu_h1 <- tot_eASfjmu_h2 <- tot_eASfamu_h1 <- tot_eASfamu_h2 <- tot_eASfamu_w1 <- tot_eASfamu_w2 <- tot_eASfamu_s <- 
  tot_eASmjmu_w1 <- tot_eASmjmu_w2 <- tot_eASmjmu_s <- tot_eASmjmu_h1 <- tot_eASmjmu_h2 <- tot_eASmamu_h1 <- tot_eASmamu_h2 <- tot_eASmamu_w1 <- tot_eASmamu_w2 <- tot_eASmamu_s <-
  tot_eAF1sd  <- tot_eAF2sd <- tot_eASfjsd_w1 <- tot_eASfjsd_w2 <- tot_eASfjsd_s <- tot_eASfjsd_h1 <- tot_eASfjsd_h2 <- tot_eASfasd_h1 <- tot_eASfasd_h2 <- tot_eASfasd_w1 <- tot_eASfasd_w2 <- tot_eASfasd_s  <-
  tot_eASmjsd_w1 <- tot_eASmjsd_w2 <- tot_eASmjsd_s <- tot_eASmjsd_h1 <- tot_eASmjsd_h2 <- tot_eASmasd_h1 <- tot_eASmasd_h2 <- tot_eASmasd_w1 <- tot_eASmasd_w2 <- tot_eASmasd_s  <-matrix(NA,samples,Time)


for (j in 1:samples){
  for (i in 1:Time){
    for(k in sp){ # manually change region
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s = refSfj_s[j,i,k],
        Sfa_s = refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s = refSmj_s[j,i,k],
        Sma_s = refSma_s[j,i,k],
        
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      for (m in 1:S){
        for (n in 1:S){
          # Equation 3 Koons et al. 2017, e^A_mu
          ##########################################################
          # Means
          eAF1mu[m,n,j,i] <- refF1mu[j,k] * dA_dF1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2mu[m,n,j,i] <- refF2mu[j,k] * dA_dF2[m,n] * refn[n,1,j,i,k] /  lam_realref[j,i,k]
          
          tot_eAF2mu[j,i] <- sum(sum(eAF2mu[,,j,i])) 
          tot_eAF1mu[j,i] <- sum(sum(eAF1mu[,,j,i])) 
          
          eASfjmu_w1[m,n,j,i] <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w1[m,n,j,i] <- refSfamu_w1[j,k] * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_w2[m,n,j,i] <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_w2[m,n,j,i] <- refSfamu_w2[j,k] * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w1[m,n,j,i] <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w1[m,n,j,i] <- refSmamu_w1[j,k] * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_w2[m,n,j,i] <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_w2[m,n,j,i] <- refSmamu_w2[j,k] * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_w1[j,i] <-sum(sum(eASfjmu_w1[,,j,i]))
          tot_eASfamu_w1[j,i] <-sum(sum(eASfamu_w1[,,j,i]))
          tot_eASfjmu_w2[j,i] <-sum(sum(eASfjmu_w2[,,j,i]))
          tot_eASfamu_w2[j,i] <-sum(sum(eASfamu_w2[,,j,i]))
          tot_eASmjmu_w1[j,i] <-sum(sum(eASmjmu_w1[,,j,i]))
          tot_eASmamu_w1[j,i] <-sum(sum(eASmamu_w1[,,j,i]))
          tot_eASmjmu_w2[j,i] <-sum(sum(eASmjmu_w2[,,j,i]))
          tot_eASmamu_w2[j,i] <-sum(sum(eASmamu_w2[,,j,i]))
          
          eASfjmu_h1[m,n,j,i] <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h1[m,n,j,i] <- refSfamu_h1[j,k] * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjmu_h2[m,n,j,i] <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_h2[m,n,j,i] <- refSfamu_h2[j,k] * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h1[m,n,j,i] <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h1[m,n,j,i] <- refSmamu_h1[j,k] * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_h2[m,n,j,i] <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_h2[m,n,j,i] <- refSmamu_h2[j,k] * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k] 
          
          tot_eASfjmu_h1[j,i] <-sum(sum(eASfjmu_h1[,,j,i]))
          tot_eASfamu_h1[j,i] <-sum(sum(eASfamu_h1[,,j,i]))
          tot_eASfjmu_h2[j,i] <-sum(sum(eASfjmu_h2[,,j,i]))
          tot_eASfamu_h2[j,i] <-sum(sum(eASfamu_h2[,,j,i]))
          tot_eASmjmu_h1[j,i] <-sum(sum(eASmjmu_h1[,,j,i]))
          tot_eASmamu_h1[j,i] <-sum(sum(eASmamu_h1[,,j,i]))
          tot_eASmjmu_h2[j,i] <-sum(sum(eASmjmu_h2[,,j,i]))
          tot_eASmamu_h2[j,i] <-sum(sum(eASmamu_h2[,,j,i]))
          
          eASfjmu_s[m,n,j,i] <- refSfjmu_s[j,k] * dA_dSfjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfamu_s[m,n,j,i] <- refSfamu_s[j,k] * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjmu_s[m,n,j,i] <- refSmjmu_s[j,k] * dA_dSmjs[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmamu_s[m,n,j,i] <- refSmamu_s[j,k] * dA_dSmas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjmu_s[j,i] <- sum(sum(eASfjmu_s[,,j,i])) 
          tot_eASfamu_s[j,i] <- sum(sum(eASfamu_s[,,j,i])) 
          tot_eASmjmu_s[j,i] <- sum(sum(eASmjmu_s[,,j,i])) 
          tot_eASmamu_s[j,i] <- sum(sum(eASmamu_s[,,j,i])) 
          ##################################################################################### 
          # Variance
          # Equation 3 Koons et al. 2017, e^A_sd
          eAF1sd[m,n,j,i] <- (refF1[j,i,k] - refF1mu[j,k]) * dA_dF1[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eAF2sd[m,n,j,i] <- (refF2[j,i,k] - refF2mu[j,k]) * dA_dF2[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eAF1sd[j,i] <- sum(sum(eAF1sd[,,j,i]))
          tot_eAF2sd[j,i] <- sum(sum(eAF2sd[,,j,i]))
          
          eASfjsd_w1[m,n,j,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w1[m,n,j,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_w2[m,n,j,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_w2[m,n,j,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h1[m,n,j,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h1[m,n,j,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_h2[m,n,j,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_h2[m,n,j,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfjsd_s [m,n,j,i] <- (refSfj_s[j,i,k]   - refSfjmu_s[j,k]) * dA_dSfjs[m,n] *  refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASfasd_s [m,n,j,i] <- (refSfa_s[j,i,k]   - refSfamu_s[j,k]) * dA_dSfas[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          eASmjsd_w1[m,n,j,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w1[m,n,j,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_w2[m,n,j,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_w2[m,n,j,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h1[m,n,j,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h1[m,n,j,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_h2[m,n,j,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_h2[m,n,j,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n] * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmjsd_s [m,n,j,i] <- (refSmj_s[j,i,k]  - refSmjmu_s[j,k]) * dA_dSmjs[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          eASmasd_s [m,n,j,i] <- (refSma_s[j,i,k]  - refSmamu_s[j,k]) * dA_dSmas[m,n]   * refn[n,1,j,i,k] / lam_realref[j,i,k]
          
          tot_eASfjsd_w1[j,i] <- sum(sum(eASfjsd_w1[,,j,i])) 
          tot_eASfasd_w1[j,i] <- sum(sum(eASfasd_w1[,,j,i])) 
          tot_eASfjsd_w2[j,i] <- sum(sum(eASfjsd_w2[,,j,i])) 
          tot_eASfasd_w2[j,i] <- sum(sum(eASfasd_w2[,,j,i])) 
          tot_eASfjsd_h1[j,i] <- sum(sum(eASfjsd_h1[,,j,i])) 
          tot_eASfasd_h1[j,i] <- sum(sum(eASfasd_h1[,,j,i])) 
          tot_eASfjsd_h2[j,i] <- sum(sum(eASfjsd_h2[,,j,i])) 
          tot_eASfasd_h2[j,i] <- sum(sum(eASfasd_h2[,,j,i])) 
          tot_eASfjsd_s [j,i] <- sum(sum(eASfjsd_s[,,j,i])) 
          tot_eASfasd_s [j,i] <- sum(sum(eASfasd_s[,,j,i])) 
          
          tot_eASmjsd_w1[j,i] <- sum(sum(eASmjsd_w1[,,j,i])) 
          tot_eASmasd_w1[j,i] <- sum(sum(eASmasd_w1[,,j,i])) 
          tot_eASmjsd_w2[j,i] <- sum(sum(eASmjsd_w2[,,j,i])) 
          tot_eASmasd_w2[j,i] <- sum(sum(eASmasd_w2[,,j,i])) 
          tot_eASmjsd_h1[j,i] <- sum(sum(eASmjsd_h1[,,j,i])) 
          tot_eASmasd_h1[j,i] <- sum(sum(eASmasd_h1[,,j,i])) 
          tot_eASmjsd_h2[j,i] <- sum(sum(eASmjsd_h2[,,j,i])) 
          tot_eASmasd_h2[j,i] <- sum(sum(eASmasd_h2[,,j,i])) 
          tot_eASmjsd_s [j,i] <- sum(sum(eASmjsd_s[,,j,i])) 
          tot_eASmasd_s [j,i] <- sum(sum(eASmasd_s[,,j,i])) 
        }
      }
    }
  }
}

avg_eAF1mu    <- rowMeans(tot_eAF1mu  )
avg_eAF2mu    <- rowMeans(tot_eAF2mu )
avg_eASfjmu_w1 <- rowMeans(tot_eASfjmu_w1 )
avg_eASfjmu_w2 <- rowMeans(tot_eASfjmu_w2 )
avg_eASfjmu_s  <- rowMeans(tot_eASfjmu_s )
avg_eASfjmu_h1 <- rowMeans(tot_eASfjmu_h1 )
avg_eASfjmu_h2 <- rowMeans(tot_eASfjmu_h2)
avg_eASfamu_h1 <- rowMeans( tot_eASfamu_h1)
avg_eASfamu_h2 <- rowMeans( tot_eASfamu_h2 )
avg_eASfamu_w1 <- rowMeans(tot_eASfamu_w1 )
avg_eASfamu_w2 <- rowMeans(tot_eASfamu_w2 )
avg_eASfamu_s  <- rowMeans(tot_eASfamu_s )

avg_eASmjmu_w1 <- rowMeans(tot_eASmjmu_w1 )
avg_eASmjmu_w2 <- rowMeans(tot_eASmjmu_w2 )
avg_eASmjmu_s  <- rowMeans(tot_eASmjmu_s )
avg_eASmjmu_h1 <- rowMeans(tot_eASmjmu_h1 )
avg_eASmjmu_h2 <- rowMeans(tot_eASmjmu_h2)
avg_eASmamu_h1 <- rowMeans(tot_eASmamu_h1)
avg_eASmamu_h2 <- rowMeans(tot_eASmamu_h2 )
avg_eASmamu_w1 <- rowMeans(tot_eASmamu_w1 )
avg_eASmamu_w2 <- rowMeans(tot_eASmamu_w2 )
avg_eASmamu_s  <- rowMeans(tot_eASmamu_s )

avg_eAF1sd    <-  rowMeans(tot_eAF1sd  )
avg_eAF2sd    <-  rowMeans(tot_eAF2sd )
avg_eASfjsd_w1 <-  rowMeans(tot_eASfjsd_w1 )
avg_eASfjsd_w2 <-  rowMeans(tot_eASfjsd_w2 )
avg_eASfjsd_s  <-  rowMeans(tot_eASfjsd_s )
avg_eASfjsd_h1 <-  rowMeans(tot_eASfjsd_h1 )
avg_eASfjsd_h2 <-  rowMeans(tot_eASfjsd_h2)
avg_eASfasd_h1 <- rowMeans( tot_eASfasd_h1)
avg_eASfasd_h2 <- rowMeans( tot_eASfasd_h2 )
avg_eASfasd_w1 <-  rowMeans(tot_eASfasd_w1 )
avg_eASfasd_w2 <-  rowMeans(tot_eASfasd_w2 )
avg_eASfasd_s  <-  rowMeans(tot_eASfasd_s )

avg_eASmjsd_w1 <-  rowMeans(tot_eASmjsd_w1 )
avg_eASmjsd_w2 <-  rowMeans(tot_eASmjsd_w2 )
avg_eASmjsd_s  <-  rowMeans(tot_eASmjsd_s )
avg_eASmjsd_h1 <-  rowMeans(tot_eASmjsd_h1 )
avg_eASmjsd_h2 <-  rowMeans(tot_eASmjsd_h2)
avg_eASmasd_h1 <-  rowMeans(tot_eASmasd_h1)
avg_eASmasd_h2 <-  rowMeans(tot_eASmasd_h2 )
avg_eASmasd_w1 <-  rowMeans(tot_eASmasd_w1 )
avg_eASmasd_w2 <-  rowMeans(tot_eASmasd_w2 )
avg_eASmasd_s  <-  rowMeans(tot_eASmasd_s )

# Compute real-time elasticities for the indirect effects of past change in  
# the lower-level vital rates that are channeled through perturbations to   
# stage structure.
I <- diag(S)             # Identity matrix
e <- matrix(1,S,1)       # vector of 1's
# indirect elasticities
enF1mu <- enF2mu <- enSfjwmu1 <- enSfjwmu2 <- enSfawmu1 <- enSfawmu2 <- enSfjhmu1 <- enSfjhmu2 <- enSfahmu1 <- enSfahmu2 <- enSfasmu <- enSfjsmu  <- 
  enF1sd <- enF2sd <- enSfjwsd1 <- enSfjwsd2 <- enSfawsd1 <- enSfawsd2 <- enSfjhsd1 <- enSfjhsd2 <- enSfahsd1 <- enSfahsd2 <- enSfassd <- enSfjssd  <- 
  enSmjwmu1 <- enSmjwmu2 <- enSmawmu1 <- enSmawmu2 <- enSmjhmu1 <- enSmjhmu2 <- enSmahmu1 <- enSmahmu2 <- enSmasmu <- enSmjsmu  <- 
  enSmjwsd1 <- enSmjwsd2 <- enSmawsd1 <- enSmawsd2 <- enSmjhsd1 <- enSmjhsd2 <- enSmahsd1 <- enSmahsd2 <- enSmassd <- enSmjssd  <- array(0,dim=c(S,S,samples,Time))


tot_enF1mu <- tot_enF2mu <- tot_enSfjwmu1 <- tot_enSfjwmu2 <- tot_enSfawmu1 <- tot_enSfawmu2 <- tot_enSfjhmu1 <- tot_enSfjhmu2 <- tot_enSfahmu1 <- tot_enSfahmu2 <- tot_enSfasmu <- tot_enSfjsmu  <- 
  tot_enF1sd <- tot_enF2sd <- tot_enSfjwsd1 <- tot_enSfjwsd2 <- tot_enSfawsd1 <- tot_enSfawsd2 <- tot_enSfjhsd1 <- tot_enSfjhsd2 <- tot_enSfahsd1 <- tot_enSfahsd2 <- tot_enSfassd <- tot_enSfjssd  <-
  tot_enSmjwmu1 <- tot_enSmjwmu2 <- tot_enSmawmu1 <- tot_enSmawmu2 <- tot_enSmjhmu1 <- tot_enSmjhmu2 <- tot_enSmahmu1 <- tot_enSmahmu2 <- tot_enSmasmu <- tot_enSmjsmu  <- 
  tot_enSmjwsd1 <- tot_enSmjwsd2 <- tot_enSmawsd1 <- tot_enSmawsd2 <- tot_enSmjhsd1 <- tot_enSmjhsd2 <- tot_enSmahsd1 <- tot_enSmahsd2 <- tot_enSmassd <- tot_enSmjssd  <-matrix(0,samples,Time)


for (j in 1:samples){
  # perturbation matrices
  C2F1 <- C2F2 <- C2Sfjw1 <- C2Sfjw2 <- C2Sfaw1 <- C2Sfaw2 <- C2Sfjh1 <- C2Sfjh2 <- C2Sfah1 <- C2Sfah2 <- C2Sfas <- C2Sfjs  <-C3F1 <- C3F2 <- C3Sfjw1 <- C3Sfjw2 <- C3Sfaw1 <- C3Sfaw2 <- C3Sfjh1 <- C3Sfjh2 <- C3Sfah1 <- C3Sfah2 <- C3Sfas <- C3Sfjs <-
    C2Smjw1 <- C2Smjw2 <- C2Smaw1 <- C2Smaw2 <- C2Smjh1 <- C2Smjh2 <- C2Smah1 <- C2Smah2 <- C2Smas <- C2Smjs                 <- C3Smjw1 <- C3Smjw2 <- C3Smaw1 <- C3Smaw2 <- C3Smjh1 <- C3Smjh2 <- C3Smah1 <- C3Smah2 <- C3Smas <- C3Smjs<-array(0,dim=c(S^2,S^2,Time)) 
  # perturbation to stage structure
  w_mu_F1 <- w_mu_F2 <- w_mu_Sfjw1 <- w_mu_Sfjw2 <- w_mu_Sfaw1 <- w_mu_Sfaw2 <- w_mu_Sfjh1 <- w_mu_Sfjh2 <- w_mu_Sfah1 <- w_mu_Sfah2 <- w_mu_Sfas <- w_mu_Sfjs  <-w_sd_F1 <- w_sd_F2 <- w_sd_Sfjw1 <- w_sd_Sfjw2 <- w_sd_Sfaw1 <- w_sd_Sfaw2 <- w_sd_Sfjh1 <- w_sd_Sfjh2 <- w_sd_Sfah1 <- w_sd_Sfah2 <- w_sd_Sfas <- w_sd_Sfjs  <- 
    w_mu_Smjw1 <- w_mu_Smjw2 <- w_mu_Smaw1 <- w_mu_Smaw2 <- w_mu_Smjh1 <- w_mu_Smjh2 <- w_mu_Smah1 <- w_mu_Smah2 <- w_mu_Smas <- w_mu_Smjs                       <- w_sd_Smjw1 <- w_sd_Smjw2 <- w_sd_Smaw1 <- w_sd_Smaw2 <- w_sd_Smjh1 <- w_sd_Smjh2 <- w_sd_Smah1 <- w_sd_Smah2 <- w_sd_Smas <- w_sd_Smjs  <- array(0,dim=c(S,S,S,Time+1)) 
  for (i in 1:Time){
    for(k in sp){ # manually change species
      vr_list = list(
        F1 = refF1[j,i,k],
        F2 = refF2[j,i,k],
        Sfj_w1 = refSfj_w1[j,i,k],
        Sfa_w1 = refSfa_w1[j,i,k],
        Sfj_h1 = refSfj_h1[j,i,k],
        Sfa_h1 = refSfa_h1[j,i,k],
        Sfj_w2 = refSfj_w2[j,i,k],
        Sfa_w2 = refSfa_w2[j,i,k],
        Sfj_h2 = refSfj_h2[j,i,k],
        Sfa_h2 = refSfa_h2[j,i,k],
        Sfj_s =  refSfj_s[j,i,k],
        Sfa_s =  refSfa_s[j,i,k],
        
        Smj_w1 = refSmj_w1[j,i,k],
        Sma_w1 = refSma_w1[j,i,k],
        Smj_h1 = refSmj_h1[j,i,k],
        Sma_h1 = refSma_h1[j,i,k],
        Smj_w2 = refSmj_w2[j,i,k],
        Sma_w2 = refSma_w2[j,i,k],
        Smj_h2 = refSmj_h2[j,i,k],
        Sma_h2 = refSma_h2[j,i,k],
        Smj_s =  refSmj_s[j,i,k],
        Sma_s =  refSma_s[j,i,k],
        
        pi_ak = refpi_ak[j,i,k],
        pi_no = refpi_no[j,i,k],
        pi_pr = refpi_pr[j,i,k]
      )
      dA_dF1 <- matrix(sapply(dF1,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      dA_dF2 <- matrix(sapply(dF2,eval,vr_list),ncol = 4,nrow = 4,byrow = TRUE)
      
      dA_dSfjw1 <- matrix(sapply(dSfj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw1 <- matrix(sapply(dSfa_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjw2 <- matrix(sapply(dSfj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfaw2 <- matrix(sapply(dSfa_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjh1 <- matrix(sapply(dSfj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah1 <- matrix(sapply(dSfa_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfjh2 <- matrix(sapply(dSfj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfah2 <- matrix(sapply(dSfa_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSfjs <- matrix(sapply(dSfj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSfas <- matrix(sapply(dSfa_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjw1 <- matrix(sapply(dSmj_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw1 <- matrix(sapply(dSma_w1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjw2 <- matrix(sapply(dSmj_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmaw2 <- matrix(sapply(dSma_w2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjh1 <- matrix(sapply(dSmj_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah1 <- matrix(sapply(dSma_h1,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmjh2 <- matrix(sapply(dSmj_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmah2 <- matrix(sapply(dSma_h2,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      dA_dSmjs <- matrix(sapply(dSmj_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      dA_dSmas <- matrix(sapply(dSma_s,eval,vr_list),ncol = 4,nrow = 4,byrow=TRUE)
      
      
      mat_elements <- sapply(matrix.elements,eval,vr_list)
      A <- matrix(as.numeric(mat_elements[]),nrow=4,byrow=T)
      
      for (m in 1:S){
        for (n in 1:S){
          C2F1[(S+1)*m-S,(S+1)*n-S,i]   <- refF1mu[j,k]     * dA_dF1[m,n]
          C2F2[(S+1)*m-S,(S+1)*n-S,i]   <- refF2mu[j,k]     * dA_dF2[m,n]
          C2Sfjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w1[j,k] * dA_dSfjw1[m,n]
          C2Sfjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_w2[j,k] * dA_dSfjw2[m,n]
          C2Sfaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w1[j,k] * dA_dSfaw1[m,n]
          C2Sfaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_w2[j,k] * dA_dSfaw2[m,n]
          C2Sfjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h1[j,k] * dA_dSfjh1[m,n]
          C2Sfjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_h2[j,k] * dA_dSfjh2[m,n]
          C2Sfah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h1[j,k] * dA_dSfah1[m,n]
          C2Sfah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_h2[j,k] * dA_dSfah2[m,n]
          C2Sfas[(S+1)*m-S,(S+1)*n-S,i]   <- refSfamu_s[j,k]  * dA_dSfas[m,n]
          C2Sfjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSfjmu_s[j,k]  * dA_dSfjs[m,n]
          
          C3F1[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF1[j,i,k]     - refF1mu[j,k]    ) * dA_dF1[m,n]
          C3F2[(S+1)*m-S,(S+1)*n-S,i]   <- (    refF2[j,i,k]     - refF2mu[j,k]    ) * dA_dF2[m,n]
          C3Sfjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w1[j,i,k] - refSfjmu_w1[j,k]) * dA_dSfjw1[m,n]
          C3Sfjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_w2[j,i,k] - refSfjmu_w2[j,k]) * dA_dSfjw2[m,n]
          C3Sfaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w1[j,i,k] - refSfamu_w1[j,k]) * dA_dSfaw1[m,n]
          C3Sfaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_w2[j,i,k] - refSfamu_w2[j,k]) * dA_dSfaw2[m,n]
          C3Sfjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h1[j,i,k] - refSfjmu_h1[j,k]) * dA_dSfjh1[m,n]
          C3Sfjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfj_h2[j,i,k] - refSfjmu_h2[j,k]) * dA_dSfjh2[m,n]
          C3Sfah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h1[j,i,k] - refSfamu_h1[j,k]) * dA_dSfah1[m,n]
          C3Sfah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSfa_h2[j,i,k] - refSfamu_h2[j,k]) * dA_dSfah2[m,n]
          C3Sfas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfa_s[j,i,k]  - refSfamu_s[j,k] ) * dA_dSfas[m,n]
          C3Sfjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSfj_s[j,i,k]  - refSfjmu_s[j,k] ) * dA_dSfjs[m,n]
          
          C2Smjw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w1[j,k] * dA_dSmjw1[m,n]
          C2Smjw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_w2[j,k] * dA_dSmjw2[m,n]
          C2Smaw1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w1[j,k] * dA_dSmaw1[m,n]
          C2Smaw2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_w2[j,k] * dA_dSmaw2[m,n]
          C2Smjh1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h1[j,k] * dA_dSmjh1[m,n]
          C2Smjh2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_h2[j,k] * dA_dSmjh2[m,n]
          C2Smah1[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h1[j,k] * dA_dSmah1[m,n]
          C2Smah2[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_h2[j,k] * dA_dSmah2[m,n]
          C2Smas[(S+1)*m-S,(S+1)*n-S,i]   <- refSmamu_s[j,k]  * dA_dSmas[m,n]
          C2Smjs[(S+1)*m-S,(S+1)*n-S,i]   <- refSmjmu_s[j,k]  * dA_dSmjs[m,n]
          
          C3Smjw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w1[j,i,k] - refSmjmu_w1[j,k]) * dA_dSmjw1[m,n]
          C3Smjw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_w2[j,i,k] - refSmjmu_w2[j,k]) * dA_dSmjw2[m,n]
          C3Smaw1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w1[j,i,k] - refSmamu_w1[j,k]) * dA_dSmaw1[m,n]
          C3Smaw2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_w2[j,i,k] - refSmamu_w2[j,k]) * dA_dSmaw2[m,n]
          C3Smjh1[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h1[j,i,k] - refSmjmu_h1[j,k]) * dA_dSmjh1[m,n]
          C3Smjh2[(S+1)*m-S,(S+1)*n-S,i] <- (refSmj_h2[j,i,k] - refSmjmu_h2[j,k]) * dA_dSmjh2[m,n]
          C3Smah1[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h1[j,i,k] - refSmamu_h1[j,k]) * dA_dSmah1[m,n]
          C3Smah2[(S+1)*m-S,(S+1)*n-S,i] <- (refSma_h2[j,i,k] - refSmamu_h2[j,k]) * dA_dSmah2[m,n]
          C3Smas[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSma_s[j,i,k]  - refSmamu_s[j,k] ) * dA_dSmas[m,n]
          C3Smjs[(S+1)*m-S,(S+1)*n-S,i]  <- ( refSmj_s[j,i,k]  - refSmjmu_s[j,k] ) * dA_dSmjs[m,n]
          
          
          K <- I - refn[,1,j,i+1,k]%*%t(e)  # intermediate steps
          B <- K %*% A / lam_realref[j,i,k]
          
          gF1_mu <-  K %*%     C2F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_mu <-  K %*%     C2F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_mu <-  K %*%   C2Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_mu <-  K %*%   C2Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_mu <-  K %*%   C2Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_mu <-  K %*%   C2Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_mu <-  K %*%   C2Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_mu <-  K %*%   C2Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_mu <-  K %*%   C2Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_mu <-  K %*%   C2Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_mu <-  K %*%    C2Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_mu <-  K %*%    C2Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gF1_sig <-  K %*%     C3F1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gF2_sig <-  K %*%     C3F2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw1_sig <-  K %*%   C3Sfjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjw2_sig <-  K %*%   C3Sfjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw1_sig <-  K %*%   C3Sfaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfaw2_sig <-  K %*%   C3Sfaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh1_sig <-  K %*%   C3Sfjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjh2_sig <-  K %*%   C3Sfjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah1_sig <-  K %*%   C3Sfah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfah2_sig <-  K %*%   C3Sfah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfas_sig <-  K %*%    C3Sfas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSfjs_sig <-  K %*%    C3Sfjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_mu <-  K %*%   C2Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_mu <-  K %*%   C2Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_mu <-  K %*%   C2Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_mu <-  K %*%   C2Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_mu <-  K %*%   C2Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_mu <-  K %*%   C2Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_mu <-  K %*%   C2Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_mu <-  K %*%   C2Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_mu <-  K %*%    C2Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_mu <-  K %*%    C2Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          gSmjw1_sig <-  K %*%   C3Smjw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjw2_sig <-  K %*%   C3Smjw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw1_sig <-  K %*%   C3Smaw1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmaw2_sig <-  K %*%   C3Smaw2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh1_sig <-  K %*%   C3Smjh1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjh2_sig <-  K %*%   C3Smjh2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah1_sig <-  K %*%   C3Smah1[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmah2_sig <-  K %*%   C3Smah2[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmas_sig <-  K %*%    C3Smas[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          gSmjs_sig <-  K %*%    C3Smjs[(S*m-(S-1)):(S*m),(S*n-(S-1)):(S*n),i] %*% refn[,1,j,i,k] / lam_realref[j,i,k]
          
          w_mu_F1[,m,n,i+1]  <- B %*%  w_mu_F1[,m,n,i] +    gF1_mu  
          w_mu_F2[,m,n,i+1]  <- B %*%  w_mu_F2[,m,n,i] +    gF2_mu  
          w_mu_Sfjw1[,m,n,i+1]  <- B %*% w_mu_Sfjw1[,m,n,i] +  gSfjw1_mu  
          w_mu_Sfjw2[,m,n,i+1]  <- B %*% w_mu_Sfjw2[,m,n,i] +  gSfjw2_mu  
          w_mu_Sfaw1[,m,n,i+1]  <- B %*% w_mu_Sfaw1[,m,n,i] +  gSfaw1_mu  
          w_mu_Sfaw2[,m,n,i+1]  <- B %*% w_mu_Sfaw2[,m,n,i] +  gSfaw2_mu  
          w_mu_Sfjh1[,m,n,i+1]  <- B %*% w_mu_Sfjh1[,m,n,i] +  gSfjh1_mu  
          w_mu_Sfjh2[,m,n,i+1]  <- B %*% w_mu_Sfjh2[,m,n,i] +  gSfjh2_mu  
          w_mu_Sfah1[,m,n,i+1]  <- B %*% w_mu_Sfah1[,m,n,i] +  gSfah1_mu  
          w_mu_Sfah2[,m,n,i+1]  <- B %*% w_mu_Sfah2[,m,n,i] +  gSfah2_mu  
          w_mu_Sfas[,m,n,i+1]  <- B %*% w_mu_Sfas[,m,n,i] +   gSfas_mu  
          w_mu_Sfjs[,m,n,i+1]  <- B %*% w_mu_Sfjs[,m,n,i] +   gSfjs_mu  
          
          w_sd_F1[,m,n,i+1]   <- B %*%  w_sd_F1[,m,n,i] +    gF1_sig  
          w_sd_F2[,m,n,i+1]   <- B %*%  w_sd_F2[,m,n,i] +    gF2_sig  
          w_sd_Sfjw1[,m,n,i+1]  <- B %*% w_sd_Sfjw1[,m,n,i] +  gSfjw1_sig  
          w_sd_Sfjw2[,m,n,i+1]  <- B %*% w_sd_Sfjw2[,m,n,i] +  gSfjw2_sig  
          w_sd_Sfaw1[,m,n,i+1]  <- B %*% w_sd_Sfaw1[,m,n,i] +  gSfaw1_sig  
          w_sd_Sfaw2[,m,n,i+1]  <- B %*% w_sd_Sfaw2[,m,n,i] +  gSfaw2_sig  
          w_sd_Sfjh1[,m,n,i+1]  <- B %*% w_sd_Sfjh1[,m,n,i] +  gSfjh1_sig  
          w_sd_Sfjh2[,m,n,i+1]  <- B %*% w_sd_Sfjh2[,m,n,i] +  gSfjh2_sig  
          w_sd_Sfah1[,m,n,i+1]  <- B %*% w_sd_Sfah1[,m,n,i] +  gSfah1_sig  
          w_sd_Sfah2[,m,n,i+1]  <- B %*% w_sd_Sfah2[,m,n,i] +  gSfah2_sig  
          w_sd_Sfas[,m,n,i+1]   <- B %*% w_sd_Sfas[,m,n,i] +   gSfas_sig  
          w_sd_Sfjs[,m,n,i+1]   <- B %*% w_sd_Sfjs[,m,n,i] +   gSfjs_sig  
          
          w_mu_Smjw1[,m,n,i+1]  <- B %*% w_mu_Smjw1[,m,n,i] +  gSmjw1_mu  
          w_mu_Smjw2[,m,n,i+1]  <- B %*% w_mu_Smjw2[,m,n,i] +  gSmjw2_mu  
          w_mu_Smaw1[,m,n,i+1]  <- B %*% w_mu_Smaw1[,m,n,i] +  gSmaw1_mu  
          w_mu_Smaw2[,m,n,i+1]  <- B %*% w_mu_Smaw2[,m,n,i] +  gSmaw2_mu  
          w_mu_Smjh1[,m,n,i+1]  <- B %*% w_mu_Smjh1[,m,n,i] +  gSmjh1_mu  
          w_mu_Smjh2[,m,n,i+1]  <- B %*% w_mu_Smjh2[,m,n,i] +  gSmjh2_mu  
          w_mu_Smah1[,m,n,i+1]  <- B %*% w_mu_Smah1[,m,n,i] +  gSmah1_mu  
          w_mu_Smah2[,m,n,i+1]  <- B %*% w_mu_Smah2[,m,n,i] +  gSmah2_mu  
          w_mu_Smas[,m,n,i+1]  <- B %*% w_mu_Smas[,m,n,i] +   gSmas_mu  
          w_mu_Smjs[,m,n,i+1]  <- B %*% w_mu_Smjs[,m,n,i] +   gSmjs_mu  
          
          w_sd_Smjw1[,m,n,i+1]  <- B %*% w_sd_Smjw1[,m,n,i] +  gSmjw1_sig  
          w_sd_Smjw2[,m,n,i+1]  <- B %*% w_sd_Smjw2[,m,n,i] +  gSmjw2_sig  
          w_sd_Smaw1[,m,n,i+1]  <- B %*% w_sd_Smaw1[,m,n,i] +  gSmaw1_sig  
          w_sd_Smaw2[,m,n,i+1]  <- B %*% w_sd_Smaw2[,m,n,i] +  gSmaw2_sig  
          w_sd_Smjh1[,m,n,i+1]  <- B %*% w_sd_Smjh1[,m,n,i] +  gSmjh1_sig  
          w_sd_Smjh2[,m,n,i+1]  <- B %*% w_sd_Smjh2[,m,n,i] +  gSmjh2_sig  
          w_sd_Smah1[,m,n,i+1]  <- B %*% w_sd_Smah1[,m,n,i] +  gSmah1_sig  
          w_sd_Smah2[,m,n,i+1]  <- B %*% w_sd_Smah2[,m,n,i] +  gSmah2_sig  
          w_sd_Smas[,m,n,i+1]   <- B %*% w_sd_Smas[,m,n,i] +   gSmas_sig  
          w_sd_Smjs[,m,n,i+1]   <- B %*% w_sd_Smjs[,m,n,i] +   gSmjs_sig  
          
          # Equation 3 Koons et al. 2017, e^n_mu
          enF1mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2mu [m,n,j,i] <- t(e) %*% A %*%   w_mu_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1mu [j,i] <-  sum(sum(enF1mu [,,j,i]))
          tot_enF2mu [j,i] <-  sum(sum(enF2mu [,,j,i]))
          tot_enSfjwmu1[j,i] <- sum(sum(enSfjwmu1[,,j,i]))
          tot_enSfjwmu2[j,i] <- sum(sum(enSfjwmu2[,,j,i]))
          tot_enSfawmu1[j,i] <- sum(sum(enSfawmu1[,,j,i]))
          tot_enSfawmu2[j,i] <- sum(sum(enSfawmu2[,,j,i]))
          tot_enSfjhmu1[j,i] <- sum(sum(enSfjhmu1[,,j,i]))
          tot_enSfjhmu2[j,i] <- sum(sum(enSfjhmu2[,,j,i]))
          tot_enSfahmu1[j,i] <- sum(sum(enSfahmu1[,,j,i]))
          tot_enSfahmu2[j,i] <- sum(sum(enSfahmu2[,,j,i]))
          tot_enSfasmu[j,i] <-  sum(sum(enSfasmu[,,j,i]))
          
          enSmjwmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu1[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahmu2[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmasmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjsmu[m,n,j,i] <- t(e) %*% A %*%  w_mu_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwmu1[j,i] <- sum(sum(enSmjwmu1[,,j,i]))
          tot_enSmjwmu2[j,i] <- sum(sum(enSmjwmu2[,,j,i]))
          tot_enSmawmu1[j,i] <- sum(sum(enSmawmu1[,,j,i]))
          tot_enSmawmu2[j,i] <- sum(sum(enSmawmu2[,,j,i]))
          tot_enSmjhmu1[j,i] <- sum(sum(enSmjhmu1[,,j,i]))
          tot_enSmjhmu2[j,i] <- sum(sum(enSmjhmu2[,,j,i]))
          tot_enSmahmu1[j,i] <- sum(sum(enSmahmu1[,,j,i]))
          tot_enSmahmu2[j,i] <- sum(sum(enSmahmu2[,,j,i]))
          tot_enSmasmu[j,i] <-  sum(sum(enSmasmu[,,j,i]))
          
          
          # Equation 3 Koons et al. 2017, e^n_sd
          enF1sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F1[,m,n,i] / lam_realref[j,i,k] 
          enF2sd [m,n,j,i] <- t(e) %*% A %*%   w_sd_F2[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw1[,m,n,i] / lam_realref[j,i,k] 
          enSfjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjw2[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw1[,m,n,i] / lam_realref[j,i,k] 
          enSfawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfaw2[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh1[,m,n,i] / lam_realref[j,i,k] 
          enSfjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfjh2[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah1[,m,n,i] / lam_realref[j,i,k] 
          enSfahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Sfah2[,m,n,i] / lam_realref[j,i,k] 
          enSfassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfas[,m,n,i] / lam_realref[j,i,k] 
          enSfjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Sfjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enF1sd [j,i] <-  sum(sum(enF1sd [,,j,i]))
          tot_enF2sd [j,i] <-  sum(sum(enF2sd [,,j,i]))
          tot_enSfjwsd1[j,i] <- sum(sum(enSfjwsd1[,,j,i]))
          tot_enSfjwsd2[j,i] <- sum(sum(enSfjwsd2[,,j,i]))
          tot_enSfawsd1[j,i] <- sum(sum(enSfawsd1[,,j,i]))
          tot_enSfawsd2[j,i] <- sum(sum(enSfawsd2[,,j,i]))
          tot_enSfjhsd1[j,i] <- sum(sum(enSfjhsd1[,,j,i]))
          tot_enSfjhsd2[j,i] <- sum(sum(enSfjhsd2[,,j,i]))
          tot_enSfahsd1[j,i] <- sum(sum(enSfahsd1[,,j,i]))
          tot_enSfahsd2[j,i] <- sum(sum(enSfahsd2[,,j,i]))
          tot_enSfassd[j,i] <-  sum(sum(enSfassd[,,j,i]))
          tot_enSfjssd[j,i] <-  sum(sum(enSfjssd[,,j,i]))
          
          enSmjwsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw1[,m,n,i] / lam_realref[j,i,k] 
          enSmjwsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjw2[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw1[,m,n,i] / lam_realref[j,i,k] 
          enSmawsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smaw2[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh1[,m,n,i] / lam_realref[j,i,k] 
          enSmjhsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smjh2[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd1[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah1[,m,n,i] / lam_realref[j,i,k] 
          enSmahsd2[m,n,j,i] <- t(e) %*% A %*% w_sd_Smah2[,m,n,i] / lam_realref[j,i,k] 
          enSmassd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smas[,m,n,i] / lam_realref[j,i,k] 
          enSmjssd[m,n,j,i] <- t(e) %*% A %*%  w_sd_Smjs[,m,n,i] / lam_realref[j,i,k] 
          
          tot_enSmjwsd1[j,i] <- sum(sum(enSmjwsd1[,,j,i]))
          tot_enSmjwsd2[j,i] <- sum(sum(enSmjwsd2[,,j,i]))
          tot_enSmawsd1[j,i] <- sum(sum(enSmawsd1[,,j,i]))
          tot_enSmawsd2[j,i] <- sum(sum(enSmawsd2[,,j,i]))
          tot_enSmjhsd1[j,i] <- sum(sum(enSmjhsd1[,,j,i]))
          tot_enSmjhsd2[j,i] <- sum(sum(enSmjhsd2[,,j,i]))
          tot_enSmahsd1[j,i] <- sum(sum(enSmahsd1[,,j,i]))
          tot_enSmahsd2[j,i] <- sum(sum(enSmahsd2[,,j,i]))
          tot_enSmassd[j,i] <-  sum(sum(enSmassd[,,j,i]))
          tot_enSmjssd[j,i] <-  sum(sum(enSmjssd[,,j,i]))
          
        }
      }
    }
  }
}

avg_enF1mu  <- rowMeans( tot_enF1mu )
avg_enF2mu  <- rowMeans( tot_enF2mu )
avg_enSfjwmu1 <- rowMeans(tot_enSfjwmu1)
avg_enSfjwmu2 <- rowMeans(tot_enSfjwmu2)
avg_enSfawmu1 <- rowMeans(tot_enSfawmu1)
avg_enSfawmu2 <- rowMeans(tot_enSfawmu2)
avg_enSfjhmu1 <- rowMeans(tot_enSfjhmu1)
avg_enSfjhmu2 <- rowMeans(tot_enSfjhmu2)
avg_enSfahmu1 <- rowMeans(tot_enSfahmu1)
avg_enSfahmu2 <- rowMeans(tot_enSfahmu2)
avg_enSfasmu <- rowMeans( tot_enSfasmu)
avg_enSfjsmu <- rowMeans( tot_enSfjsmu)

avg_enSmjwmu1 <- rowMeans(tot_enSmjwmu1)
avg_enSmjwmu2 <- rowMeans(tot_enSmjwmu2)
avg_enSmawmu1 <- rowMeans(tot_enSmawmu1)
avg_enSmawmu2 <- rowMeans(tot_enSmawmu2)
avg_enSmjhmu1 <- rowMeans(tot_enSmjhmu1)
avg_enSmjhmu2 <- rowMeans(tot_enSmjhmu2)
avg_enSmahmu1 <- rowMeans(tot_enSmahmu1)
avg_enSmahmu2 <- rowMeans(tot_enSmahmu2)
avg_enSmasmu <- rowMeans( tot_enSmasmu)
avg_enSmjsmu <- rowMeans( tot_enSmjsmu)

avg_enF1sd  <-  rowMeans( tot_enF1sd )
avg_enF2sd  <-  rowMeans( tot_enF2sd )
avg_enSfjwsd1 <- rowMeans(tot_enSfjwsd1)
avg_enSfjwsd2 <- rowMeans(tot_enSfjwsd2)
avg_enSfawsd1 <- rowMeans(tot_enSfawsd1)
avg_enSfawsd2 <- rowMeans(tot_enSfawsd2)
avg_enSfjhsd1 <- rowMeans(tot_enSfjhsd1)
avg_enSfjhsd2 <- rowMeans(tot_enSfjhsd2)
avg_enSfahsd1 <- rowMeans(tot_enSfahsd1)
avg_enSfahsd2 <- rowMeans(tot_enSfahsd2)
avg_enSfassd <- rowMeans( tot_enSfassd)
avg_enSfjssd <- rowMeans( tot_enSfjssd)

avg_enSmjwsd1 <- rowMeans(tot_enSmjwsd1)
avg_enSmjwsd2 <- rowMeans(tot_enSmjwsd2)
avg_enSmawsd1 <- rowMeans(tot_enSmawsd1)
avg_enSmawsd2 <- rowMeans(tot_enSmawsd2)
avg_enSmjhsd1 <- rowMeans(tot_enSmjhsd1)
avg_enSmjhsd2 <- rowMeans(tot_enSmjhsd2)
avg_enSmahsd1 <- rowMeans(tot_enSmahsd1)
avg_enSmahsd2 <- rowMeans(tot_enSmahsd2)
avg_enSmassd <- rowMeans( tot_enSmassd)
avg_enSmjssd <- rowMeans( tot_enSmjssd)

# Step 9: Calculate vital rate contributions to the difference in geometric mean rates of population growth between time periods. This is a function of 
# logged differences in mean of vital rates, logged differences in s.d. of  vital rates, as channeled through direct effects of perturbations to the   
# moments and indirect effects of perturbations to these moments channeled through changes in population structure over time.
cont_A_F1mu  <- cont_A_F2mu <- cont_A_Sfjmu_w1 <- cont_A_Sfjmu_w2 <- cont_A_Sfjmu_s <- cont_A_Sfjmu_h1 <- cont_A_Sfjmu_h2 <- cont_A_Sfamu_h1 <- cont_A_Sfamu_h2 <- cont_A_Sfamu_w1 <- cont_A_Sfamu_w2 <- cont_A_Sfamu_s <- 
  cont_A_F1sd  <- cont_A_F2sd <- cont_A_Sfjsd_w1 <- cont_A_Sfjsd_w2 <- cont_A_Sfjsd_s <- cont_A_Sfjsd_h1 <- cont_A_Sfjsd_h2 <- cont_A_Sfasd_h1 <- cont_A_Sfasd_h2 <- cont_A_Sfasd_w1 <- cont_A_Sfasd_w2 <- cont_A_Sfasd_s <-
  cont_n_F1mu  <- cont_n_F2mu <- cont_n_Sfjmu_w1 <- cont_n_Sfjmu_w2 <- cont_n_Sfjmu_s <- cont_n_Sfjmu_h1 <- cont_n_Sfjmu_h2 <- cont_n_Sfamu_h1 <- cont_n_Sfamu_h2 <- cont_n_Sfamu_w1 <- cont_n_Sfamu_w2 <- cont_n_Sfamu_s <- 
  cont_n_F1sd  <- cont_n_F2sd <- cont_n_Sfjsd_w1 <- cont_n_Sfjsd_w2 <- cont_n_Sfjsd_s <- cont_n_Sfjsd_h1 <- cont_n_Sfjsd_h2 <- cont_n_Sfasd_h1 <- cont_n_Sfasd_h2 <- cont_n_Sfasd_w1 <- cont_n_Sfasd_w2 <- cont_n_Sfasd_s <- 
  cont_A_Smjmu_w1 <- cont_A_Smjmu_w2 <- cont_A_Smjmu_s <- cont_A_Smjmu_h1 <- cont_A_Smjmu_h2 <- cont_A_Smamu_h1 <- cont_A_Smamu_h2 <- cont_A_Smamu_w1 <- cont_A_Smamu_w2 <- cont_A_Smamu_s <- 
  cont_A_Smjsd_w1 <- cont_A_Smjsd_w2 <- cont_A_Smjsd_s <- cont_A_Smjsd_h1 <- cont_A_Smjsd_h2 <- cont_A_Smasd_h1 <- cont_A_Smasd_h2 <- cont_A_Smasd_w1 <- cont_A_Smasd_w2 <- cont_A_Smasd_s <-
  cont_n_Smjmu_w1 <- cont_n_Smjmu_w2 <- cont_n_Smjmu_s <- cont_n_Smjmu_h1 <- cont_n_Smjmu_h2 <- cont_n_Smamu_h1 <- cont_n_Smamu_h2 <- cont_n_Smamu_w1 <- cont_n_Smamu_w2 <- cont_n_Smamu_s <- 
  cont_n_Smjsd_w1 <- cont_n_Smjsd_w2 <- cont_n_Smjsd_s <- cont_n_Smjsd_h1 <- cont_n_Smjsd_h2 <- cont_n_Smasd_h1 <- cont_n_Smasd_h2 <- cont_n_Smasd_w1 <- cont_n_Smasd_w2 <- cont_n_Smasd_s <- matrix(NA,samples,1)

# Equation 3; Koons et al. 2017
for (j in 1:samples){
  for(k in sp){
    
    cont_A_F1mu[j] <-         logF1mudiff[j,k] *      avg_eAF1mu[j]       
    cont_A_F2mu[j] <-         logF2mudiff[j,k] *      avg_eAF2mu[j]       
    cont_A_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *  avg_eASfjmu_w1[j] 
    cont_A_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *  avg_eASfamu_w1[j] 
    cont_A_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *  avg_eASfjmu_h1[j]  
    cont_A_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *  avg_eASfamu_h1[j] 
    cont_A_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *  avg_eASfjmu_w2[j] 
    cont_A_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *  avg_eASfamu_w2[j] 
    cont_A_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *  avg_eASfjmu_h2[j] 
    cont_A_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *  avg_eASfamu_h2[j] 
    cont_A_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *   avg_eASfjmu_s[j] 
    cont_A_Sfamu_s[j] <-      logSfa_smudiff[j,k] *   avg_eASfamu_s[j]  
    
    cont_A_F1sd[j] <-            logF1sigdiff[j,k] *      avg_eAF1sd[j]       
    cont_A_F2sd[j] <-            logF2sigdiff[j,k] *      avg_eAF2sd[j]       
    cont_A_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_eASfjsd_w1[j] 
    cont_A_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_eASfasd_w1[j] 
    cont_A_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_eASfjsd_h1[j]  
    cont_A_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_eASfasd_h1[j] 
    cont_A_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_eASfjsd_w2[j] 
    cont_A_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_eASfasd_w2[j] 
    cont_A_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_eASfjsd_h2[j] 
    cont_A_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_eASfasd_h2[j] 
    cont_A_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *   avg_eASfjsd_s[j] 
    cont_A_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *   avg_eASfasd_s[j]  
    
    
    cont_n_F1mu[j] <-         logF1mudiff[j,k] *       avg_enF1mu  [j]   
    cont_n_F2mu[j] <-         logF2mudiff[j,k] *       avg_enF2mu  [j]   
    cont_n_Sfjmu_w1[j] <-     logSfj1_wmudiff[j,k] *   avg_enSfjwmu1[j] 
    cont_n_Sfamu_w1[j] <-     logSfa1_wmudiff[j,k] *   avg_enSfjwmu2[j] 
    cont_n_Sfjmu_h1[j] <-     logSfj1_hmudiff[j,k] *   avg_enSfawmu1[j]  
    cont_n_Sfamu_h1[j] <-     logSfa1_hmudiff[j,k] *   avg_enSfawmu2[j] 
    cont_n_Sfjmu_w2[j] <-     logSfj2_wmudiff[j,k] *   avg_enSfjhmu1[j] 
    cont_n_Sfamu_w2[j] <-     logSfa2_wmudiff[j,k] *   avg_enSfjhmu2[j] 
    cont_n_Sfjmu_h2[j] <-     logSfj2_hmudiff[j,k] *   avg_enSfahmu1[j] 
    cont_n_Sfamu_h2[j] <-     logSfa2_hmudiff[j,k] *   avg_enSfahmu2[j] 
    cont_n_Sfjmu_s[j] <-      logSfj_smudiff[j,k] *    avg_enSfasmu [j]
    cont_n_Sfamu_s[j] <-      logSfa_smudiff[j,k] *    avg_enSfjsmu [j] 
    
    cont_n_F1sd[j] <-            logF1sigdiff[j,k] *   avg_enF1sd  [j]
    cont_n_F2sd[j] <-            logF2sigdiff[j,k] *   avg_enF2sd  [j]
    cont_n_Sfjsd_w1[j] <-     logSfj1_wsigdiff[j,k] *  avg_enSfjwsd1[j]
    cont_n_Sfasd_w1[j] <-     logSfa1_wsigdiff[j,k] *  avg_enSfjwsd2[j]
    cont_n_Sfjsd_h1[j] <-     logSfj1_hsigdiff[j,k] *  avg_enSfawsd1[j]
    cont_n_Sfasd_h1[j] <-     logSfa1_hsigdiff[j,k] *  avg_enSfawsd2[j]
    cont_n_Sfjsd_w2[j] <-     logSfj2_wsigdiff[j,k] *  avg_enSfjhsd1[j]
    cont_n_Sfasd_w2[j] <-     logSfa2_wsigdiff[j,k] *  avg_enSfjhsd2[j]
    cont_n_Sfjsd_h2[j] <-     logSfj2_hsigdiff[j,k] *  avg_enSfahsd1[j]
    cont_n_Sfasd_h2[j] <-     logSfa2_hsigdiff[j,k] *  avg_enSfahsd2[j]
    cont_n_Sfjsd_s[j] <-       logSfj_ssigdiff[j,k] *  avg_enSfassd [j]
    cont_n_Sfasd_s[j] <-       logSfa_ssigdiff[j,k] *  avg_enSfjssd [j]
    ###
    
    cont_A_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *  avg_eASmjmu_w1[j] 
    cont_A_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *  avg_eASmamu_w1[j] 
    cont_A_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *  avg_eASmjmu_h1[j]  
    cont_A_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *  avg_eASmamu_h1[j] 
    cont_A_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *  avg_eASmjmu_w2[j] 
    cont_A_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *  avg_eASmamu_w2[j] 
    cont_A_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *  avg_eASmjmu_h2[j] 
    cont_A_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *  avg_eASmamu_h2[j] 
    cont_A_Smjmu_s[j] <-      logSmj_smudiff[j,k] *   avg_eASmjmu_s[j] 
    cont_A_Smamu_s[j] <-      logSma_smudiff[j,k] *   avg_eASmamu_s[j]  
    
    cont_A_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_eASmjsd_w1[j] 
    cont_A_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_eASmasd_w1[j] 
    cont_A_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_eASmjsd_h1[j]  
    cont_A_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_eASmasd_h1[j] 
    cont_A_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_eASmjsd_w2[j] 
    cont_A_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_eASmasd_w2[j] 
    cont_A_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_eASmjsd_h2[j] 
    cont_A_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_eASmasd_h2[j] 
    cont_A_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *   avg_eASmjsd_s[j] 
    cont_A_Smasd_s[j] <-       logSma_ssigdiff[j,k] *   avg_eASmasd_s[j]  
    
    cont_n_Smjmu_w1[j] <-     logSmj1_wmudiff[j,k] *   avg_enSmjwmu1[j] 
    cont_n_Smamu_w1[j] <-     logSma1_wmudiff[j,k] *   avg_enSmjwmu2[j] 
    cont_n_Smjmu_h1[j] <-     logSmj1_hmudiff[j,k] *   avg_enSmawmu1[j]  
    cont_n_Smamu_h1[j] <-     logSma1_hmudiff[j,k] *   avg_enSmawmu2[j] 
    cont_n_Smjmu_w2[j] <-     logSmj2_wmudiff[j,k] *   avg_enSmjhmu1[j] 
    cont_n_Smamu_w2[j] <-     logSma2_wmudiff[j,k] *   avg_enSmjhmu2[j] 
    cont_n_Smjmu_h2[j] <-     logSmj2_hmudiff[j,k] *   avg_enSmahmu1[j] 
    cont_n_Smamu_h2[j] <-     logSma2_hmudiff[j,k] *   avg_enSmahmu2[j] 
    cont_n_Smjmu_s[j] <-      logSmj_smudiff[j,k] *    avg_enSmasmu [j]
    cont_n_Smamu_s[j] <-      logSma_smudiff[j,k] *    avg_enSmjsmu [j] 
    
    cont_n_Smjsd_w1[j] <-     logSmj1_wsigdiff[j,k] *  avg_enSmjwsd1[j]
    cont_n_Smasd_w1[j] <-     logSma1_wsigdiff[j,k] *  avg_enSmjwsd2[j]
    cont_n_Smjsd_h1[j] <-     logSmj1_hsigdiff[j,k] *  avg_enSmawsd1[j]
    cont_n_Smasd_h1[j] <-     logSma1_hsigdiff[j,k] *  avg_enSmawsd2[j]
    cont_n_Smjsd_w2[j] <-     logSmj2_wsigdiff[j,k] *  avg_enSmjhsd1[j]
    cont_n_Smasd_w2[j] <-     logSma2_wsigdiff[j,k] *  avg_enSmjhsd2[j]
    cont_n_Smjsd_h2[j] <-     logSmj2_hsigdiff[j,k] *  avg_enSmahsd1[j]
    cont_n_Smasd_h2[j] <-     logSma2_hsigdiff[j,k] *  avg_enSmahsd2[j]
    cont_n_Smjsd_s[j] <-       logSmj_ssigdiff[j,k] *  avg_enSmassd [j]
    cont_n_Smasd_s[j] <-       logSma_ssigdiff[j,k] *  avg_enSmjssd [j]
  }
}

# Total effect of shifts in the mean vital rate (A_mu), its variance [A_sd], or the indirect effects of demographic rates channeled through shifts in the mean (n_mu) or variance (n_sd) population structure
totF1 <- cont_A_F1mu + cont_A_F1sd + cont_n_F1mu + cont_n_F1sd
totF2 <- cont_A_F2mu + cont_A_F2sd + cont_n_F2mu + cont_n_F2sd
totF  <- totF1 + totF2

tot_Sf_w_j_1 <- cont_A_Sfjmu_w1 + cont_A_Sfjsd_w1 + cont_n_Sfjmu_w1 + cont_n_Sfjsd_w1 
tot_Sf_w_j_2 <- cont_A_Sfjmu_w2 + cont_A_Sfjsd_w2 + cont_n_Sfjmu_w2 + cont_n_Sfjsd_w2
tot_Sf_2_j_1 <- cont_A_Sfjmu_s + cont_A_Sfjsd_s + cont_n_Sfjmu_s + cont_n_Sfjsd_s
tot_Sf_h_j_1 <- cont_A_Sfjmu_h1 + cont_A_Sfjsd_h1 + cont_n_Sfjmu_h1 + cont_n_Sfjsd_h1
tot_Sf_h_j_2 <- cont_A_Sfjmu_h2 + cont_A_Sfjsd_h2 + cont_n_Sfjmu_h2 + cont_n_Sfjsd_h2
tot_Sf_h_a_1 <- cont_A_Sfamu_h1 + cont_A_Sfasd_h1 + cont_n_Sfamu_h1 + cont_n_Sfasd_h1
tot_Sf_h_a_2 <- cont_A_Sfamu_h2 + cont_A_Sfasd_h2 + cont_n_Sfamu_h2 + cont_n_Sfasd_h2
tot_Sf_w_a_1 <- cont_A_Sfamu_w1 + cont_A_Sfasd_w1 + cont_n_Sfamu_w1 + cont_n_Sfasd_w1
tot_Sf_w_a_2 <- cont_A_Sfamu_w2 + cont_A_Sfasd_w2 + cont_n_Sfamu_w2 + cont_n_Sfasd_w2
tot_Sf_2_2_1 <- cont_A_Sfamu_s + cont_A_Sfasd_s + cont_n_Sfamu_s + cont_n_Sfasd_s

tot_Sm_w_j_1 <- cont_A_Smjmu_w1 + cont_A_Smjsd_w1 + cont_n_Smjmu_w1 + cont_n_Smjsd_w1 
tot_Sm_w_j_2 <- cont_A_Smjmu_w2 + cont_A_Smjsd_w2 + cont_n_Smjmu_w2 + cont_n_Smjsd_w2
tot_Sm_2_j_1 <- cont_A_Smjmu_s + cont_A_Smjsd_s + cont_n_Smjmu_s + cont_n_Smjsd_s
tot_Sm_h_j_1 <- cont_A_Smjmu_h1 + cont_A_Smjsd_h1 + cont_n_Smjmu_h1 + cont_n_Smjsd_h1
tot_Sm_h_j_2 <- cont_A_Smjmu_h2 + cont_A_Smjsd_h2 + cont_n_Smjmu_h2 + cont_n_Smjsd_h2
tot_Sm_h_a_1 <- cont_A_Smamu_h1 + cont_A_Smasd_h1 + cont_n_Smamu_h1 + cont_n_Smasd_h1
tot_Sm_h_a_2 <- cont_A_Smamu_h2 + cont_A_Smasd_h2 + cont_n_Smamu_h2 + cont_n_Smasd_h2
tot_Sm_w_a_1 <- cont_A_Smamu_w1 + cont_A_Smasd_w1 + cont_n_Smamu_w1 + cont_n_Smasd_w1
tot_Sm_w_a_2 <- cont_A_Smamu_w2 + cont_A_Smasd_w2 + cont_n_Smamu_w2 + cont_n_Smasd_w2
tot_Sm_2_2_1 <- cont_A_Smamu_s + cont_A_Smasd_s + cont_n_Smamu_s + cont_n_Smasd_s

cont_time_prairie_2 <- rbind.data.frame(
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'Total', value = 'Total', mean = mean(totF1      ), lower = quantile(totF1      ,probs = 0.05),upper = quantile(totF1      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'Total', value = 'Total', mean = mean(totF2      ), lower = quantile(totF2      ,probs = 0.05),upper = quantile(totF2      ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_1), lower = quantile(tot_Sf_w_j_1,probs = 0.05),upper = quantile(tot_Sf_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_1), lower = quantile(tot_Sf_w_a_1,probs = 0.05),upper = quantile(tot_Sf_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_1), lower = quantile(tot_Sf_h_j_1,probs = 0.05),upper = quantile(tot_Sf_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_1), lower = quantile(tot_Sf_h_a_1,probs = 0.05),upper = quantile(tot_Sf_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_j_2), lower = quantile(tot_Sf_w_j_2,probs = 0.05),upper = quantile(tot_Sf_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_w_a_2), lower = quantile(tot_Sf_w_a_2,probs = 0.05),upper = quantile(tot_Sf_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_j_2), lower = quantile(tot_Sf_h_j_2,probs = 0.05),upper = quantile(tot_Sf_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_h_a_2), lower = quantile(tot_Sf_h_a_2,probs = 0.05),upper = quantile(tot_Sf_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_j_1), lower = quantile(tot_Sf_2_j_1,probs = 0.05),upper = quantile(tot_Sf_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sf_2_2_1), lower = quantile(tot_Sf_2_2_1,probs = 0.05),upper = quantile(tot_Sf_2_2_1,probs = 0.95)),

  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'mu', mean = mean(cont_A_F1mu    ), lower = quantile(cont_A_F1mu    ,probs = 0.05),upper = quantile(cont_A_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'mu', mean = mean(cont_A_F2mu    ), lower = quantile(cont_A_F2mu    ,probs = 0.05),upper = quantile(cont_A_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w1), lower = quantile(cont_A_Sfjmu_w1,probs = 0.05),upper = quantile(cont_A_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w1), lower = quantile(cont_A_Sfamu_w1,probs = 0.05),upper = quantile(cont_A_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h1), lower = quantile(cont_A_Sfjmu_h1,probs = 0.05),upper = quantile(cont_A_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h1), lower = quantile(cont_A_Sfamu_h1,probs = 0.05),upper = quantile(cont_A_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_w2), lower = quantile(cont_A_Sfjmu_w2,probs = 0.05),upper = quantile(cont_A_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_w2), lower = quantile(cont_A_Sfamu_w2,probs = 0.05),upper = quantile(cont_A_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_h2), lower = quantile(cont_A_Sfjmu_h2,probs = 0.05),upper = quantile(cont_A_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_h2), lower = quantile(cont_A_Sfamu_h2,probs = 0.05),upper = quantile(cont_A_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfjmu_s ), lower = quantile(cont_A_Sfjmu_s ,probs = 0.05),upper = quantile(cont_A_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Sfamu_s ), lower = quantile(cont_A_Sfamu_s ,probs = 0.05),upper = quantile(cont_A_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'A', value = 'sd', mean = mean(cont_A_F1sd    ), lower = quantile(cont_A_F1sd    ,probs = 0.05),upper = quantile(cont_A_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'A', value = 'sd', mean = mean(cont_A_F2sd    ), lower = quantile(cont_A_F2sd    ,probs = 0.05),upper = quantile(cont_A_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w1), lower = quantile(cont_A_Sfjsd_w1,probs = 0.05),upper = quantile(cont_A_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w1), lower = quantile(cont_A_Sfasd_w1,probs = 0.05),upper = quantile(cont_A_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h1), lower = quantile(cont_A_Sfjsd_h1,probs = 0.05),upper = quantile(cont_A_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h1), lower = quantile(cont_A_Sfasd_h1,probs = 0.05),upper = quantile(cont_A_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_w2), lower = quantile(cont_A_Sfjsd_w2,probs = 0.05),upper = quantile(cont_A_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_w2), lower = quantile(cont_A_Sfasd_w2,probs = 0.05),upper = quantile(cont_A_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_h2), lower = quantile(cont_A_Sfjsd_h2,probs = 0.05),upper = quantile(cont_A_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_h2), lower = quantile(cont_A_Sfasd_h2,probs = 0.05),upper = quantile(cont_A_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfjsd_s ), lower = quantile(cont_A_Sfjsd_s ,probs = 0.05),upper = quantile(cont_A_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Sfasd_s ), lower = quantile(cont_A_Sfasd_s ,probs = 0.05),upper = quantile(cont_A_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'mu', mean = mean(cont_n_F1mu    ), lower = quantile(cont_n_F1mu    ,probs = 0.05),upper = quantile(cont_n_F1mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'mu', mean = mean(cont_n_F2mu    ), lower = quantile(cont_n_F2mu    ,probs = 0.05),upper = quantile(cont_n_F2mu    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w1), lower = quantile(cont_n_Sfjmu_w1,probs = 0.05),upper = quantile(cont_n_Sfjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w1), lower = quantile(cont_n_Sfamu_w1,probs = 0.05),upper = quantile(cont_n_Sfamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h1), lower = quantile(cont_n_Sfjmu_h1,probs = 0.05),upper = quantile(cont_n_Sfjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h1), lower = quantile(cont_n_Sfamu_h1,probs = 0.05),upper = quantile(cont_n_Sfamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_w2), lower = quantile(cont_n_Sfjmu_w2,probs = 0.05),upper = quantile(cont_n_Sfjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_w2), lower = quantile(cont_n_Sfamu_w2,probs = 0.05),upper = quantile(cont_n_Sfamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_h2), lower = quantile(cont_n_Sfjmu_h2,probs = 0.05),upper = quantile(cont_n_Sfjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_h2), lower = quantile(cont_n_Sfamu_h2,probs = 0.05),upper = quantile(cont_n_Sfamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfjmu_s ), lower = quantile(cont_n_Sfjmu_s ,probs = 0.05),upper = quantile(cont_n_Sfjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Sfamu_s ), lower = quantile(cont_n_Sfamu_s ,probs = 0.05),upper = quantile(cont_n_Sfamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F1', statistic = 'n', value = 'sd', mean = mean(cont_n_F1sd    ), lower = quantile(cont_n_F1sd    ,probs = 0.05),upper = quantile(cont_n_F1sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' F2', statistic = 'n', value = 'sd', mean = mean(cont_n_F2sd    ), lower = quantile(cont_n_F2sd    ,probs = 0.05),upper = quantile(cont_n_F2sd    ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w1), lower = quantile(cont_n_Sfjsd_w1,probs = 0.05),upper = quantile(cont_n_Sfjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w1), lower = quantile(cont_n_Sfasd_w1,probs = 0.05),upper = quantile(cont_n_Sfasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h1), lower = quantile(cont_n_Sfjsd_h1,probs = 0.05),upper = quantile(cont_n_Sfjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h1), lower = quantile(cont_n_Sfasd_h1,probs = 0.05),upper = quantile(cont_n_Sfasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_w2), lower = quantile(cont_n_Sfjsd_w2,probs = 0.05),upper = quantile(cont_n_Sfjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_w2), lower = quantile(cont_n_Sfasd_w2,probs = 0.05),upper = quantile(cont_n_Sfasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_h2), lower = quantile(cont_n_Sfjsd_h2,probs = 0.05),upper = quantile(cont_n_Sfjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_h2), lower = quantile(cont_n_Sfasd_h2,probs = 0.05),upper = quantile(cont_n_Sfasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfjsd_s ), lower = quantile(cont_n_Sfjsd_s ,probs = 0.05),upper = quantile(cont_n_Sfjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Female', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Sfasd_s ), lower = quantile(cont_n_Sfasd_s ,probs = 0.05),upper = quantile(cont_n_Sfasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_1), lower = quantile(tot_Sm_w_j_1,probs = 0.05),upper = quantile(tot_Sm_w_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_1), lower = quantile(tot_Sm_w_a_1,probs = 0.05),upper = quantile(tot_Sm_w_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_1), lower = quantile(tot_Sm_h_j_1,probs = 0.05),upper = quantile(tot_Sm_h_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_1), lower = quantile(tot_Sm_h_a_1,probs = 0.05),upper = quantile(tot_Sm_h_a_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_j_2), lower = quantile(tot_Sm_w_j_2,probs = 0.05),upper = quantile(tot_Sm_w_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_w_a_2), lower = quantile(tot_Sm_w_a_2,probs = 0.05),upper = quantile(tot_Sm_w_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_j_2), lower = quantile(tot_Sm_h_j_2,probs = 0.05),upper = quantile(tot_Sm_h_j_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_h_a_2), lower = quantile(tot_Sm_h_a_2,probs = 0.05),upper = quantile(tot_Sm_h_a_2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_j_1), lower = quantile(tot_Sm_2_j_1,probs = 0.05),upper = quantile(tot_Sm_2_j_1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'Total', value = 'Total', mean = mean(tot_Sm_2_2_1), lower = quantile(tot_Sm_2_2_1,probs = 0.05),upper = quantile(tot_Sm_2_2_1,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w1), lower = quantile(cont_A_Smjmu_w1,probs = 0.05),upper = quantile(cont_A_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w1), lower = quantile(cont_A_Smamu_w1,probs = 0.05),upper = quantile(cont_A_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h1), lower = quantile(cont_A_Smjmu_h1,probs = 0.05),upper = quantile(cont_A_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h1), lower = quantile(cont_A_Smamu_h1,probs = 0.05),upper = quantile(cont_A_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_w2), lower = quantile(cont_A_Smjmu_w2,probs = 0.05),upper = quantile(cont_A_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_w2), lower = quantile(cont_A_Smamu_w2,probs = 0.05),upper = quantile(cont_A_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_h2), lower = quantile(cont_A_Smjmu_h2,probs = 0.05),upper = quantile(cont_A_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_h2), lower = quantile(cont_A_Smamu_h2,probs = 0.05),upper = quantile(cont_A_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'mu', mean = mean(cont_A_Smjmu_s ), lower = quantile(cont_A_Smjmu_s ,probs = 0.05),upper = quantile(cont_A_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'mu', mean = mean(cont_A_Smamu_s ), lower = quantile(cont_A_Smamu_s ,probs = 0.05),upper = quantile(cont_A_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w1), lower = quantile(cont_A_Smjsd_w1,probs = 0.05),upper = quantile(cont_A_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w1), lower = quantile(cont_A_Smasd_w1,probs = 0.05),upper = quantile(cont_A_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h1), lower = quantile(cont_A_Smjsd_h1,probs = 0.05),upper = quantile(cont_A_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h1), lower = quantile(cont_A_Smasd_h1,probs = 0.05),upper = quantile(cont_A_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_w2), lower = quantile(cont_A_Smjsd_w2,probs = 0.05),upper = quantile(cont_A_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_w2), lower = quantile(cont_A_Smasd_w2,probs = 0.05),upper = quantile(cont_A_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_h2), lower = quantile(cont_A_Smjsd_h2,probs = 0.05),upper = quantile(cont_A_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_h2), lower = quantile(cont_A_Smasd_h2,probs = 0.05),upper = quantile(cont_A_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'A', value = 'sd', mean = mean(cont_A_Smjsd_s ), lower = quantile(cont_A_Smjsd_s ,probs = 0.05),upper = quantile(cont_A_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'A', value = 'sd', mean = mean(cont_A_Smasd_s ), lower = quantile(cont_A_Smasd_s ,probs = 0.05),upper = quantile(cont_A_Smasd_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w1), lower = quantile(cont_n_Smjmu_w1,probs = 0.05),upper = quantile(cont_n_Smjmu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w1), lower = quantile(cont_n_Smamu_w1,probs = 0.05),upper = quantile(cont_n_Smamu_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h1), lower = quantile(cont_n_Smjmu_h1,probs = 0.05),upper = quantile(cont_n_Smjmu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h1), lower = quantile(cont_n_Smamu_h1,probs = 0.05),upper = quantile(cont_n_Smamu_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_w2), lower = quantile(cont_n_Smjmu_w2,probs = 0.05),upper = quantile(cont_n_Smjmu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_w2), lower = quantile(cont_n_Smamu_w2,probs = 0.05),upper = quantile(cont_n_Smamu_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_h2), lower = quantile(cont_n_Smjmu_h2,probs = 0.05),upper = quantile(cont_n_Smjmu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_h2), lower = quantile(cont_n_Smamu_h2,probs = 0.05),upper = quantile(cont_n_Smamu_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'mu', mean = mean(cont_n_Smjmu_s ), lower = quantile(cont_n_Smjmu_s ,probs = 0.05),upper = quantile(cont_n_Smjmu_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'mu', mean = mean(cont_n_Smamu_s ), lower = quantile(cont_n_Smamu_s ,probs = 0.05),upper = quantile(cont_n_Smamu_s ,probs = 0.95)),
  
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w1), lower = quantile(cont_n_Smjsd_w1,probs = 0.05),upper = quantile(cont_n_Smjsd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w1), lower = quantile(cont_n_Smasd_w1,probs = 0.05),upper = quantile(cont_n_Smasd_w1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h1), lower = quantile(cont_n_Smjsd_h1,probs = 0.05),upper = quantile(cont_n_Smjsd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA1', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h1), lower = quantile(cont_n_Smasd_h1,probs = 0.05),upper = quantile(cont_n_Smasd_h1,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_w2), lower = quantile(cont_n_Smjsd_w2,probs = 0.05),upper = quantile(cont_n_Smjsd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'WA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_w2), lower = quantile(cont_n_Smasd_w2,probs = 0.05),upper = quantile(cont_n_Smasd_w2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HJ2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_h2), lower = quantile(cont_n_Smjsd_h2,probs = 0.05),upper = quantile(cont_n_Smjsd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = 'HA2', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_h2), lower = quantile(cont_n_Smasd_h2,probs = 0.05),upper = quantile(cont_n_Smasd_h2,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SJ', statistic = 'n', value = 'sd', mean = mean(cont_n_Smjsd_s ), lower = quantile(cont_n_Smjsd_s ,probs = 0.05),upper = quantile(cont_n_Smjsd_s ,probs = 0.95)),
  cbind.data.frame(sex = 'Male', type = 'Contribution', trait = ' SA', statistic = 'n', value = 'sd', mean = mean(cont_n_Smasd_s ), lower = quantile(cont_n_Smasd_s ,probs = 0.05),upper = quantile(cont_n_Smasd_s ,probs = 0.95))
  
)

tot_fec <- totF
tot_fwhy <- tot_Sf_w_j_1 + tot_Sf_w_j_2
tot_fwah <- tot_Sf_w_a_1 + tot_Sf_w_a_2
tot_fssy <- tot_Sf_2_j_1
tot_fsas <- tot_Sf_2_2_1
tot_fhhy <- tot_Sf_h_j_1 + tot_Sf_h_j_2
tot_fhah <- tot_Sf_h_a_1 + tot_Sf_h_a_2
tot_mwhy <- tot_Sm_w_j_1 + tot_Sm_w_j_2
tot_mwah <- tot_Sm_w_a_1 + tot_Sm_w_a_2
tot_mssy <- tot_Sm_2_j_1
tot_msas <- tot_Sm_2_2_1
tot_mhhy <- tot_Sm_h_j_1 + tot_Sm_h_j_2
tot_mhah <- tot_Sm_h_a_1 + tot_Sm_h_a_2

cont_total_prairie_2 <- rbind.data.frame(
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'FEC', statistic = 'Total', value = 'Total', mean = mean(tot_fec), lower = quantile(tot_fec,probs = 0.05),upper = quantile(tot_fec,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_fwhy), lower = quantile(tot_fwhy,probs = 0.05),upper = quantile(tot_fwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_fwah), lower = quantile(tot_fwah,probs = 0.05),upper = quantile(tot_fwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_fssy), lower = quantile(tot_fssy,probs = 0.05),upper = quantile(tot_fssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_fsas), lower = quantile(tot_fsas,probs = 0.05),upper = quantile(tot_fsas,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_fhhy), lower = quantile(tot_fhhy,probs = 0.05),upper = quantile(tot_fhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Female', type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_fhah), lower = quantile(tot_fhah,probs = 0.05),upper = quantile(tot_fhah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WHY', statistic = 'Total', value = 'Total', mean = mean(tot_mwhy), lower = quantile(tot_mwhy,probs = 0.05),upper = quantile(tot_mwhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'WAH', statistic = 'Total', value = 'Total', mean = mean(tot_mwah), lower = quantile(tot_mwah,probs = 0.05),upper = quantile(tot_mwah,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SSY', statistic = 'Total', value = 'Total', mean = mean(tot_mssy), lower = quantile(tot_mssy,probs = 0.05),upper = quantile(tot_mssy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'SAS', statistic = 'Total', value = 'Total', mean = mean(tot_msas), lower = quantile(tot_msas,probs = 0.05),upper = quantile(tot_msas,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HHY', statistic = 'Total', value = 'Total', mean = mean(tot_mhhy), lower = quantile(tot_mhhy,probs = 0.05),upper = quantile(tot_mhhy,probs = 0.95)),
  cbind.data.frame(Sex = 'Male',   type = 'Contribution', trait = 'HAH', statistic = 'Total', value = 'Total', mean = mean(tot_mhah), lower = quantile(tot_mhah,probs = 0.05),upper = quantile(tot_mhah,probs = 0.95))
)


###########################################################################
plot_cont <- cbind.data.frame(rbind.data.frame(cont_time_prairie_1,cont_time_prairie_2,cont_time_north_1, cont_time_north_2, cont_time_alaska_1, cont_time_alaska_2), 
                              Region = rep(c('Prairie','Boreal', 'Alaska'), each = 110 * 2), Reference = rep(c('Increase','Decrease'), each = 110, times = 3))



plot_total <- cbind.data.frame(rbind.data.frame(cont_total_alaska_1,cont_total_alaska_2,
                                                cont_total_north_1,cont_total_north_2,
                                                cont_total_prairie_1,cont_total_prairie_2),
                               expand.grid(Parameters = 1:13,  Reference  =  c('Increase','Decrease'), Region = c('Alaska','Boreal', 'Prairie')))
                       


write.csv(plot_total, file = 'plot_total.csv')

fig_3a <- plot_total %>% subset(Reference == 'Increase') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.05,.12)) + facet_wrap(~Sex, ncol = 2) +
  scale_x_discrete(labels = c(expression('F',H[AHY], H[HY], S[ASY], S[SY], W[AHY], W[HY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Increase\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig_3a
ggsave(fig_3a, file = 'comp_1.jpg', height = 8, width = 12, dpi = 640)

fig_3b <- plot_total %>% subset(Reference != 'Increase') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.05,.12)) + facet_wrap(~Sex, ncol = 2) +
  scale_x_discrete(labels = c(expression('F',H[AHY], H[HY], S[ASY], S[SY], W[AHY], W[HY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Decline\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig_3b
ggsave(fig_3b, file = 'comp_2.jpg',  height = 8, width = 12, dpi = 640)


plot_cont$demo_type <- ifelse(plot_cont$trait == "HJ1" | plot_cont$trait ==  "HA1" | plot_cont$trait ==  "HJ2" | plot_cont$trait == "HA2", 'Harvest',
                              ifelse(plot_cont$trait == "WJ1" | plot_cont$trait ==  "WA1" | plot_cont$trait ==  "WJ2" | plot_cont$trait == "WA2", 'Winter', 'Summer'))

fig1a_mu <- plot_cont %>% subset(statistic == 'A' & Reference == 'Increase' & demo_type == 'Harvest' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.12,.12)) + facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig1a_mu

fig1n_mu <- plot_cont %>% subset(statistic == 'n' & Reference == 'Increase' & demo_type == 'Harvest' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig1n_mu

fig1A_sd <- plot_cont %>% subset(statistic == 'A' & Reference == 'Increase' & demo_type == 'Harvest' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig1A_sd

fig1n_sd <- plot_cont %>% subset(statistic == 'n' & Reference == 'Increase' & demo_type == 'Harvest' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig1n_sd


fig2a_mu <- plot_cont %>% subset(statistic == 'A' & Reference == 'Increase' & demo_type == 'Winter' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.12,.12)) + facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig2a_mu

fig2n_mu <- plot_cont %>% subset(statistic == 'n' & Reference == 'Increase' & demo_type == 'Winter' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig2n_mu

fig2A_sd <- plot_cont %>% subset(statistic == 'A' & Reference == 'Increase' & demo_type == 'Winter' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig2A_sd

fig2n_sd <- plot_cont %>% subset(statistic == 'n' & Reference == 'Increase' & demo_type == 'Winter' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig2n_sd



fig3a_mu <- plot_cont %>% subset(statistic == 'A' & Reference == 'Increase' & demo_type == 'Summer' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.12,.12)) +facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig3a_mu

fig3n_mu <- plot_cont %>% subset(statistic == 'n' & Reference == 'Increase' & demo_type == 'Summer' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig3n_mu

fig3A_sd <- plot_cont %>% subset(statistic == 'A' & Reference == 'Increase' & demo_type == 'Summer' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig3A_sd

fig3n_sd <- plot_cont %>% subset(statistic == 'n' & Reference == 'Increase' & demo_type == 'Summer' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig3n_sd



require(grid) 
f1 <- ggarrange(fig1a_mu+ rremove("ylab") + rremove("xlab"),fig2a_mu+ rremove("ylab") + rremove("xlab") ,fig3a_mu+ rremove("ylab") + rremove("xlab"), ncol = 1, nrow = 3, labels = c('a','b','c'), common.legend = TRUE)

f1_star <- annotate_figure(f1, left = textGrob('Difference in Demographic Contributions to Population Growth\nDuring A Period of Growth Relative to Period of Steep Decline', 
                                    rot = 90, vjust = .5, gp = gpar(cex = 1.3)),  bottom = textGrob("Demographic Rate", gp = gpar(cex = 1.3)))
                
ggsave(f1_star , file = 'f1_star.jpg', height = 12, width = 8, dpi = 320)


#####################

fig4a_mu <- plot_cont %>% subset(statistic == 'A' & Reference != 'Increase' & demo_type == 'Harvest' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.12,.12)) + facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig4a_mu

fig4n_mu <- plot_cont %>% subset(statistic == 'n' & Reference != 'Increase' & demo_type == 'Harvest' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig4n_mu

fig4A_sd <- plot_cont %>% subset(statistic == 'A' & Reference != 'Increase' & demo_type == 'Harvest' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig4A_sd

fig4n_sd <- plot_cont %>% subset(statistic == 'n' & Reference != 'Increase' & demo_type == 'Harvest' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig4n_sd


fig5a_mu <- plot_cont %>% subset(statistic == 'A' & Reference != 'Increase' & demo_type == 'Winter' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.12,.12)) + facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig5a_mu

fig5n_mu <- plot_cont %>% subset(statistic == 'n' & Reference != 'Increase' & demo_type == 'Winter' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig5n_mu

fig5A_sd <- plot_cont %>% subset(statistic == 'A' & Reference != 'Increase' & demo_type == 'Winter' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig5A_sd

fig5n_sd <- plot_cont %>% subset(statistic == 'n' & Reference != 'Increase' & demo_type == 'Winter' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(AHY[GC],AHY[CV],HY[GC],HY[CV])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig5n_sd



fig6a_mu <- plot_cont %>% subset(statistic == 'A' & Reference != 'Increase' & demo_type == 'Summer' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  coord_cartesian(ylim = c(-.12,.12)) + facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig6a_mu

fig6n_mu <- plot_cont %>% subset(statistic == 'n' & Reference != 'Increase' & demo_type == 'Summer' & value == 'mu') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig6n_mu

fig6A_sd <- plot_cont %>% subset(statistic == 'A' & Reference != 'Increase' & demo_type == 'Summer' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig6A_sd

fig6n_sd <- plot_cont %>% subset(statistic == 'n' & Reference != 'Increase' & demo_type == 'Summer' & value == 'sd') %>% 
  ggplot(aes(x = trait, y = mean, fill = Region)) + 
  geom_bar(aes(x = trait, y = mean, fill = Region),alpha = .75, color = NA, stat ='identity',position = position_dodge2(.25)) + 
  geom_pointrange2(aes(x = trait, y = mean, ymin = lower, ymax = upper), color = 'black', size = .67,position = position_dodge2(.9)) + 
  scale_color_see_d() +  scale_fill_see_d() + scale_alpha_manual(values = c(.85,.05), guide = 'none')+geom_hline(yintercept = 0) + 
  facet_wrap(~ sex, ncol = 2) +
  scale_x_discrete(labels = c(expression(F[SY],F[ASY],S[ASY],SY[SY])))+
  labs(y = 'Difference in Demographic Contributions to\nPopulation Growth During A Period of Growth\nRelative to Period of Steep Decline', x = 'Demographic Rate') +
  theme_modern(base_size = 18, axis.title.size = 18, axis.text.size = 18, legend.text.size = 18, legend.title.size = 18, legend.position = 'top',)
fig6n_sd

require(grid) 
f2 <- ggarrange(fig4a_mu+ rremove("ylab") + rremove("xlab"),fig5a_mu+ rremove("ylab") + rremove("xlab") ,fig6a_mu+ rremove("ylab") + rremove("xlab"), ncol = 1, nrow = 3, labels = c('a','b','c'), common.legend = TRUE)



f2_star <- annotate_figure(f2, left = textGrob('Difference in Demographic Contributions to Population Growth\nDuring A Period of Decline Relative to Period of Steep Decline', 
                                               rot = 90, vjust = .5, gp = gpar(cex = 1.3)),  bottom = textGrob("Demographic Rate", gp = gpar(cex = 1.3)))


ggsave(f2_star , file = 'f2_star.jpg', height = 12, width = 8, dpi = 320)

